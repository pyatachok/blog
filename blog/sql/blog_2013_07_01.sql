-- phpMyAdmin SQL Dump
-- version 3.4.11.1deb1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: Jul 01, 2013 at 06:20 PM
-- Server version: 5.5.31
-- PHP Version: 5.4.6-1ubuntu1.2

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `blog`
--

-- --------------------------------------------------------

--
-- Table structure for table `wp_commentmeta`
--

CREATE TABLE IF NOT EXISTS `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `wp_comments`
--

CREATE TABLE IF NOT EXISTS `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext NOT NULL,
  `comment_author_email` varchar(100) NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) NOT NULL DEFAULT '',
  `comment_type` varchar(20) NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `wp_comments`
--

INSERT INTO `wp_comments` (`comment_ID`, `comment_post_ID`, `comment_author`, `comment_author_email`, `comment_author_url`, `comment_author_IP`, `comment_date`, `comment_date_gmt`, `comment_content`, `comment_karma`, `comment_approved`, `comment_agent`, `comment_type`, `comment_parent`, `user_id`) VALUES
(1, 1, 'Мистер WordPress', '', 'http://wordpress.org/', '', '2013-05-31 18:08:55', '2013-05-31 18:08:55', 'Привет! Это комментарий. <br />Чтобы его удалить, авторизуйтесь и просмотрите комментарии. Там будут ссылки для удаления или изменения комментариев. <font color="red">Для защиты от спама рекомендуется сразу после первичной настройки установить один или комбинацию плагинов.</font><br /> Например: Akismet, ReCapctha, Math Comment protection, MaxSite.org ant-spam image, Bad Behavior, Novikov''s Parasite Eliminator. Все плагины легко найти через форумы и в поисковых системах.', 0, '1', '', '', 0, 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_links`
--

CREATE TABLE IF NOT EXISTS `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) NOT NULL DEFAULT '',
  `link_name` varchar(255) NOT NULL DEFAULT '',
  `link_image` varchar(255) NOT NULL DEFAULT '',
  `link_target` varchar(25) NOT NULL DEFAULT '',
  `link_description` varchar(255) NOT NULL DEFAULT '',
  `link_visible` varchar(20) NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) NOT NULL DEFAULT '',
  `link_notes` mediumtext NOT NULL,
  `link_rss` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;

-- --------------------------------------------------------

--
-- Table structure for table `wp_options`
--

CREATE TABLE IF NOT EXISTS `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(64) NOT NULL DEFAULT '',
  `option_value` longtext NOT NULL,
  `autoload` varchar(20) NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=693 ;

--
-- Dumping data for table `wp_options`
--

INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(1, 'siteurl', 'http://blog', 'yes'),
(2, 'blogname', 'Maus&#039;s Blog', 'yes'),
(3, 'blogdescription', 'Блог php-разработчика', 'yes'),
(4, 'users_can_register', '0', 'yes'),
(5, 'admin_email', 'imychkova@gmail.com', 'yes'),
(6, 'start_of_week', '1', 'yes'),
(7, 'use_balanceTags', '0', 'yes'),
(8, 'use_smilies', '1', 'yes'),
(9, 'require_name_email', '1', 'yes'),
(10, 'comments_notify', '1', 'yes'),
(11, 'posts_per_rss', '10', 'yes'),
(12, 'rss_use_excerpt', '0', 'yes'),
(13, 'mailserver_url', 'mail.example.com', 'yes'),
(14, 'mailserver_login', 'login@example.com', 'yes'),
(15, 'mailserver_pass', 'password', 'yes'),
(16, 'mailserver_port', '110', 'yes'),
(17, 'default_category', '1', 'yes'),
(18, 'default_comment_status', 'open', 'yes'),
(19, 'default_ping_status', 'open', 'yes'),
(20, 'default_pingback_flag', '0', 'yes'),
(21, 'posts_per_page', '10', 'yes'),
(22, 'date_format', 'j F Y', 'yes'),
(23, 'time_format', 'G:i', 'yes'),
(24, 'links_updated_date_format', 'j F Y G:i', 'yes'),
(25, 'links_recently_updated_prepend', '<em>', 'yes'),
(26, 'links_recently_updated_append', '</em>', 'yes'),
(27, 'links_recently_updated_time', '120', 'yes'),
(28, 'comment_moderation', '0', 'yes'),
(29, 'moderation_notify', '1', 'yes'),
(30, 'permalink_structure', '/%postname%/', 'yes'),
(31, 'gzipcompression', '0', 'yes'),
(32, 'hack_file', '0', 'yes'),
(33, 'blog_charset', 'UTF-8', 'yes'),
(34, 'moderation_keys', '', 'no'),
(35, 'active_plugins', 'a:5:{i:0;s:36:"contact-form-7/wp-contact-form-7.php";i:1;s:22:"cyr2lat/cyr-to-lat.php";i:2;s:9:"rh/rh.php";i:3;s:16:"russian-date.php";i:4;s:39:"syntaxhighlighter/syntaxhighlighter.php";}', 'yes'),
(36, 'home', 'http://blog', 'yes'),
(37, 'category_base', '', 'yes'),
(38, 'ping_sites', 'http://rpc.pingomatic.com/', 'yes'),
(39, 'advanced_edit', '0', 'yes'),
(40, 'comment_max_links', '2', 'yes'),
(41, 'gmt_offset', '0', 'yes'),
(42, 'default_email_category', '1', 'yes'),
(43, 'recently_edited', 'a:5:{i:0;s:56:"/var/www/blog/blog/wp-content/themes/theme1934/style.css";i:2;s:57:"/var/www/blog/blog/wp-content/themes/theme1934/slider.php";i:3;s:70:"/var/www/blog/blog/wp-content/themes/theme1934/includes/theme-init.php";i:4;s:72:"/var/www/blog/blog/wp-content/themes/theme1934/includes/sidebar-init.php";i:5;s:55:"/var/www/blog/blog/wp-content/themes/theme1934/head.php";}', 'no'),
(44, 'template', 'CherryFramework', 'yes'),
(45, 'stylesheet', 'theme1934', 'yes'),
(46, 'comment_whitelist', '1', 'yes'),
(47, 'blacklist_keys', '', 'no'),
(48, 'comment_registration', '0', 'yes'),
(49, 'html_type', 'text/html', 'yes'),
(50, 'use_trackback', '0', 'yes'),
(51, 'default_role', 'subscriber', 'yes'),
(52, 'db_version', '22441', 'yes'),
(53, 'uploads_use_yearmonth_folders', '1', 'yes'),
(54, 'upload_path', '', 'yes'),
(55, 'blog_public', '0', 'yes'),
(56, 'default_link_category', '2', 'yes'),
(57, 'show_on_front', 'posts', 'yes'),
(58, 'tag_base', '', 'yes'),
(59, 'show_avatars', '1', 'yes'),
(60, 'avatar_rating', 'G', 'yes'),
(61, 'upload_url_path', '', 'yes'),
(62, 'thumbnail_size_w', '150', 'yes'),
(63, 'thumbnail_size_h', '150', 'yes'),
(64, 'thumbnail_crop', '1', 'yes'),
(65, 'medium_size_w', '300', 'yes'),
(66, 'medium_size_h', '300', 'yes'),
(67, 'avatar_default', 'mystery', 'yes'),
(68, 'large_size_w', '1024', 'yes'),
(69, 'large_size_h', '1024', 'yes'),
(70, 'image_default_link_type', 'file', 'yes'),
(71, 'image_default_size', '', 'yes'),
(72, 'image_default_align', '', 'yes'),
(73, 'close_comments_for_old_posts', '0', 'yes'),
(74, 'close_comments_days_old', '14', 'yes'),
(75, 'thread_comments', '1', 'yes'),
(76, 'thread_comments_depth', '5', 'yes'),
(77, 'page_comments', '0', 'yes'),
(78, 'comments_per_page', '50', 'yes'),
(79, 'default_comments_page', 'newest', 'yes'),
(80, 'comment_order', 'asc', 'yes'),
(81, 'sticky_posts', 'a:0:{}', 'yes'),
(82, 'widget_categories', 'a:2:{i:2;a:4:{s:5:"title";s:0:"";s:5:"count";i:0;s:12:"hierarchical";i:0;s:8:"dropdown";i:0;}s:12:"_multiwidget";i:1;}', 'yes'),
(83, 'widget_text', 'a:0:{}', 'yes'),
(84, 'widget_rss', 'a:0:{}', 'yes'),
(85, 'uninstall_plugins', 'a:0:{}', 'no'),
(86, 'timezone_string', '', 'yes'),
(87, 'page_for_posts', '0', 'yes'),
(88, 'page_on_front', '0', 'yes'),
(89, 'default_post_format', '0', 'yes'),
(90, 'link_manager_enabled', '0', 'yes'),
(91, 'initial_db_version', '22441', 'yes'),
(92, 'wp_user_roles', 'a:5:{s:13:"administrator";a:2:{s:4:"name";s:13:"Administrator";s:12:"capabilities";a:62:{s:13:"switch_themes";b:1;s:11:"edit_themes";b:1;s:16:"activate_plugins";b:1;s:12:"edit_plugins";b:1;s:10:"edit_users";b:1;s:10:"edit_files";b:1;s:14:"manage_options";b:1;s:17:"moderate_comments";b:1;s:17:"manage_categories";b:1;s:12:"manage_links";b:1;s:12:"upload_files";b:1;s:6:"import";b:1;s:15:"unfiltered_html";b:1;s:10:"edit_posts";b:1;s:17:"edit_others_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:10:"edit_pages";b:1;s:4:"read";b:1;s:8:"level_10";b:1;s:7:"level_9";b:1;s:7:"level_8";b:1;s:7:"level_7";b:1;s:7:"level_6";b:1;s:7:"level_5";b:1;s:7:"level_4";b:1;s:7:"level_3";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:17:"edit_others_pages";b:1;s:20:"edit_published_pages";b:1;s:13:"publish_pages";b:1;s:12:"delete_pages";b:1;s:19:"delete_others_pages";b:1;s:22:"delete_published_pages";b:1;s:12:"delete_posts";b:1;s:19:"delete_others_posts";b:1;s:22:"delete_published_posts";b:1;s:20:"delete_private_posts";b:1;s:18:"edit_private_posts";b:1;s:18:"read_private_posts";b:1;s:20:"delete_private_pages";b:1;s:18:"edit_private_pages";b:1;s:18:"read_private_pages";b:1;s:12:"delete_users";b:1;s:12:"create_users";b:1;s:17:"unfiltered_upload";b:1;s:14:"edit_dashboard";b:1;s:14:"update_plugins";b:1;s:14:"delete_plugins";b:1;s:15:"install_plugins";b:1;s:13:"update_themes";b:1;s:14:"install_themes";b:1;s:11:"update_core";b:1;s:10:"list_users";b:1;s:12:"remove_users";b:1;s:9:"add_users";b:1;s:13:"promote_users";b:1;s:18:"edit_theme_options";b:1;s:13:"delete_themes";b:1;s:6:"export";b:1;}}s:6:"editor";a:2:{s:4:"name";s:6:"Editor";s:12:"capabilities";a:34:{s:17:"moderate_comments";b:1;s:17:"manage_categories";b:1;s:12:"manage_links";b:1;s:12:"upload_files";b:1;s:15:"unfiltered_html";b:1;s:10:"edit_posts";b:1;s:17:"edit_others_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:10:"edit_pages";b:1;s:4:"read";b:1;s:7:"level_7";b:1;s:7:"level_6";b:1;s:7:"level_5";b:1;s:7:"level_4";b:1;s:7:"level_3";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:17:"edit_others_pages";b:1;s:20:"edit_published_pages";b:1;s:13:"publish_pages";b:1;s:12:"delete_pages";b:1;s:19:"delete_others_pages";b:1;s:22:"delete_published_pages";b:1;s:12:"delete_posts";b:1;s:19:"delete_others_posts";b:1;s:22:"delete_published_posts";b:1;s:20:"delete_private_posts";b:1;s:18:"edit_private_posts";b:1;s:18:"read_private_posts";b:1;s:20:"delete_private_pages";b:1;s:18:"edit_private_pages";b:1;s:18:"read_private_pages";b:1;}}s:6:"author";a:2:{s:4:"name";s:6:"Author";s:12:"capabilities";a:10:{s:12:"upload_files";b:1;s:10:"edit_posts";b:1;s:20:"edit_published_posts";b:1;s:13:"publish_posts";b:1;s:4:"read";b:1;s:7:"level_2";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:12:"delete_posts";b:1;s:22:"delete_published_posts";b:1;}}s:11:"contributor";a:2:{s:4:"name";s:11:"Contributor";s:12:"capabilities";a:5:{s:10:"edit_posts";b:1;s:4:"read";b:1;s:7:"level_1";b:1;s:7:"level_0";b:1;s:12:"delete_posts";b:1;}}s:10:"subscriber";a:2:{s:4:"name";s:10:"Subscriber";s:12:"capabilities";a:2:{s:4:"read";b:1;s:7:"level_0";b:1;}}}', 'yes'),
(93, 'widget_search', 'a:2:{i:2;a:1:{s:5:"title";s:0:"";}s:12:"_multiwidget";i:1;}', 'yes'),
(94, 'widget_recent-posts', 'a:2:{i:2;a:2:{s:5:"title";s:0:"";s:6:"number";i:5;}s:12:"_multiwidget";i:1;}', 'yes'),
(95, 'widget_recent-comments', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(96, 'widget_archives', 'a:1:{s:12:"_multiwidget";i:1;}', 'yes'),
(97, 'widget_meta', 'a:2:{i:2;a:1:{s:5:"title";s:0:"";}s:12:"_multiwidget";i:1;}', 'yes'),
(98, 'sidebars_widgets', 'a:3:{s:19:"wp_inactive_widgets";a:0:{}s:12:"main-sidebar";a:4:{i:0;s:8:"search-2";i:1;s:14:"recent-posts-2";i:2;s:12:"categories-2";i:3;s:6:"meta-2";}s:13:"array_version";i:3;}', 'yes'),
(99, 'cron', 'a:4:{i:1372615741;a:3:{s:16:"wp_version_check";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}s:17:"wp_update_plugins";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}s:16:"wp_update_themes";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:10:"twicedaily";s:4:"args";a:0:{}s:8:"interval";i:43200;}}}i:1372616387;a:1:{s:19:"wp_scheduled_delete";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:5:"daily";s:4:"args";a:0:{}s:8:"interval";i:86400;}}}i:1372685083;a:1:{s:30:"wp_scheduled_auto_draft_delete";a:1:{s:32:"40cd750bba9870f18aada2478b24840a";a:3:{s:8:"schedule";s:5:"daily";s:4:"args";a:0:{}s:8:"interval";i:86400;}}}s:7:"version";i:2;}', 'yes'),
(101, '_transient_random_seed', '8ae9cd72f89e39eefa439b3be78fde79', 'yes'),
(102, 'auth_key', '/w:kIm2 9zfWjv;/4g?P& Z&W^=J1M8=>}sN.g*5#MaK8l8C,EW =-z.wY~*_Py4', 'yes'),
(103, '_site_transient_update_core', 'O:8:"stdClass":3:{s:7:"updates";a:1:{i:0;O:8:"stdClass":9:{s:8:"response";s:6:"latest";s:8:"download";s:63:"http://mywordpress.ru/files/wordpress/wordpress-3.5.1-ru_RU.zip";s:6:"locale";s:5:"ru_RU";s:8:"packages";O:8:"stdClass":4:{s:4:"full";s:63:"http://mywordpress.ru/files/wordpress/wordpress-3.5.1-ru_RU.zip";s:10:"no_content";b:0;s:11:"new_bundled";b:0;s:7:"partial";b:0;}s:7:"current";s:5:"3.5.1";s:11:"php_version";s:5:"5.2.4";s:13:"mysql_version";s:3:"5.0";s:11:"new_bundled";s:3:"3.2";s:15:"partial_version";s:0:"";}}s:12:"last_checked";i:1372613892;s:15:"version_checked";s:5:"3.5.1";}', 'yes'),
(104, 'auth_salt', 'yq R%FqO,%7X-g9%`~N4HC<.|`HS()emXn 8H:)g|:^V%&,YVltG3#S7bQ5ga:Mm', 'yes'),
(105, 'logged_in_key', 's*(]k^JNl[+H|X;QfEM1^8t}~YZwlX;q#& WZR$Pm I4bDEUC8$R8)esurpiwhEG', 'yes'),
(106, '_site_transient_update_plugins', 'O:8:"stdClass":2:{s:12:"last_checked";i:1372613892;s:8:"response";a:2:{s:19:"akismet/akismet.php";O:8:"stdClass":5:{s:2:"id";s:2:"15";s:4:"slug";s:7:"akismet";s:11:"new_version";s:5:"2.5.8";s:3:"url";s:37:"http://wordpress.org/plugins/akismet/";s:7:"package";s:55:"http://downloads.wordpress.org/plugin/akismet.2.5.8.zip";}s:36:"contact-form-7/wp-contact-form-7.php";O:8:"stdClass":5:{s:2:"id";s:3:"790";s:4:"slug";s:14:"contact-form-7";s:11:"new_version";s:5:"3.4.2";s:3:"url";s:44:"http://wordpress.org/plugins/contact-form-7/";s:7:"package";s:62:"http://downloads.wordpress.org/plugin/contact-form-7.3.4.2.zip";}}}', 'yes'),
(107, 'logged_in_salt', 'Jz?{~7|WC;5uzL.ZRDw9D1ik>`,kTm+Zpx3.^HA+,jLB1]Tz]L/M4!%907AY4JM%', 'yes'),
(110, '_site_transient_update_themes', 'O:8:"stdClass":3:{s:12:"last_checked";i:1372613895;s:7:"checked";a:4:{s:15:"CherryFramework";s:3:"1.0";s:9:"theme1934";s:3:"1.0";s:12:"twentyeleven";s:3:"1.5";s:12:"twentytwelve";s:3:"1.1";}s:8:"response";a:0:{}}', 'yes'),
(113, 'dashboard_widget_options', 'a:4:{s:25:"dashboard_recent_comments";a:1:{s:5:"items";i:5;}s:24:"dashboard_incoming_links";a:5:{s:4:"home";s:11:"http://blog";s:4:"link";s:87:"http://blogsearch.google.com/blogsearch?scoring=d&partner=wordpress&q=link:http://blog/";s:3:"url";s:120:"http://blogsearch.google.com/blogsearch_feeds?scoring=d&ie=utf-8&num=10&output=rss&partner=wordpress&q=link:http://blog/";s:5:"items";i:10;s:9:"show_date";b:0;}s:17:"dashboard_primary";a:7:{s:4:"link";s:22:"http://mywordpress.ru/";s:3:"url";s:27:"http://mywordpress.ru/feed/";s:5:"title";s:18:"Блог Wordpress";s:5:"items";i:2;s:12:"show_summary";i:1;s:11:"show_author";i:0;s:9:"show_date";i:1;}s:19:"dashboard_secondary";a:7:{s:4:"link";s:28:"http://planet.wordpress.org/";s:3:"url";s:33:"http://planet.wordpress.org/feed/";s:5:"title";s:37:"Другие новости WordPress";s:5:"items";i:5;s:12:"show_summary";i:0;s:11:"show_author";i:0;s:9:"show_date";i:0;}}', 'yes'),
(114, 'nonce_key', 'F3F_{KNo.Qs$@%,U~XRNLC_,M,ecNi!U5buX?bJT;eVA.kR)7(*1;h>dHtfjT?Kv', 'yes'),
(115, 'nonce_salt', 'yVYHsEE>fuPHlE+GBcj,rV^;|/v$QtoV^.u&;%dJNZ?O^E.pp-<+|qd`Sl$#]e  ', 'yes'),
(116, 'rushelper_nag_count', '10', 'yes'),
(117, 'can_compress_scripts', '0', 'yes'),
(151, 'ftp_credentials', 'a:3:{s:8:"hostname";s:9:"localhost";s:8:"username";s:9:"pyatachok";s:15:"connection_type";s:3:"ftp";}', 'yes'),
(152, '_site_transient_timeout_popular_importers_ru_RU', '1370197917', 'yes'),
(153, '_site_transient_popular_importers_ru_RU', 'a:2:{s:9:"importers";a:8:{s:7:"blogger";a:4:{s:4:"name";s:7:"Blogger";s:11:"description";s:86:"Install the Blogger importer to import posts, comments, and users from a Blogger blog.";s:11:"plugin-slug";s:16:"blogger-importer";s:11:"importer-id";s:7:"blogger";}s:9:"wpcat2tag";a:4:{s:4:"name";s:29:"Categories and Tags Converter";s:11:"description";s:109:"Install the category/tag converter to convert existing categories to tags or tags to categories, selectively.";s:11:"plugin-slug";s:18:"wpcat2tag-importer";s:11:"importer-id";s:9:"wpcat2tag";}s:11:"livejournal";a:4:{s:4:"name";s:11:"LiveJournal";s:11:"description";s:82:"Install the LiveJournal importer to import posts from LiveJournal using their API.";s:11:"plugin-slug";s:20:"livejournal-importer";s:11:"importer-id";s:11:"livejournal";}s:11:"movabletype";a:4:{s:4:"name";s:24:"Movable Type and TypePad";s:11:"description";s:99:"Install the Movable Type importer to import posts and comments from a Movable Type or TypePad blog.";s:11:"plugin-slug";s:20:"movabletype-importer";s:11:"importer-id";s:2:"mt";}s:4:"opml";a:4:{s:4:"name";s:8:"Blogroll";s:11:"description";s:61:"Install the blogroll importer to import links in OPML format.";s:11:"plugin-slug";s:13:"opml-importer";s:11:"importer-id";s:4:"opml";}s:3:"rss";a:4:{s:4:"name";s:3:"RSS";s:11:"description";s:58:"Install the RSS importer to import posts from an RSS feed.";s:11:"plugin-slug";s:12:"rss-importer";s:11:"importer-id";s:3:"rss";}s:6:"tumblr";a:4:{s:4:"name";s:6:"Tumblr";s:11:"description";s:84:"Install the Tumblr importer to import posts &amp; media from Tumblr using their API.";s:11:"plugin-slug";s:15:"tumblr-importer";s:11:"importer-id";s:6:"tumblr";}s:9:"wordpress";a:4:{s:4:"name";s:9:"WordPress";s:11:"description";s:130:"Install the WordPress importer to import posts, pages, comments, custom fields, categories, and tags from a WordPress export file.";s:11:"plugin-slug";s:18:"wordpress-importer";s:11:"importer-id";s:9:"wordpress";}}s:10:"translated";b:0;}', 'yes'),
(154, 'theme_mods_twentytwelve', 'a:1:{s:16:"sidebars_widgets";a:2:{s:4:"time";i:1370025341;s:4:"data";a:4:{s:19:"wp_inactive_widgets";a:0:{}s:9:"sidebar-1";a:6:{i:0;s:8:"search-2";i:1;s:14:"recent-posts-2";i:2;s:17:"recent-comments-2";i:3;s:10:"archives-2";i:4;s:12:"categories-2";i:5;s:6:"meta-2";}s:9:"sidebar-2";a:0:{}s:9:"sidebar-3";a:0:{}}}}', 'yes'),
(155, 'current_theme', 'theme1934', 'yes'),
(156, 'theme_mods_theme1934', 'a:2:{i:0;b:0;s:18:"nav_menu_locations";a:2:{s:11:"header_menu";i:4;s:11:"footer_menu";i:0;}}', 'yes'),
(157, 'theme_switched', '', 'yes'),
(158, 'optionsframework', 'a:2:{s:2:"id";s:9:"themeXXXX";s:12:"knownoptions";a:1:{i:0;s:9:"themeXXXX";}}', 'yes'),
(159, 'themeXXXX', 'a:58:{s:15:"body_background";a:5:{s:5:"color";s:0:"";s:5:"image";s:0:"";s:6:"repeat";s:6:"repeat";s:8:"position";s:10:"top center";s:10:"attachment";s:6:"scroll";}s:12:"header_color";s:0:"";s:11:"links_color";s:0:"";s:14:"google_mixed_3";a:5:{s:4:"size";s:4:"12px";s:4:"face";s:28:"Arial, Helvetica, sans-serif";s:5:"style";s:6:"normal";s:10:"lineheight";s:4:"18px";s:5:"color";s:7:"#333333";}s:10:"h1_heading";a:5:{s:4:"size";s:4:"30px";s:4:"face";s:28:"Arial, Helvetica, sans-serif";s:5:"style";s:6:"normal";s:10:"lineheight";s:4:"30px";s:5:"color";s:7:"#333333";}s:10:"h2_heading";a:5:{s:4:"size";s:4:"22px";s:4:"face";s:28:"Arial, Helvetica, sans-serif";s:5:"style";s:6:"normal";s:10:"lineheight";s:4:"22px";s:5:"color";s:7:"#333333";}s:10:"h3_heading";a:5:{s:4:"size";s:4:"18px";s:4:"face";s:28:"Arial, Helvetica, sans-serif";s:5:"style";s:6:"normal";s:10:"lineheight";s:4:"18px";s:5:"color";s:7:"#333333";}s:10:"h4_heading";a:5:{s:4:"size";s:4:"14px";s:4:"face";s:28:"Arial, Helvetica, sans-serif";s:5:"style";s:6:"normal";s:10:"lineheight";s:4:"18px";s:5:"color";s:7:"#333333";}s:10:"h5_heading";a:5:{s:4:"size";s:4:"12px";s:4:"face";s:28:"Arial, Helvetica, sans-serif";s:5:"style";s:6:"normal";s:10:"lineheight";s:4:"18px";s:5:"color";s:7:"#333333";}s:10:"h6_heading";a:5:{s:4:"size";s:4:"12px";s:4:"face";s:28:"Arial, Helvetica, sans-serif";s:5:"style";s:6:"normal";s:10:"lineheight";s:4:"18px";s:5:"color";s:7:"#333333";}s:15:"g_search_box_id";s:2:"no";s:16:"g_breadcrumbs_id";s:3:"yes";s:10:"custom_css";s:0:"";s:9:"logo_type";s:9:"text_logo";s:8:"logo_url";s:52:"http://blog/wp-content/uploads/2013/05/mouse-sm2.png";s:7:"favicon";s:51:"http://blog/wp-content/themes/theme1934/favicon.ico";s:8:"sf_delay";s:4:"1000";s:14:"sf_f_animation";s:4:"show";s:15:"sf_sl_animation";s:4:"show";s:8:"sf_speed";s:6:"normal";s:9:"sf_arrows";s:5:"false";s:9:"sl_effect";s:6:"random";s:10:"sl_columns";s:2:"12";s:7:"sl_rows";s:1:"8";s:9:"sl_banner";s:14:"fadeFromBottom";s:12:"sl_pausetime";s:4:"7000";s:18:"sl_animation_speed";s:4:"1500";s:12:"sl_slideshow";s:5:"false";s:13:"sl_thumbnails";s:5:"false";s:14:"sl_control_nav";s:5:"false";s:10:"sl_dir_nav";s:5:"false";s:15:"sl_dir_nav_hide";s:5:"false";s:20:"sl_play_pause_button";s:5:"false";s:9:"sl_loader";s:2:"no";s:9:"blog_text";s:4:"Blog";s:12:"blog_related";s:13:"Related Posts";s:16:"blog_sidebar_pos";s:5:"right";s:15:"post_image_size";s:6:"normal";s:17:"single_image_size";s:6:"normal";s:9:"post_meta";s:4:"true";s:12:"post_excerpt";s:4:"true";s:12:"folio_filter";s:3:"yes";s:11:"folio_title";s:3:"yes";s:13:"folio_excerpt";s:3:"yes";s:19:"folio_excerpt_count";s:2:"20";s:9:"folio_btn";s:3:"yes";s:11:"layout_mode";s:7:"fitRows";s:12:"items_count2";s:1:"8";s:12:"items_count3";s:1:"9";s:12:"items_count4";s:2:"12";s:11:"footer_text";s:0:"";s:7:"ga_code";s:0:"";s:8:"feed_url";s:0:"";s:11:"footer_menu";s:4:"true";s:15:"footer_facebook";s:0:"";s:16:"footer_pinterest";s:0:"";s:14:"footer_twitter";s:0:"";s:10:"footer_rss";s:0:"";}', 'yes'),
(165, 'recently_activated', 'a:0:{}', 'yes'),
(166, 'wpcf7', 'a:1:{s:7:"version";s:3:"3.3";}', 'yes'),
(262, 'rewrite_rules', 'a:164:{s:47:"category/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$";s:52:"index.php?category_name=$matches[1]&feed=$matches[2]";s:42:"category/(.+?)/(feed|rdf|rss|rss2|atom)/?$";s:52:"index.php?category_name=$matches[1]&feed=$matches[2]";s:35:"category/(.+?)/page/?([0-9]{1,})/?$";s:53:"index.php?category_name=$matches[1]&paged=$matches[2]";s:17:"category/(.+?)/?$";s:35:"index.php?category_name=$matches[1]";s:44:"tag/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?tag=$matches[1]&feed=$matches[2]";s:39:"tag/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?tag=$matches[1]&feed=$matches[2]";s:32:"tag/([^/]+)/page/?([0-9]{1,})/?$";s:43:"index.php?tag=$matches[1]&paged=$matches[2]";s:14:"tag/([^/]+)/?$";s:25:"index.php?tag=$matches[1]";s:45:"type/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?post_format=$matches[1]&feed=$matches[2]";s:40:"type/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?post_format=$matches[1]&feed=$matches[2]";s:33:"type/([^/]+)/page/?([0-9]{1,})/?$";s:51:"index.php?post_format=$matches[1]&paged=$matches[2]";s:15:"type/([^/]+)/?$";s:33:"index.php?post_format=$matches[1]";s:38:"slide-view/[^/]+/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:48:"slide-view/[^/]+/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:68:"slide-view/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:63:"slide-view/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:63:"slide-view/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:31:"slide-view/([^/]+)/trackback/?$";s:32:"index.php?slide=$matches[1]&tb=1";s:51:"slide-view/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:44:"index.php?slide=$matches[1]&feed=$matches[2]";s:46:"slide-view/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:44:"index.php?slide=$matches[1]&feed=$matches[2]";s:39:"slide-view/([^/]+)/page/?([0-9]{1,})/?$";s:45:"index.php?slide=$matches[1]&paged=$matches[2]";s:46:"slide-view/([^/]+)/comment-page-([0-9]{1,})/?$";s:45:"index.php?slide=$matches[1]&cpage=$matches[2]";s:31:"slide-view/([^/]+)(/[0-9]+)?/?$";s:44:"index.php?slide=$matches[1]&page=$matches[2]";s:27:"slide-view/[^/]+/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:37:"slide-view/[^/]+/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:57:"slide-view/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:"slide-view/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:"slide-view/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:40:"portfolio-view/.+?/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:50:"portfolio-view/.+?/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:70:"portfolio-view/.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:65:"portfolio-view/.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:65:"portfolio-view/.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:33:"portfolio-view/(.+?)/trackback/?$";s:36:"index.php?portfolio=$matches[1]&tb=1";s:53:"portfolio-view/(.+?)/feed/(feed|rdf|rss|rss2|atom)/?$";s:48:"index.php?portfolio=$matches[1]&feed=$matches[2]";s:48:"portfolio-view/(.+?)/(feed|rdf|rss|rss2|atom)/?$";s:48:"index.php?portfolio=$matches[1]&feed=$matches[2]";s:41:"portfolio-view/(.+?)/page/?([0-9]{1,})/?$";s:49:"index.php?portfolio=$matches[1]&paged=$matches[2]";s:48:"portfolio-view/(.+?)/comment-page-([0-9]{1,})/?$";s:49:"index.php?portfolio=$matches[1]&cpage=$matches[2]";s:33:"portfolio-view/(.+?)(/[0-9]+)?/?$";s:48:"index.php?portfolio=$matches[1]&page=$matches[2]";s:59:"portfolio_category/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:57:"index.php?portfolio_category=$matches[1]&feed=$matches[2]";s:54:"portfolio_category/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:57:"index.php?portfolio_category=$matches[1]&feed=$matches[2]";s:47:"portfolio_category/([^/]+)/page/?([0-9]{1,})/?$";s:58:"index.php?portfolio_category=$matches[1]&paged=$matches[2]";s:29:"portfolio_category/([^/]+)/?$";s:40:"index.php?portfolio_category=$matches[1]";s:44:"testimonial-view/[^/]+/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:54:"testimonial-view/[^/]+/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:74:"testimonial-view/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:69:"testimonial-view/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:69:"testimonial-view/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:37:"testimonial-view/([^/]+)/trackback/?$";s:32:"index.php?testi=$matches[1]&tb=1";s:57:"testimonial-view/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:44:"index.php?testi=$matches[1]&feed=$matches[2]";s:52:"testimonial-view/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:44:"index.php?testi=$matches[1]&feed=$matches[2]";s:45:"testimonial-view/([^/]+)/page/?([0-9]{1,})/?$";s:45:"index.php?testi=$matches[1]&paged=$matches[2]";s:52:"testimonial-view/([^/]+)/comment-page-([0-9]{1,})/?$";s:45:"index.php?testi=$matches[1]&cpage=$matches[2]";s:37:"testimonial-view/([^/]+)(/[0-9]+)?/?$";s:44:"index.php?testi=$matches[1]&page=$matches[2]";s:33:"testimonial-view/[^/]+/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:43:"testimonial-view/[^/]+/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:63:"testimonial-view/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:58:"testimonial-view/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:58:"testimonial-view/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:41:"services-view/[^/]+/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:51:"services-view/[^/]+/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:71:"services-view/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:66:"services-view/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:66:"services-view/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:34:"services-view/([^/]+)/trackback/?$";s:35:"index.php?services=$matches[1]&tb=1";s:54:"services-view/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:47:"index.php?services=$matches[1]&feed=$matches[2]";s:49:"services-view/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:47:"index.php?services=$matches[1]&feed=$matches[2]";s:42:"services-view/([^/]+)/page/?([0-9]{1,})/?$";s:48:"index.php?services=$matches[1]&paged=$matches[2]";s:49:"services-view/([^/]+)/comment-page-([0-9]{1,})/?$";s:48:"index.php?services=$matches[1]&cpage=$matches[2]";s:34:"services-view/([^/]+)(/[0-9]+)?/?$";s:47:"index.php?services=$matches[1]&page=$matches[2]";s:30:"services-view/[^/]+/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:40:"services-view/[^/]+/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:60:"services-view/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:55:"services-view/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:55:"services-view/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:31:"faq/[^/]+/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:41:"faq/[^/]+/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:61:"faq/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:56:"faq/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:56:"faq/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:24:"faq/([^/]+)/trackback/?$";s:30:"index.php?faq=$matches[1]&tb=1";s:44:"faq/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?faq=$matches[1]&feed=$matches[2]";s:39:"faq/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?faq=$matches[1]&feed=$matches[2]";s:32:"faq/([^/]+)/page/?([0-9]{1,})/?$";s:43:"index.php?faq=$matches[1]&paged=$matches[2]";s:39:"faq/([^/]+)/comment-page-([0-9]{1,})/?$";s:43:"index.php?faq=$matches[1]&cpage=$matches[2]";s:24:"faq/([^/]+)(/[0-9]+)?/?$";s:42:"index.php?faq=$matches[1]&page=$matches[2]";s:20:"faq/[^/]+/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:30:"faq/[^/]+/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:50:"faq/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:45:"faq/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:45:"faq/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:37:"team-view/[^/]+/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:47:"team-view/[^/]+/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:67:"team-view/[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:62:"team-view/[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:62:"team-view/[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:30:"team-view/([^/]+)/trackback/?$";s:31:"index.php?team=$matches[1]&tb=1";s:50:"team-view/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?team=$matches[1]&feed=$matches[2]";s:45:"team-view/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?team=$matches[1]&feed=$matches[2]";s:38:"team-view/([^/]+)/page/?([0-9]{1,})/?$";s:44:"index.php?team=$matches[1]&paged=$matches[2]";s:45:"team-view/([^/]+)/comment-page-([0-9]{1,})/?$";s:44:"index.php?team=$matches[1]&cpage=$matches[2]";s:30:"team-view/([^/]+)(/[0-9]+)?/?$";s:43:"index.php?team=$matches[1]&page=$matches[2]";s:26:"team-view/[^/]+/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:36:"team-view/[^/]+/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:56:"team-view/[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:51:"team-view/[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:51:"team-view/[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:12:"robots\\.txt$";s:18:"index.php?robots=1";s:48:".*wp-(atom|rdf|rss|rss2|feed|commentsrss2)\\.php$";s:18:"index.php?feed=old";s:20:".*wp-app\\.php(/.*)?$";s:19:"index.php?error=403";s:18:".*wp-register.php$";s:23:"index.php?register=true";s:32:"feed/(feed|rdf|rss|rss2|atom)/?$";s:27:"index.php?&feed=$matches[1]";s:27:"(feed|rdf|rss|rss2|atom)/?$";s:27:"index.php?&feed=$matches[1]";s:20:"page/?([0-9]{1,})/?$";s:28:"index.php?&paged=$matches[1]";s:41:"comments/feed/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?&feed=$matches[1]&withcomments=1";s:36:"comments/(feed|rdf|rss|rss2|atom)/?$";s:42:"index.php?&feed=$matches[1]&withcomments=1";s:29:"comments/page/?([0-9]{1,})/?$";s:28:"index.php?&paged=$matches[1]";s:44:"search/(.+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:40:"index.php?s=$matches[1]&feed=$matches[2]";s:39:"search/(.+)/(feed|rdf|rss|rss2|atom)/?$";s:40:"index.php?s=$matches[1]&feed=$matches[2]";s:32:"search/(.+)/page/?([0-9]{1,})/?$";s:41:"index.php?s=$matches[1]&paged=$matches[2]";s:14:"search/(.+)/?$";s:23:"index.php?s=$matches[1]";s:47:"author/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?author_name=$matches[1]&feed=$matches[2]";s:42:"author/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:50:"index.php?author_name=$matches[1]&feed=$matches[2]";s:35:"author/([^/]+)/page/?([0-9]{1,})/?$";s:51:"index.php?author_name=$matches[1]&paged=$matches[2]";s:17:"author/([^/]+)/?$";s:33:"index.php?author_name=$matches[1]";s:69:"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$";s:80:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]";s:64:"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$";s:80:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&feed=$matches[4]";s:57:"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/page/?([0-9]{1,})/?$";s:81:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]&paged=$matches[4]";s:39:"([0-9]{4})/([0-9]{1,2})/([0-9]{1,2})/?$";s:63:"index.php?year=$matches[1]&monthnum=$matches[2]&day=$matches[3]";s:56:"([0-9]{4})/([0-9]{1,2})/feed/(feed|rdf|rss|rss2|atom)/?$";s:64:"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]";s:51:"([0-9]{4})/([0-9]{1,2})/(feed|rdf|rss|rss2|atom)/?$";s:64:"index.php?year=$matches[1]&monthnum=$matches[2]&feed=$matches[3]";s:44:"([0-9]{4})/([0-9]{1,2})/page/?([0-9]{1,})/?$";s:65:"index.php?year=$matches[1]&monthnum=$matches[2]&paged=$matches[3]";s:26:"([0-9]{4})/([0-9]{1,2})/?$";s:47:"index.php?year=$matches[1]&monthnum=$matches[2]";s:43:"([0-9]{4})/feed/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?year=$matches[1]&feed=$matches[2]";s:38:"([0-9]{4})/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?year=$matches[1]&feed=$matches[2]";s:31:"([0-9]{4})/page/?([0-9]{1,})/?$";s:44:"index.php?year=$matches[1]&paged=$matches[2]";s:13:"([0-9]{4})/?$";s:26:"index.php?year=$matches[1]";s:27:".?.+?/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:37:".?.+?/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:57:".?.+?/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:".?.+?/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:".?.+?/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:20:"(.?.+?)/trackback/?$";s:35:"index.php?pagename=$matches[1]&tb=1";s:40:"(.?.+?)/feed/(feed|rdf|rss|rss2|atom)/?$";s:47:"index.php?pagename=$matches[1]&feed=$matches[2]";s:35:"(.?.+?)/(feed|rdf|rss|rss2|atom)/?$";s:47:"index.php?pagename=$matches[1]&feed=$matches[2]";s:28:"(.?.+?)/page/?([0-9]{1,})/?$";s:48:"index.php?pagename=$matches[1]&paged=$matches[2]";s:35:"(.?.+?)/comment-page-([0-9]{1,})/?$";s:48:"index.php?pagename=$matches[1]&cpage=$matches[2]";s:20:"(.?.+?)(/[0-9]+)?/?$";s:47:"index.php?pagename=$matches[1]&page=$matches[2]";s:27:"[^/]+/attachment/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:37:"[^/]+/attachment/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:57:"[^/]+/attachment/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:"[^/]+/attachment/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:52:"[^/]+/attachment/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";s:20:"([^/]+)/trackback/?$";s:31:"index.php?name=$matches[1]&tb=1";s:40:"([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?name=$matches[1]&feed=$matches[2]";s:35:"([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:43:"index.php?name=$matches[1]&feed=$matches[2]";s:28:"([^/]+)/page/?([0-9]{1,})/?$";s:44:"index.php?name=$matches[1]&paged=$matches[2]";s:35:"([^/]+)/comment-page-([0-9]{1,})/?$";s:44:"index.php?name=$matches[1]&cpage=$matches[2]";s:20:"([^/]+)(/[0-9]+)?/?$";s:43:"index.php?name=$matches[1]&page=$matches[2]";s:16:"[^/]+/([^/]+)/?$";s:32:"index.php?attachment=$matches[1]";s:26:"[^/]+/([^/]+)/trackback/?$";s:37:"index.php?attachment=$matches[1]&tb=1";s:46:"[^/]+/([^/]+)/feed/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:41:"[^/]+/([^/]+)/(feed|rdf|rss|rss2|atom)/?$";s:49:"index.php?attachment=$matches[1]&feed=$matches[2]";s:41:"[^/]+/([^/]+)/comment-page-([0-9]{1,})/?$";s:50:"index.php?attachment=$matches[1]&cpage=$matches[2]";}', 'yes'),
(481, '_site_transient_timeout_poptags_40cd750bba9870f18aada2478b24840a', '1371373982', 'yes'),
(482, '_site_transient_poptags_40cd750bba9870f18aada2478b24840a', 'a:40:{s:6:"widget";a:3:{s:4:"name";s:6:"widget";s:4:"slug";s:6:"widget";s:5:"count";s:4:"3826";}s:4:"post";a:3:{s:4:"name";s:4:"Post";s:4:"slug";s:4:"post";s:5:"count";s:4:"2420";}s:6:"plugin";a:3:{s:4:"name";s:6:"plugin";s:4:"slug";s:6:"plugin";s:5:"count";s:4:"2308";}s:5:"admin";a:3:{s:4:"name";s:5:"admin";s:4:"slug";s:5:"admin";s:5:"count";s:4:"1913";}s:5:"posts";a:3:{s:4:"name";s:5:"posts";s:4:"slug";s:5:"posts";s:5:"count";s:4:"1829";}s:7:"sidebar";a:3:{s:4:"name";s:7:"sidebar";s:4:"slug";s:7:"sidebar";s:5:"count";s:4:"1569";}s:7:"twitter";a:3:{s:4:"name";s:7:"twitter";s:4:"slug";s:7:"twitter";s:5:"count";s:4:"1304";}s:6:"google";a:3:{s:4:"name";s:6:"google";s:4:"slug";s:6:"google";s:5:"count";s:4:"1303";}s:8:"comments";a:3:{s:4:"name";s:8:"comments";s:4:"slug";s:8:"comments";s:5:"count";s:4:"1289";}s:6:"images";a:3:{s:4:"name";s:6:"images";s:4:"slug";s:6:"images";s:5:"count";s:4:"1243";}s:4:"page";a:3:{s:4:"name";s:4:"page";s:4:"slug";s:4:"page";s:5:"count";s:4:"1201";}s:5:"image";a:3:{s:4:"name";s:5:"image";s:4:"slug";s:5:"image";s:5:"count";s:4:"1113";}s:5:"links";a:3:{s:4:"name";s:5:"links";s:4:"slug";s:5:"links";s:5:"count";s:3:"972";}s:9:"shortcode";a:3:{s:4:"name";s:9:"shortcode";s:4:"slug";s:9:"shortcode";s:5:"count";s:3:"957";}s:8:"facebook";a:3:{s:4:"name";s:8:"Facebook";s:4:"slug";s:8:"facebook";s:5:"count";s:3:"955";}s:3:"seo";a:3:{s:4:"name";s:3:"seo";s:4:"slug";s:3:"seo";s:5:"count";s:3:"928";}s:9:"wordpress";a:3:{s:4:"name";s:9:"wordpress";s:4:"slug";s:9:"wordpress";s:5:"count";s:3:"822";}s:7:"gallery";a:3:{s:4:"name";s:7:"gallery";s:4:"slug";s:7:"gallery";s:5:"count";s:3:"807";}s:6:"social";a:3:{s:4:"name";s:6:"social";s:4:"slug";s:6:"social";s:5:"count";s:3:"763";}s:3:"rss";a:3:{s:4:"name";s:3:"rss";s:4:"slug";s:3:"rss";s:5:"count";s:3:"709";}s:7:"widgets";a:3:{s:4:"name";s:7:"widgets";s:4:"slug";s:7:"widgets";s:5:"count";s:3:"675";}s:6:"jquery";a:3:{s:4:"name";s:6:"jquery";s:4:"slug";s:6:"jquery";s:5:"count";s:3:"670";}s:5:"pages";a:3:{s:4:"name";s:5:"pages";s:4:"slug";s:5:"pages";s:5:"count";s:3:"666";}s:5:"email";a:3:{s:4:"name";s:5:"email";s:4:"slug";s:5:"email";s:5:"count";s:3:"615";}s:4:"ajax";a:3:{s:4:"name";s:4:"AJAX";s:4:"slug";s:4:"ajax";s:5:"count";s:3:"611";}s:5:"media";a:3:{s:4:"name";s:5:"media";s:4:"slug";s:5:"media";s:5:"count";s:3:"579";}s:10:"javascript";a:3:{s:4:"name";s:10:"javascript";s:4:"slug";s:10:"javascript";s:5:"count";s:3:"560";}s:5:"video";a:3:{s:4:"name";s:5:"video";s:4:"slug";s:5:"video";s:5:"count";s:3:"552";}s:10:"buddypress";a:3:{s:4:"name";s:10:"buddypress";s:4:"slug";s:10:"buddypress";s:5:"count";s:3:"545";}s:4:"feed";a:3:{s:4:"name";s:4:"feed";s:4:"slug";s:4:"feed";s:5:"count";s:3:"532";}s:5:"photo";a:3:{s:4:"name";s:5:"photo";s:4:"slug";s:5:"photo";s:5:"count";s:3:"518";}s:7:"content";a:3:{s:4:"name";s:7:"content";s:4:"slug";s:7:"content";s:5:"count";s:3:"518";}s:4:"link";a:3:{s:4:"name";s:4:"link";s:4:"slug";s:4:"link";s:5:"count";s:3:"497";}s:6:"photos";a:3:{s:4:"name";s:6:"photos";s:4:"slug";s:6:"photos";s:5:"count";s:3:"492";}s:5:"login";a:3:{s:4:"name";s:5:"login";s:4:"slug";s:5:"login";s:5:"count";s:3:"452";}s:4:"spam";a:3:{s:4:"name";s:4:"spam";s:4:"slug";s:4:"spam";s:5:"count";s:3:"451";}s:5:"stats";a:3:{s:4:"name";s:5:"stats";s:4:"slug";s:5:"stats";s:5:"count";s:3:"448";}s:8:"category";a:3:{s:4:"name";s:8:"category";s:4:"slug";s:8:"category";s:5:"count";s:3:"447";}s:7:"youtube";a:3:{s:4:"name";s:7:"youtube";s:4:"slug";s:7:"youtube";s:5:"count";s:3:"430";}s:5:"share";a:3:{s:4:"name";s:5:"Share";s:4:"slug";s:5:"share";s:5:"count";s:3:"426";}}', 'yes'),
(488, 'syntaxhighlighter_settings', 'a:15:{s:9:"shversion";i:3;s:5:"theme";s:7:"default";s:14:"loadallbrushes";i:1;s:7:"toolbar";i:1;s:9:"autolinks";i:1;s:9:"smarttabs";i:1;s:9:"wraplines";i:1;s:9:"classname";s:0:"";s:9:"firstline";s:1:"1";s:14:"padlinenumbers";s:5:"false";s:7:"tabsize";s:1:"4";s:5:"title";s:0:"";s:8:"collapse";i:0;s:6:"gutter";i:0;s:5:"light";i:0;}', 'yes'),
(526, '_site_transient_timeout_wporg_theme_feature_list', '1371388920', 'yes'),
(527, '_site_transient_wporg_theme_feature_list', 'a:5:{s:6:"Colors";a:15:{i:0;s:5:"black";i:1;s:4:"blue";i:2;s:5:"brown";i:3;s:4:"gray";i:4;s:5:"green";i:5;s:6:"orange";i:6;s:4:"pink";i:7;s:6:"purple";i:8;s:3:"red";i:9;s:6:"silver";i:10;s:3:"tan";i:11;s:5:"white";i:12;s:6:"yellow";i:13;s:4:"dark";i:14;s:5:"light";}s:7:"Columns";a:6:{i:0;s:10:"one-column";i:1;s:11:"two-columns";i:2;s:13:"three-columns";i:3;s:12:"four-columns";i:4;s:12:"left-sidebar";i:5;s:13:"right-sidebar";}s:5:"Width";a:2:{i:0;s:11:"fixed-width";i:1;s:14:"flexible-width";}s:8:"Features";a:19:{i:0;s:8:"blavatar";i:1;s:10:"buddypress";i:2;s:17:"custom-background";i:3;s:13:"custom-colors";i:4;s:13:"custom-header";i:5;s:11:"custom-menu";i:6;s:12:"editor-style";i:7;s:21:"featured-image-header";i:8;s:15:"featured-images";i:9;s:15:"flexible-header";i:10;s:20:"front-page-post-form";i:11;s:19:"full-width-template";i:12;s:12:"microformats";i:13;s:12:"post-formats";i:14;s:20:"rtl-language-support";i:15;s:11:"sticky-post";i:16;s:13:"theme-options";i:17;s:17:"threaded-comments";i:18;s:17:"translation-ready";}s:7:"Subject";a:3:{i:0;s:7:"holiday";i:1;s:13:"photoblogging";i:2;s:8:"seasonal";}}', 'yes'),
(532, 'nav_menu_options', 'a:2:{i:0;b:0;s:8:"auto_add";a:0:{}}', 'yes'),
(536, '_site_transient_timeout_browser_a5cd038ef63b6b7f4ecf0708fa2ebe8b', '1372094427', 'yes'),
(537, '_site_transient_browser_a5cd038ef63b6b7f4ecf0708fa2ebe8b', 'a:9:{s:8:"platform";s:5:"Linux";s:4:"name";s:7:"Firefox";s:7:"version";s:4:"21.0";s:10:"update_url";s:23:"http://www.firefox.com/";s:7:"img_src";s:50:"http://s.wordpress.org/images/browsers/firefox.png";s:11:"img_src_ssl";s:49:"https://wordpress.org/images/browsers/firefox.png";s:15:"current_version";s:2:"16";s:7:"upgrade";b:0;s:8:"insecure";b:0;}', 'yes'),
(642, '_transient_timeout_plugin_slugs', '1372096916', 'no'),
(643, '_transient_plugin_slugs', 'a:7:{i:0;s:19:"akismet/akismet.php";i:1;s:36:"contact-form-7/wp-contact-form-7.php";i:2;s:22:"cyr2lat/cyr-to-lat.php";i:3;s:9:"hello.php";i:4;s:16:"russian-date.php";i:5;s:9:"rh/rh.php";i:6;s:39:"syntaxhighlighter/syntaxhighlighter.php";}', 'no'),
(653, '_transient_timeout_feed_f51484dfbf4f2b653ce300a52bab1706', '1372137039', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(654, '_transient_feed_f51484dfbf4f2b653ce300a52bab1706', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n\n\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:51:"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n			\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:6:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"WordPress Россия";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:21:"http://mywordpress.ru";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:38:"Ваш собственный блог";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:13:"lastBuildDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 02 May 2013 11:10:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:2:"en";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:10:{i:0;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Вышел WordPress 3.5.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://mywordpress.ru/2013/05/02/vyshel-wordpress-3-5-1/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://mywordpress.ru/2013/05/02/vyshel-wordpress-3-5-1/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 02 May 2013 11:10:00 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=421";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:123:"Вышла версия WordPress 3.5.1. Скачать русский WordPress 3.5.1 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2013/05/02/vyshel-wordpress-3-5-1/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Вышел WordPress 3.4.2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://mywordpress.ru/2012/09/07/vyshel-wordpress-3-4-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://mywordpress.ru/2012/09/07/vyshel-wordpress-3-4-2/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 07 Sep 2012 07:53:10 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=409";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:123:"Вышла версия WordPress 3.4.2. Скачать русский WordPress 3.4.2 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2012/09/07/vyshel-wordpress-3-4-2/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Вышел WordPress 3.4.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://mywordpress.ru/2012/07/07/vyshel-wordpress-3-4-1/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://mywordpress.ru/2012/07/07/vyshel-wordpress-3-4-1/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 07 Jul 2012 10:12:58 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=406";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:123:"Вышла версия WordPress 3.4.1. Скачать русский WordPress 3.4.1 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2012/07/07/vyshel-wordpress-3-4-1/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Вышел WordPress 3.3.2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://mywordpress.ru/2012/04/24/vyshel-wordpress-3-3-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://mywordpress.ru/2012/04/24/vyshel-wordpress-3-3-2/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 23 Apr 2012 20:35:49 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=402";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:123:"Вышла версия WordPress 3.3.2. Скачать русский WordPress 3.3.2 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2012/04/24/vyshel-wordpress-3-3-2/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Вышел WordPress 3.3.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://mywordpress.ru/2012/01/04/vyshel-wordpress-3-3-1/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://mywordpress.ru/2012/01/04/vyshel-wordpress-3-3-1/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 03 Jan 2012 22:30:28 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=399";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:123:"Вышла версия WordPress 3.3.1. Скачать русский WordPress 3.3.1 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2012/01/04/vyshel-wordpress-3-3-1/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:18:"Темы WordPress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:48:"http://mywordpress.ru/2011/12/16/temy-wordpress/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:57:"http://mywordpress.ru/2011/12/16/temy-wordpress/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 16 Dec 2011 09:55:46 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=395";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:317:"В бета-режиме запустилась новая версия ресурса с темами WordPress. Теперь посетителям удобнее искать и просматривать темы, а авторы получили возможность загружать собственные.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:53:"http://mywordpress.ru/2011/12/16/temy-wordpress/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:24:"Вышел WordPress 3.3";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:54:"http://mywordpress.ru/2011/12/16/vyshel-wordpress-3-3/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:63:"http://mywordpress.ru/2011/12/16/vyshel-wordpress-3-3/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 16 Dec 2011 09:10:17 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=393";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:119:"Вышла версия WordPress 3.3. Скачать русский WordPress 3.3 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:59:"http://mywordpress.ru/2011/12/16/vyshel-wordpress-3-3/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:49:"Исправлена ошибка в сборке";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2011/07/20/ispravlena-oshibka-v-sborke/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:70:"http://mywordpress.ru/2011/07/20/ispravlena-oshibka-v-sborke/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 20 Jul 2011 12:00:06 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=384";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:322:"В последней сборке 3.2.1 была досадная ошибка, приводящая к исчезновению панели управления в левой части админки. Сейчас все исправлено: просто скачайте архив со сборкой заново.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:66:"http://mywordpress.ru/2011/07/20/ispravlena-oshibka-v-sborke/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Вышел WordPress 3.2.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://mywordpress.ru/2011/07/19/vyshel-wordpress-3-2-1/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://mywordpress.ru/2011/07/19/vyshel-wordpress-3-2-1/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 19 Jul 2011 07:42:42 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=380";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:123:"Вышла версия WordPress 3.2.1. Скачать русский WordPress 3.2.1 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2011/07/19/vyshel-wordpress-3-2-1/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:36:"\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:4:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:26:"Вышел WordPress 3.1.3";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://mywordpress.ru/2011/05/27/vyshel-wordpress-3-1-3/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:65:"http://mywordpress.ru/2011/05/27/vyshel-wordpress-3-1-3/#comments";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 26 May 2011 20:34:29 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:29:"Новости проекта";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://mywordpress.ru/?p=378";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:123:"Вышла версия WordPress 3.1.3. Скачать русский WordPress 3.1.3 от команды MyWordPress.Ru.\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"admin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:36:"http://wellformedweb.org/CommentAPI/";a:1:{s:10:"commentRss";a:1:{i:0;a:5:{s:4:"data";s:61:"http://mywordpress.ru/2011/05/27/vyshel-wordpress-3-1-3/feed/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:38:"http://purl.org/rss/1.0/modules/slash/";a:1:{s:8:"comments";a:1:{i:0;a:5:{s:4:"data";s:1:"0";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"href";s:27:"http://mywordpress.ru/feed/";s:3:"rel";s:4:"self";s:4:"type";s:19:"application/rss+xml";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:44:"http://purl.org/rss/1.0/modules/syndication/";a:2:{s:12:"updatePeriod";a:1:{i:0;a:5:{s:4:"data";s:6:"hourly";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:15:"updateFrequency";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:9:{s:6:"server";s:5:"nginx";s:4:"date";s:29:"Mon, 24 Jun 2013 17:42:33 GMT";s:12:"content-type";s:23:"text/xml; charset=UTF-8";s:10:"connection";s:5:"close";s:10:"x-pingback";s:32:"http://mywordpress.ru/xmlrpc.php";s:13:"last-modified";s:29:"Thu, 02 May 2013 11:10:00 GMT";s:4:"etag";s:34:""702468228744e50ba4e602963311236a"";s:10:"set-cookie";s:50:"PHPSESSID=bc588c53fba1a8f4a49b17b676455fae; path=/";s:16:"content-encoding";s:4:"gzip";}s:5:"build";s:14:"20121202124312";}', 'no'),
(655, '_transient_timeout_feed_mod_f51484dfbf4f2b653ce300a52bab1706', '1372137039', 'no'),
(656, '_transient_timeout_feed_2f6539c2069099dd6168b66d0549bfa2', '1372137039', 'no'),
(657, '_transient_feed_mod_f51484dfbf4f2b653ce300a52bab1706', '1372093839', 'no'),
(658, '_transient_feed_2f6539c2069099dd6168b66d0549bfa2', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:4:"\n  \n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:83:"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:4:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:38:"link:http://blog/ - Google Blog Search";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:75:"http://www.google.com/search?ie=utf-8&q=link:http://blog/&tbm=blg&tbs=sbd:1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:24:"About 68,200,000 results";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:10:{i:0;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:57:"Colt&amp;#39;s heart begins with family: Changes and More";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:65:"http://coltandhisheart.blogspot.com/2013/06/changes-and-more.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:292:"Many changes to the <em>blog</em>, Colt in the background, and a new <em>blog</em>. New <em>blog link</em>: <em>http</em>://coltandhisheartevents.blogspot.com. Remember to wear red Friday for Colt! Photos by: Kelly W. Colt is done with his first season of soccer, Carrigan her&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:31:"Colt''s heart begins with family";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"bailey ceravolo";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 17:03:00 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:102:"The CoffeeShop &lt;b&gt;Blog&lt;/b&gt;: CoffeeShop Action Flashback: CoffeeShop &lt;b&gt;...&lt;/b&gt;";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:84:"http://www.thecoffeeshopblog.com/2013/06/coffeeshop-action-flashback-coffeeshop.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:551:"If you love using my free CoffeeShop creations and would like to make a donation to Rita the self-professed photo-editing photography geek of CoffeeShop, please follow this <em>link</em>! This <em>blog</em> is possible because <b>....</b> Please keep on posting them! I want to highlight some of them on my <em>blog</em> to show off my talented readers. <b>...</b> Do you want to download my favorite CoffeeShop Actions or Design Elements in one convenient zipped file AND help support this <em>blog</em>? Just click here for my action&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:19:"The CoffeeShop Blog";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Rita";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:46:00 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:54:"Town Hall: Chemerinsky and Clegg on Affirmative Action";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:97:"http://blog.constitutioncenter.org/2013/06/town-hall-chemerinsky-and-clegg-on-affirmative-action/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:270:"Constitution Daily is a <em>blog</em> edited by the National Constitution Center <b>...</b> You can read the court&#39;s decision in the case at this <em>link</em>: <em>http</em>://www.supremecourt.gov/opinions/12pdf/11-345_l5gm.pdf. Opening statement from Chemerinsky:.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:18:"Constitution Daily";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:9:"NCC Staff";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:35:48 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:108:"Takano Athletics » &lt;b&gt;Blog&lt;/b&gt; Archive » Fixing Technical Errors in the &lt;b&gt;...&lt;/b&gt;";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:43:"http://www.takanoathletics.com/blog/?p=3117";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:267:"A case in point has been provided by reader Derek Fiscus whose snatch video can be seen at the following <em>link</em>: <em>http</em>://www.coachseye.com/E4KT. Derek has been having problems with getting under the bar and this is due to faulty pulling&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:16:"Takano Athletics";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:10:"Bob Takano";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:19:36 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:103:"Fruits of Industry: Boise&amp;#39;s Interurban Railway | Arts &amp;amp; History &lt;b&gt;Blog&lt;/b&gt;";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:96:"http://www.boiseartsandhistory.org/blog/2013/06/24/fruits-of-industry-boises-interurban-railway/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:281:"A &amp; H Staff, “<em>Link&#39;s</em> Modern Business College” Boise City Department of Arts &amp; History.<em>http</em>://www.boiseartsandhistory.org/history/research-collection/enterprise/business-industry/<em>link&#39;s</em>-modern-business-college/, accessed 25 March 2013.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:19:"Arts & History Blog";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"ADavis";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:15:19 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:58:"Email landing page tips - &lt;b&gt;Blogging&lt;/b&gt; Tips";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://www.bloggingtips.com/2013/06/24/email-landing-page-tips/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:300:"<em>http</em>://www.live-dangerously.com/<em>blogger</em>-contest/ &middot; <em>http</em>://www.optimalhosting.com?a_aid=moneyreign. Email has proved to be a very effective <b>....</b> Recommended Posts. 7-Day <em>Link</em> Building Strategy with Commenting 27. Create a <em>Blog</em>&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:13:"Blogging Tips";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:10:"John Conor";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:11:43 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:84:"Food Reviews Hong Xing Li Chicken Rice - Singapore Lifestyle &lt;b&gt;Blog&lt;/b&gt;";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:89:"http://youngpalacebeauty.blogspot.com/2013/06/food-reviews-hong-xing-li-chicken-rice.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:295:"Misc Archives <em>Links</em> About <em>Blog</em>. About Me. Profile. ADVERTISING OPPORTUNITY HERE !! <em>http</em>://youngpalacebeauty.blogspot.sg/p/new-here.html <em>http</em>://youngpalacebeauty.blogspot.sg/p/new-here.html!! The Way Out. <em>Links</em>. $30/MONTH <em>Link</em>&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:84:"Look young n beauty always | Singapore Lifestyle Blog |Fashion, Food, Travel, Beauty";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"shiryu";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:04:00 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:109:"Full Sail University &lt;b&gt;Blog&lt;/b&gt; » Grad Lavado Stubbs Named a Finalist in &lt;b&gt;...&lt;/b&gt;";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:101:"http://www.fullsailblog.com/grad-lavado-stubbs-named-a-finalist-in-ok-go-music-video-challenge-video/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:279:"Request Info. Follow the <em>link</em> below to request additional materials and info about Full Sail University. Request Info <b>...</b> stuff dreams are made of... Congrats @TheRealTSliZz and thanks @JColeNC! <em>http</em>://t.co/SmcITMCJZk about 22 minutes ago&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:25:"Full Sail University Blog";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:11:"Amy Cassell";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:00:51 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:97:"Domains 101: An Introduction to Custom Domains — &lt;b&gt;Blog&lt;/b&gt; &lt;b&gt;...&lt;/b&gt;";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:64:"http://en.blog.wordpress.com/2013/06/24/intro-to-custom-domains/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:286:"A memorable site address is a direct <em>link</em> to your and your readers. Without it <b>...</b> As your <em>blog</em> grows, you may find that you&#39;d like to further customize your site address and replace your *.wordpress.com subdomain with your own .com. To help&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:18:"WordPress.com News";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"Erica";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:00:39 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:47:"\n      \n      \n      \n      \n      \n      \n    ";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:3:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:95:"USW &lt;b&gt;Blog&lt;/b&gt; » &lt;b&gt;Blog&lt;/b&gt; Archive » Can Your Boss Really Do That?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:60:"http://blog.usw.org/2013/06/24/can-your-boss-really-do-that/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:301:"Organizing &middot; Associate Members &middot; Store. Print. Email. <em>http</em>://webster.articulatedman.com/link_mailers/3/link_mailings/new?<em>link</em>=<em>http</em>://www.usw.org/our_union/index_html&amp;title=Our Union | United Steelworkers. Close Send this article to a friend&nbsp;<b>...</b>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:3:{s:9:"publisher";a:1:{i:0;a:5:{s:4:"data";s:8:"USW Blog";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"cengel";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:29:"Mon, 24 Jun 2013 16:00:11 GMT";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:36:"http://a9.com/-/spec/opensearch/1.1/";a:3:{s:12:"totalResults";a:1:{i:0;a:5:{s:4:"data";s:8:"68200000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:10:"startIndex";a:1:{i:0;a:5:{s:4:"data";s:1:"1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:12:"itemsPerPage";a:1:{i:0;a:5:{s:4:"data";s:2:"10";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:9:{s:12:"content-type";s:28:"text/xml; charset=ISO-8859-1";s:4:"date";s:29:"Mon, 24 Jun 2013 17:10:39 GMT";s:7:"expires";s:2:"-1";s:13:"cache-control";s:18:"private, max-age=0";s:10:"set-cookie";a:2:{i:0;s:143:"PREF=ID=49474d4ed5753771:FF=0:TM=1372093839:LM=1372093839:S=9cDYC3_3dxWaWJKU; expires=Wed, 24-Jun-2015 17:10:39 GMT; path=/; domain=.google.com";i:1;s:212:"NID=67=EtpldGi8moUtyKHWKQKdX5WGtKBxpkIcvvLt-OYs3eQmFHSlVWs4gbw80ZiI4Y4r1EZFq4GHK-xofM0IrTkZmGUSD_g2KoQE2K4DRdOZic5zUsapKiehGiblf0CXteEN; expires=Tue, 24-Dec-2013 17:10:39 GMT; path=/; domain=.google.com; HttpOnly";}s:3:"p3p";s:122:"CP="This is not a P3P policy! See http://www.google.com/support/accounts/bin/answer.py?hl=en&answer=151657 for more info."";s:6:"server";s:3:"gws";s:16:"x-xss-protection";s:13:"1; mode=block";s:15:"x-frame-options";s:10:"SAMEORIGIN";}s:5:"build";s:14:"20121202124312";}', 'no'),
(660, '_transient_timeout_feed_mod_2f6539c2069099dd6168b66d0549bfa2', '1372137039', 'no'),
(662, '_transient_feed_mod_2f6539c2069099dd6168b66d0549bfa2', '1372093839', 'no'),
(665, '_transient_timeout_feed_a5420c83891a9c88ad2a4f04584a5efc', '1372137041', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(666, '_transient_feed_a5420c83891a9c88ad2a4f04584a5efc', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n	\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:72:"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:39:"WordPress Plugins » View: Most Popular";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:44:"http://wordpress.org/plugins/browse/popular/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:39:"WordPress Plugins » View: Most Popular";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:5:"en-US";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 24 Jun 2013 16:49:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"generator";a:1:{i:0;a:5:{s:4:"data";s:25:"http://bbpress.org/?v=1.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:15:{i:0;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:7:"Akismet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:45:"http://wordpress.org/plugins/akismet/#post-15";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 09 Mar 2007 22:11:30 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:32:"15@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:98:"Akismet checks your comments against the Akismet web service to see if they look like spam or not.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Matt Mullenweg";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:24:"Jetpack by WordPress.com";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:48:"http://wordpress.org/plugins/jetpack/#post-23862";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 20 Jan 2011 02:21:38 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"23862@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:104:"Supercharge your WordPress site with powerful features previously only available to WordPress.com users.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:24:"Michael Adams (mdawaffe)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"WordPress SEO by Yoast";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:53:"http://wordpress.org/plugins/wordpress-seo/#post-8321";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 01 Jan 2009 20:34:44 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"8321@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:131:"Improve your WordPress SEO: Write better content and have a fully optimized WordPress site using the WordPress SEO plugin by Yoast.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Joost de Valk";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"Contact Form 7";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:54:"http://wordpress.org/plugins/contact-form-7/#post-2141";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 02 Aug 2007 12:45:03 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"2141@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:54:"Just another contact form plugin. Simple but flexible.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:16:"Takayuki Miyoshi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:15:"NextGEN Gallery";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/plugins/nextgen-gallery/#post-1169";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 23 Apr 2007 20:08:06 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"1169@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:120:"The most popular WordPress gallery plugin and one of the most popular plugins of all time with over 6 million downloads.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:9:"Alex Rabe";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"All in One SEO Pack";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:58:"http://wordpress.org/plugins/all-in-one-seo-pack/#post-753";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 30 Mar 2007 20:08:18 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"753@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:86:"WordPress SEO plugin to automatically optimize your Wordpress blog for Search Engines.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:8:"uberdose";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:18:"WordPress Importer";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/plugins/wordpress-importer/#post-18101";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 20 May 2010 17:42:45 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"18101@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:101:"Import posts, pages, comments, custom fields, categories, tags and more from a WordPress export file.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Brian Colinger";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:33:"WooCommerce - excelling eCommerce";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:52:"http://wordpress.org/plugins/woocommerce/#post-29860";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 05 Sep 2011 08:13:36 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"29860@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:97:"WooCommerce is a powerful, extendable eCommerce plugin that helps you sell anything. Beautifully.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:9:"WooThemes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:18:"Better WP Security";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wordpress.org/plugins/better-wp-security/#post-21738";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 22 Oct 2010 22:06:05 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"21738@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:107:"The easiest, most effective way to secure WordPress. Improve the security of any WordPress site in seconds.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"ChrisWiegman";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"Google XML Sitemaps";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://wordpress.org/plugins/google-sitemap-generator/#post-132";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 09 Mar 2007 22:31:32 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"132@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:105:"This plugin will generate a special XML sitemap which will help search engines to better index your blog.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:5:"Arnee";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"W3 Total Cache";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:55:"http://wordpress.org/plugins/w3-total-cache/#post-12073";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 29 Jul 2009 18:46:31 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"12073@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:132:"Easy Web Performance Optimization (WPO) using caching: browser, page, object, database, minify and content delivery network support.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:16:"Frederick Townes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:7:"WPtouch";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:47:"http://wordpress.org/plugins/wptouch/#post-5468";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 01 May 2008 04:58:09 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"5468@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:75:"WPtouch: A simple, powerful &#38; elegant mobile solution for your website.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:17:"BraveNewCode Inc.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:14:"WP Super Cache";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:54:"http://wordpress.org/plugins/wp-super-cache/#post-2572";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 05 Nov 2007 11:40:04 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:34:"2572@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:73:"A very fast caching engine for WordPress that produces static html files.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:16:"Donncha O Caoimh";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"Advanced Custom Fields";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://wordpress.org/plugins/advanced-custom-fields/#post-25254";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 17 Mar 2011 04:07:30 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"25254@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:150:"Fully customise WordPress edit screens with powerful fields. Boasting a professional interface and a powerfull API, it’s a must have for any web dev";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"elliotcondon";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"WP Maintenance Mode";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:60:"http://wordpress.org/plugins/wp-maintenance-mode/#post-16218";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 25 Feb 2010 09:08:47 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"16218@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:144:"Adds a splash page to your site that lets visitors know your site is down for maintenance. Full access to the back- &#38; front-end is optional.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"Frank Bültge";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"href";s:45:"http://wordpress.org/plugins/rss/view/popular";s:3:"rel";s:4:"self";s:4:"type";s:19:"application/rss+xml";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:10:{s:6:"server";s:5:"nginx";s:4:"date";s:29:"Mon, 24 Jun 2013 17:10:41 GMT";s:12:"content-type";s:23:"text/xml; charset=UTF-8";s:10:"connection";s:5:"close";s:4:"vary";s:15:"Accept-Encoding";s:7:"expires";s:29:"Mon, 24 Jun 2013 17:24:48 GMT";s:13:"cache-control";s:0:"";s:6:"pragma";s:0:"";s:13:"last-modified";s:31:"Mon, 24 Jun 2013 16:49:48 +0000";s:4:"x-nc";s:11:"HIT lax 249";}s:5:"build";s:14:"20121202124312";}', 'no'),
(667, '_transient_timeout_feed_867bd5c64f85878d03a060509cd2f92c', '1372137041', 'no'),
(668, '_transient_timeout_feed_mod_a5420c83891a9c88ad2a4f04584a5efc', '1372137041', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(669, '_transient_feed_867bd5c64f85878d03a060509cd2f92c', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n\n\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:61:"\n	\n	\n	\n	\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:16:"WordPress Planet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:28:"http://planet.wordpress.org/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:2:"en";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:47:"WordPress Planet - http://planet.wordpress.org/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:50:{i:0;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"Matt: This Week in Startups";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=42456";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:45:"http://ma.tt/2013/06/this-week-in-startups-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:639:"<p>While at the <a href="http://allthingsd.com/category/d11/">D Conference</a> last month I did an interview with <a href="http://calacanis.com/">Jason Calacanis</a> for his T<a href="http://thisweekin.com/thisweekin-startups/">his Week in Startups</a> show, which <a href="http://thisweekin.com/thisweekin-startups/twist-26-with-matt-mullenweg-2/">I was actually last on in 2009</a>. We went a little long so it was broken into two, here it is (<a href="http://wpdaily.co/interview-mullenweg-calacanis/">WP Daily has an index of the questions</a>):</p>\n<p><span class="embed-youtube"></span></p>\n<p><span class="embed-youtube"></span></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 23 Jun 2013 22:29:18 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Matt";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:76:"WordPress.tv: K.Adam White : Underscore and Backbone: jQuery’s New Friends";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19757";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:88:"http://wordpress.tv/2013/06/23/k-adam-white-underscore-and-backbone-jquerys-new-friends/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:697:"<div id="v-ZpGpyMDP-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19757/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19757/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19757&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/23/k-adam-white-underscore-and-backbone-jquerys-new-friends/"><img alt="K.Adam White : Underscore and Backbone: jQuery’s New Friends" src="http://videos.videopress.com/ZpGpyMDP/video-6c08df15ed_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 23 Jun 2013 17:41:57 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:76:"WordPress.tv: Jonathan Desrosiers: Plugin Development – Stirred not Shaken";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19751";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:89:"http://wordpress.tv/2013/06/22/jonathan-desrosiers-plugin-development-stirred-not-shaken/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:698:"<div id="v-Wa1t5kkc-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19751/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19751/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19751&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/22/jonathan-desrosiers-plugin-development-stirred-not-shaken/"><img alt="Jonathan Desrosiers: Plugin Development – Stirred not Shaken" src="http://videos.videopress.com/Wa1t5kkc/video-e598fc4d63_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 23 Jun 2013 17:15:23 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:42:"WordPress.tv: How to Create and Edit Users";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=18322";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:60:"http://wordpress.tv/2013/06/23/how-to-create-and-edit-users/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:641:"<div id="v-J984LKS5-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18322/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18322/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18322&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/23/how-to-create-and-edit-users/"><img alt="How to Create and Edit Users" src="http://videos.videopress.com/J984LKS5/video-d7e95b2c5f_scruberthumbnail_0.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 23 Jun 2013 17:14:08 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:44:"WordPress.tv: How to Use the Image Galleries";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=18324";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:62:"http://wordpress.tv/2013/06/22/how-to-use-the-image-galleries/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:645:"<div id="v-CElh0aDh-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18324/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18324/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18324&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/22/how-to-use-the-image-galleries/"><img alt="How to Use the Image Galleries" src="http://videos.videopress.com/CElh0aDh/video-ebe1e109d1_scruberthumbnail_0.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 22 Jun 2013 17:14:12 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:47:"WPTavern: Check Out Week In WordPress Episode 2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7416";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:99:"http://feedproxy.google.com/~r/WordpressTavern/~3/OhaQIo1rpUQ/check-out-week-in-wordpress-episode-2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:823:"<p>Week In WordPress is a weekly videocast covering the WordPress headlines of the week featuring different guest co-hosts. I had the pleasure of being on episode 2 with Brian Krogsgard of <a href="http://postat.us/" title="http://postat.us/">PostStat.us</a> You can see links to all of the news stories we discussed via the <a href="http://slocumstudio.com/2013/06/week-in-wordpress-episode-2-wordpress-is-worth-eleventy-billion/" title="http://slocumstudio.com/2013/06/week-in-wordpress-episode-2-wordpress-is-worth-eleventy-billion/">SlocumStudio blog</a>. I had a great time on the show and it&#8217;s obvious that when I start talking about WordPress, I have a hard time shutting up. </p>\n<div class="align center"></div>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/OhaQIo1rpUQ" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 22 Jun 2013 11:00:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:42:"WPTavern: WordPress 3.5.2 Security Release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7414";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:94:"http://feedproxy.google.com/~r/WordpressTavern/~3/0WStjLza7HI/wordpress-3-5-2-security-release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2201:"<p><a href="http://wordpress.org/news/2013/06/wordpress-3-5-2/" title="http://wordpress.org/news/2013/06/wordpress-3-5-2/">WordPress 3.5.2 just shipped</a> and addresses a few security issues one of which was <a href="https://vndh.net/note:wordpress-351-denial-service" title="https://vndh.net/note:wordpress-351-denial-service">brought up around June 7th</a>. The release also contains a few bug fixes as well. It&#8217;s been awhile since we&#8217;ve seen a dedicated security release but I guess it&#8217;s time to start a new streak. </p>\n<p>Also of note is that the WordPress team has decided to <a href="http://make.wordpress.org/core/2013/06/21/secure-swfupload/" title="http://make.wordpress.org/core/2013/06/21/secure-swfupload/">fork the SWFUpload project</a> so that they could maintain it with security fixes. The Make.WordPress.core post strongly emphasizes that developers do not use SWFUpload but if you must, to <a href="http://github.com/wordpress/secure-swfupload" title="http://github.com/wordpress/secure-swfupload">use their fork</a>. It&#8217;s interesting that WordPress does not use this specific library but it continues to be shipped with WordPress because of plugins not being updated to use <a href="http://plupload.com/" title="http://plupload.com/">Plupload</a>. </p>\n<p>Last but not least, some information geared towards everyone.</p>\n<blockquote><p>We do not condone the use of abandonware. We only wish to make the web a better place by ensuring that developers have access to a secure version of SWFUpload, when the only alternative may be to use insecure code.</p>\n<p><strong>If you think you have found a vulnerability in this fork of SWFUpload, we appreciate your help in disclosing it to us responsibly.</strong> Please email reports of security vulnerabilities to swfupload-security AT wordpress.org. These reports will be reviewed by the WordPress security team and by security researchers contributing to this project, including Neal and Szymon.</p></blockquote>\n<p>If you&#8217;re testing WordPress, WordPress 3.6 Beta 4 includes all of the fixes in 3.5.2. </p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/0WStjLza7HI" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 20:02:38 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:58:"Dev Blog: WordPress 3.5.2 Maintenance and Security Release";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:33:"http://wordpress.org/news/?p=2612";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:50:"http://wordpress.org/news/2013/06/wordpress-3-5-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2536:"<p>WordPress 3.5.2 is now available. This is the second maintenance release of 3.5, fixing <a href="http://core.trac.wordpress.org/query?status=closed&group=resolution&milestone=3.5.2">12 bugs</a>. <strong>This is a security release for all previous versions and we strongly encourage you to update your sites immediately.</strong> The WordPress security team resolved seven security issues, and this release also contains some additional security hardening.</p>\n<p>The security fixes included:</p>\n<ul>\n<li>Blocking server-side request forgery attacks, which could potentially enable an attacker to gain access to a site.</li>\n<li>Disallow contributors from improperly publishing posts, reported by <a href="http://kovshenin.com/">Konstantin Kovshenin</a>, or reassigning the post&#8217;s authorship, reported by <a href="http://www.sharefaith.com/">Luke Bryan</a>.</li>\n<li>An update to the SWFUpload external library to fix cross-site scripting vulnerabilities. Reported by <a href="http://ma.la">mala</a> and <a href="http://mars.iti.pk.edu.pl/~grucha/">Szymon Gruszecki</a>. (Developers: More on SWFUpload <a href="http://make.wordpress.org/core/2013/06/21/secure-swfupload/">here</a>.)</li>\n<li>Prevention of a denial of service attack, affecting sites using password-protected posts.</li>\n<li>An update to an external TinyMCE library to fix a cross-site scripting vulnerability. Reported by <a href="http://twitter.com/rinakikun">Wan Ikram</a>.</li>\n<li>Multiple fixes for cross-site scripting. Reported by <a href="http://webapplicationsecurity.altervista.org/">Andrea Santese</a> and Rodrigo.</li>\n<li>Avoid disclosing a full file path when a upload fails. Reported by <a href="http://hauntit.blogspot.de/">Jakub Galczyk</a>.</li>\n</ul>\n<p>We appreciated <a href="http://codex.wordpress.org/FAQ_Security">responsible disclosure</a> of these issues directly to our security team. For more information on the changes, see the <a href="http://codex.wordpress.org/Version_3.5.2">release notes</a> or consult <a href="http://core.trac.wordpress.org/log/branches/3.5?rev=24498&stop_rev=23347">the list of changes</a>.</p>\n<p><a href="http://wordpress.org/wordpress-3.5.2.zip">Download WordPress 3.5.2</a> or update now from the Dashboard → Updates menu in your site’s admin area.</p>\n<p><em>Also:</em> <strong>WordPress 3.6 Beta 4:</strong> If you are testing WordPress 3.6, please note that <a href="http://wordpress.org/wordpress-3.6-beta4.zip">WordPress 3.6 Beta 4</a> (zip) includes fixes for these security issues.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 19:54:26 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Andrew Nacin";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:71:"WordPress.tv: Naomi C. Bush: Moving From Works For Me to Doing It Right";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=18811";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:87:"http://wordpress.tv/2013/06/21/naomi-c-bush-moving-from-works-for-me-to-doing-it-right/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:697:"<div id="v-sUVjt9Sa-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18811/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18811/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18811&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/21/naomi-c-bush-moving-from-works-for-me-to-doing-it-right/"><img alt="Naomi C. Bush: Moving From Works For Me to Doing It Right" src="http://videos.videopress.com/sUVjt9Sa/video-656ff88636_scruberthumbnail_0.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 17:28:36 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:49:"WPTavern: Matt Mullenweg On This Week In Startups";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7411";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:101:"http://feedproxy.google.com/~r/WordpressTavern/~3/LDVxv7josIM/matt-mullenweg-on-this-week-in-startups";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:559:"<p>Plan to set aside about 1 hour and 38 minutes to watch both parts. Each is filled with a ton of good information and great dialogue. Topics covered include, GPL licensing, iOS controlling the marketplace for apps, what happened with Six Apart/MovableType, social networking replacing blogging, and much more. The interview took place at the All Things D conference 2013 by Jason Calacanis.  </p>\n<div class="aligncenter"></div>\n<div class="aligncenter"></div>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/LDVxv7josIM" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 17:15:28 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:42:"WordPress.tv: How to Use The Media Library";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=18320";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:69:"http://wordpress.tv/2013/06/21/wpmu-dev-how-to-use-the-media-library/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:660:"<div id="v-qQhGdEvj-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18320/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18320/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18320&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/21/wpmu-dev-how-to-use-the-media-library/"><img alt="WPMU DEV: How to Use The Media Library" src="http://videos.videopress.com/qQhGdEvj/video-7ad09dd0ef_scruberthumbnail_1.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 17:13:57 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:38:"WPTavern: Automattic Is Women Friendly";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7408";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:90:"http://feedproxy.google.com/~r/WordpressTavern/~3/3qvCEbCu5m8/automattic-is-women-friendly";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3411:"<p><a href="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2009/07/automatticlogo.png" rel="thumbnail"><img class="alignleft size-full wp-image-1872" alt="Automattic Logo" src="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2009/07/automatticlogo.png?resize=400%2C49" /></a></p>\n<p>&nbsp;</p>\n<p>If you&#8217;re a woman and looking for a tech oriented job, it looks like Automattic may be the <a title="http://automattic.com/work-with-us/" href="http://automattic.com/work-with-us/">perfect place to work</a>. According to a <a title="http://www.women2.com/how-automattic-empowers-women-a-culture-that-neutralizes-gender/" href="http://www.women2.com/how-automattic-empowers-women-a-culture-that-neutralizes-gender/">recent article published by Women 2.0 </a> the distributed nature as well as the entire company culture is about empowering people regardless of their gender. One of the beautiful things about Automattic is the communication factor. One would think that not having a central office where everyone that is apart of the company works out of would be a hindrance to communication. In this instance, it&#8217;s actually the opposite. The team uses over 160 different P2 blogs that are organized by function, teams, and projects. This has at times lead to over communication, if that&#8217;s possible. Those P2 sites are accessible to everyone within the company which produces a window of transparency. You don&#8217;t have to worry about back-room deals or meetings where a sub-section of workers don&#8217;t know what&#8217;s going on.</p>\n<div>\n<blockquote>\n<p dir="ltr">This openness not only fends off politics, it promotes more recognition and feedback for ideas and contributions, helping to equalize how people participate at work. “I think our communication style in some ways neutralizes gender. It puts the focus more on things like tone and making sure people participate and speak up,”  Rosso notes.</p>\n<p dir="ltr">With fewer barriers to expressing themselves and being heard, Automatticians don’t have to wait for formal meetings or write out memos. “Recently there was a very long internal thread about finding great female job candidates and what we can do as a company to encourage this, or if it’s even a problem,” Rosso recounts. Rather than having a limp exchange about women in tech within the HR department, the question turned into a real dialogue throughout the company.</p>\n</blockquote>\n<p dir="ltr">One of the things I like most about how Automattic operates is the flexibility offered to all of their employees to move between teams and projects so that individuals have the choice of learning different skill-sets and contributing to projects that they are interested in. They don&#8217;t have to be stuck doing the same thing for years on end.</p>\n<p dir="ltr">Although not written by a female, I&#8217;m looking forward to reading a new book by Scott Berkun titled <a title="http://www.amazon.com/The-Year-Without-Pants-WordPress-com/dp/1118660633" href="http://www.amazon.com/The-Year-Without-Pants-WordPress-com/dp/1118660633">The Year Without Pants</a> slated for release on September 10th, 2013 which chronicles how Automattic works as a company from an insider&#8217;s view and what lessons other companies can learn from them.</p>\n</div>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/3qvCEbCu5m8" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 16:02:01 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:52:"WPTavern: Matt Cutts Switches From Thesis To Genesis";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7395";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:104:"http://feedproxy.google.com/~r/WordpressTavern/~3/zD0l4fWWUpE/matt-cutts-switches-from-thesis-to-genesis";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2752:"<p><a href="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/GenesisFrameworkLogo.jpg" rel="thumbnail"><img src="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/GenesisFrameworkLogo.jpg?resize=182%2C123" alt="Genesis Framework Logo" class="alignright size-full wp-image-7396" /></a>Matt Cutts, the public figure for the Google Webspam team has <a href="http://www.mattcutts.com/blog/" title="http://www.mattcutts.com/blog/">switched his site</a> from using the Thesis theme to <a href="http://www.studiopress.com/" title="http://www.studiopress.com/">Genesis</a>. Matt has used Thesis on his blog since <a href="http://www.mattcutts.com/blog/switching-things-around/" title="http://www.mattcutts.com/blog/switching-things-around/">April 26, 2009</a>. I tried to figure out a way to get in touch with Matt to find out why he made the switch but from the looks of things, there is no way to get in direct contact with him. </p>\n<p>If we rewind the clocks back to July of 2010, a portion of the WordPress community was in the midst of <a href="http://themesforge.com/theme-news/thesis-gets-hacked-and-the-coming-thesis-vs-automattic-battle/" title="http://themesforge.com/theme-news/thesis-gets-hacked-and-the-coming-thesis-vs-automattic-battle/">one of the largest GPL debates</a> in the history of WordPress between Matt Mullenweg and Chris Pearson. On July 20th, 2010 Matt Cutts <a href="http://wp-community.org/2010/07/20/google-matt-cutts-wordpress/" title="http://wp-community.org/2010/07/20/google-matt-cutts-wordpress/">appeared on the WordPress Podcast</a> where he first mentioned the possibility of switching from Thesis to the default theme in WordPress but the switch was more a case of WordPress improving to the point of not needing Thesis versus whether it was violating the GPL or not. </p>\n<p>For those that don&#8217;t think it&#8217;s news to see people like Matt Cutts switch to a different theme, consider the following text which shows up time and time again when searching Google for Thesis:</p>\n<blockquote><p>Thesis is such a popular theme that even Matt Cutts from Google uses it. You couldn&#8217;t ask for a better endorsement!</p></blockquote>\n<p>Well, that endorsement is now gone. Considering Matt was going to switch themes in 2010 because of the increase in features in WordPress and not because it had anything to do with the GPL leads me to believe that this most recent move didn&#8217;t have much to do with the license either. In fact, all of the SEO work that&#8217;s gone into the Genesis Theme Framework recently has probably perked Matt&#8217;s interest. This is speculative of course. </p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/zD0l4fWWUpE" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 15:00:03 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:71:"Donncha: Integrate Google+ and Facebook Comments in your WordPress blog";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:29:"http://ocaoimh.ie/?p=89498429";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:91:"http://ocaoimh.ie/2013/06/21/integrate-google-and-facebook-comments-in-your-wordpress-blog/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2213:"<p><img src="http://ocaoimh.ie/ocaoimh/2013/06/screenshot-1.png" alt="screenshot-1" width="643" height="612" class="aligncenter size-full wp-image-89498430" /></p>\n<p>If posts are the life blood of a successful blog, then comments are probably the heart as they encourage the author and provide a discussion mechanism around a story*. The problem is that blogs can be seen as an island in the ocean surrounded by social media continents such as Google Plus and Facebook. The islands may not get much attention. </p>\n<p>That&#8217;s where the plugin <a href="http://wordpress.org/plugins/gplus-comments/">Google+ Comments for WordPress</a> comes in. It&#8217;s simple to install and adds a tabbed comment interface at the end of each post where visitors can comment using their identities on their favourite social media site. </p>\n<p>I left a Google Plus comment on a previous post and allowed it to be shared on Google Plus. I got a few replies on that post which also appeared on my blogh. I wouldn&#8217;t go sharing every comment you make from your blog. Spamming is spamming, whatever way you do it.</p>\n<p>* On Youtube of course it&#8217;s usually the reverse. Never read the comments on a popular Youtube video. It&#8217;ll hurt your brain.</p>\n<div align="center"><!--\n				google_ad_client = "pub-1076796686536503";\n			/* 336x280, created 22/05/09 */\n			google_ad_slot = "6456264552";\n			google_ad_width = 336;\n			google_ad_height = 280;\n			//-->\n				</div>\n<p><strong>Related Posts</strong><ul><li> <a href="http://ocaoimh.ie/2006/10/06/ping-google-too/" rel="bookmark" title="Permanent Link: Ping Google Too!">Ping Google Too!</a></li><li> <a href="http://ocaoimh.ie/2007/12/20/we-dated-on-facebook/" rel="bookmark" title="Permanent Link: We dated on Facebook">We dated on Facebook</a></li><li> <a href="http://ocaoimh.ie/2007/12/14/subscribe-to-comments/" rel="bookmark" title="Permanent Link: Subscribe to comments?">Subscribe to comments?</a></li></ul></p><p><a href="http://ocaoimh.ie/2013/06/21/integrate-google-and-facebook-comments-in-your-wordpress-blog/">Integrate Google+ and Facebook Comments in your WordPress blog</a> originally appeared on <a href="http://ocaoimh.ie">Holy Shmoly!</a>.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 13:15:53 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:7:"Donncha";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:39:"WPTavern: Bad Attitudes Are Not Welcome";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7400";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:91:"http://feedproxy.google.com/~r/WordpressTavern/~3/AMAdlbHWtO8/bad-attitudes-are-not-welcome";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3585:"<p>Tom McFarlin of 8Bit has written a piece entitled <a href="http://wpdaily.co/attitude-adjustment/" title="http://wpdaily.co/attitude-adjustment/">The WordPress Community Needs an Attitude Adjustment</a> and while I agree with the overall point of needing to just be nicer to each other, his post generates a lot of different thoughts and emotions inside of me. </p>\n<p>On the one hand, I read Tom&#8217;s post and come away thinking that everyone should just shut up and stare at the sign that says <strong>Patches Welcome</strong> which at times, appears to be the answer to any form of criticism or discussion about WordPress. On the other, I see the point of being more civil towards one another when disagreements or engagement occurs. This thing we call the WordPress community does an excellent job of policing itself but a quick Google search shows that at times, we certainly eat our own for lunch. I can see how this public display of back and forth fighting could turn off a lot of people from contributing to WordPress much less be a part of that circle.</p>\n<p>In Tom&#8217;s article, Jake Goldman of WordPress consulting firm <a href="http://10up.com/" title="http://10up.com/">10up</a> left this great comment:</p>\n<blockquote><p>Any large, enthusiastic community is going to have louder, more opinionated voices, and softer “never offend” voices. And even those of us that generally strive to be loud only when the subject seems in need of broader discussion, sometimes err in how we communicate (I know I regret the way I framed a point about business and WordCamps that was, ironically, sensationalized here).</p>\n<p>Follow any large audience – Android fans, UX groups, Joomla communities – and you’ll find the same characteristics. It’s a sign that we’re passionate, diverse, and engaging. And human!</p>\n<p>No one would argue that calmer, more professional dialog is a bad thing. IMHO, lets just remember its not uniquely endemic to WordPress, and try to embrace, not shun, the more opinionated among us.</p></blockquote>\n<p>WPTavern has played host to several important discussions surrounding WordPress over the years and I can&#8217;t count the number of times I saw core WordPress developers shrug people and their concerns off as &#8216;<em>big deal</em>&#8216;. It&#8217;s infuriating to be passionate about WordPress, raise a valid concern and instead of those close to the heart of WordPress taking an active stance and being part of the conversation, they insist on shrugging people and the conversation off. I would like to formally recognize Mark Jaquith as <strong>NOT</strong> being one of those people. Mark has often  participated in these discussions offering rational, level-headed approaches to our discussions and sometimes, validating our concerns while providing us direction on how to solve them. As far as I&#8217;m concerned, he&#8217;s a role model for those at the top on how to deal with issues that are raised by members of the community.</p>\n<p>Ultimately, the WordPress eco-system is better off by eliminating unnecessary insults, threats, public displays of bashing, and being the crudest of human beings. There&#8217;s no room in the community for that crap. It doesn&#8217;t mean that we&#8217;re forced to sit around a campfire and be happy WordPress hippies signing kumbaya. It just means we can have meaningful dialogue among each other to generate forward progress without having to take part in all the above. </p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/AMAdlbHWtO8" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 20 Jun 2013 20:02:58 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:15;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:67:"WordPress.tv: Natalie MacLees: Using jQuery in Your WordPress Theme";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19364";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:84:"http://wordpress.tv/2013/06/20/natalie-maclees-using-jquery-in-your-wordpress-theme/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:684:"<div id="v-gvYXVNsE-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19364/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19364/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19364&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/20/natalie-maclees-using-jquery-in-your-wordpress-theme/"><img alt="Natalie MacLees: Using jQuery in Your WordPress Theme" src="http://videos.videopress.com/gvYXVNsE/video-635510490f_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 20 Jun 2013 17:02:24 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:16;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:61:"WPTavern: GenerateWP.com – Useful WordPress Code Generators";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7385";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:111:"http://feedproxy.google.com/~r/WordpressTavern/~3/jORrz52sRZQ/generatewp-com-useful-wordpress-code-generators-2";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1222:"<p><a href="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/GenerateWPLogo.png" rel="thumbnail"><img src="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/GenerateWPLogo.png?resize=298%2C60" alt="Generate WP Logo" class="alignright size-full wp-image-7388" /></a>Who doesn&#8217;t love a good code generator for WordPress? <a href="http://generatewp.com/" title="http://generatewp.com/">GenerateWP.com</a> should definitely be added to your list of bookmarked resources as the site provides a number of different generators for common tasks such as WP-Config file, sidebars, custom post types, menus, and more. Best of all, the code generated from this website meets the <a href="http://codex.wordpress.org/WordPress_Coding_Standards" title="http://codex.wordpress.org/WordPress_Coding_Standards">WordPress coding standards</a>. Rami Yushuvaev did a great job with the site. I&#8217;m curious to know how many of you have used the code generated by his website in your own projects or do you mostly write your own code from scratch? What other types of WordPress generators would you find useful?</p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/jORrz52sRZQ" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 20 Jun 2013 02:46:58 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:17;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:57:"WPTavern: PressForward – RSS Reader Inside Of WordPress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7370";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:105:"http://feedproxy.google.com/~r/WordpressTavern/~3/mb-pcnNNH3w/pressforward-rss-reader-inside-of-wordpress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4412:"<p><a href="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/PressforwardLogo.jpg" rel="thumbnail"><img class="alignleft size-full wp-image-7371" alt="Press Forward Logo" src="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/PressforwardLogo.jpg?resize=419%2C72" /></a></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>With the impending shutdown of Google Reader on July 1st, I&#8217;ve been looking for Feedreader alternatives. I happened to stumble across a recently developed plugin called <a title="https://github.com/PressForward/pressforward" href="https://github.com/PressForward/pressforward">PressForward</a>. Developed for the <a href="http://chnm.gmu.edu" target="_blank">Roy Rosenzweig Center for History and New Media</a> at <a href="http://gmu.edu" target="_blank">George Mason University</a> by <a href="http://aramzs.me" target="_blank">Aram Zucker-Scharff</a>, <a href="http://boone.gorg.es/" target="_blank">Boone B. Gorges</a>, and <a href="http://clioweb.org" target="_blank">Jeremy Boggs</a>, PressForward provides not only a set of curation tools for authors, but a simple feedreader as well. The plugin is in beta form and it&#8217;s obvious once you start using it but here is my experience with it thus far.</p>\n<p><a href="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/Pressforward1.jpg" rel="thumbnail"><img class="aligncenter size-large wp-image-7377" alt="PressForward Interface" src="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/Pressforward1.jpg?resize=500%2C274" /></a></p>\n<p>My main interest was determining whether PressForward could work as my primary feedreader with the added benefit of being within the back-end of WordPress. After experimenting with it for the better part of the day, I&#8217;ve determined that it&#8217;s not something that fulfills my needs. For starters, there is no way to browse feeds by folder/site, it&#8217;s all or nothing. Adding feeds is another matter. It&#8217;s not as simple as clicking an RSS feed button and adding the site to the back-end of WordPress. Instead, you&#8217;ll need to link to a OPML file or provide the URL of a single feed. In the future, it would be beneficial to have the ability to upload an OPML file instead.</p>\n<h2>What And Who This Plugin Is Really Meant For:</h2>\n<p>The ideas behind this plugin start to shine when you consider its feature set mixed with a multi-author website. Say we have a website with 7 authors dedicated to all things WordPress. All 7 authors can use the feedreader in PressForward to curate content from those feeds and then nominate their content to be published to the front page. When a piece of content is nominated, it goes under review and from here, authors can automatically create a draft post from the nominated content.</p>\n<p><a href="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/Pressforward3.jpg" rel="thumbnail"><img class="aligncenter size-full wp-image-7378" alt="Press forward Draft" src="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/Pressforward3.jpg?resize=249%2C149" /></a></p>\n<p>It&#8217;s not just the administrators that can curate content. PressForward has drop-down menus that control the permission levels for specific sections of the plugin. I could see this becoming handy for someone that wanted to create a crowd-sourcing site dedicated to a specific topic.</p>\n<p><a href="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/Pressforward4.jpg" rel="thumbnail"><img class="aligncenter size-full wp-image-7379" alt="PressForward Permission Settings" src="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/Pressforward4.jpg?resize=337%2C306" /></a></p>\n<p>One of the other neat aspects is the built-in commenting system. Each article can be commented on which aids in collaborating on the story. Those comments are not accessible to the public.</p>\n<h2>Conclusion:</h2>\n<p>PressForward is not a good recommendation for single site authors looking to replace their desktop or service based feedreaders with something that exists within WordPress. However, this is definitely a plugin to keep your eyes on if you&#8217;re the owner of a multi-authored website that covers specific topics and would like an easier way to collaborate with others on different stories.</p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/mb-pcnNNH3w" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 19 Jun 2013 22:17:40 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:18;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:37:"WPTavern: WordPress 3.6 Status Update";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7373";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:89:"http://feedproxy.google.com/~r/WordpressTavern/~3/3Aw2itwe0Y8/wordpress-3-6-status-update";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1533:"<p>I&#8217;ve received some emails and Twitter responses asking me if I knew any information as to when WordPress 3.6 would be released. After looking around, it was clear that not a lot of information about the upcoming release is available. I stopped by the WordPress developers chat today to figure out what was going on and here is what I know. There is still quite a bit of work to be done before 3.6 is officially released. When I posed the question of when could we expect either a new beta or 3.6 to be released, here was the answer I received from Andrew Nacin:</p>\n<blockquote><p>When it&#8217;s done. There&#8217;s no new timeline because we just need to get things done and ship, and we don&#8217;t know how long that&#8217;ll take just yet.</p></blockquote>\n<p>The last thing I want to do is be a hindrance on the core developers of WordPress and ask a silly question like, &#8220;<em>When will so and so be released</em>&#8221; especially if the answer to that question is already answered on the <a title="http://make.wordpress.org/core/" href="http://make.wordpress.org/core/">make.core.wordpress</a> site but in this instance, it wasn&#8217;t and it&#8217;s been two weeks since the public has had any news on what is going on. At the same time, I&#8217;ve been reminded that if there are no updates on the Make.Core.WordPress site it&#8217;s because the developers are knee deep in code trying to get things fixed.</p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/3Aw2itwe0Y8" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 19 Jun 2013 21:09:10 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:19;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:88:"WordPress.tv: Billie Hillier: How to Make Readers &amp; Search Engines Love Your Content";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19431";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:99:"http://wordpress.tv/2013/06/19/billie-hillier-how-to-make-readers-search-engines-love-your-content/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:716:"<div id="v-kuJBvkt4-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19431/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19431/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19431&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/19/billie-hillier-how-to-make-readers-search-engines-love-your-content/"><img alt="Billie Hillier: How to Make Readers & Search Engines Love Your Content" src="http://videos.videopress.com/kuJBvkt4/video-e4a477e3a4_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 19 Jun 2013 16:59:50 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:20;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:66:"WordPress.tv: Joe Boydston: Free Speech, Free Press, Free Software";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19424";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:81:"http://wordpress.tv/2013/06/19/joe-boydston-free-speech-free-press-free-software/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:680:"<div id="v-MHezWHhU-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19424/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19424/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19424&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/19/joe-boydston-free-speech-free-press-free-software/"><img alt="Joe Boydston: Free Speech, Free Press, Free Software" src="http://videos.videopress.com/MHezWHhU/video-b4c7c98d69_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 19 Jun 2013 16:56:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:21;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:41:"WPTavern: Does Sex Sell WordPress Themes?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7366";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:92:"http://feedproxy.google.com/~r/WordpressTavern/~3/6d3CksO7O78/does-sex-sell-wordpress-themes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1530:"<p>In what is the first time I&#8217;ve ever seen the issue raised, WP Garage brings up the topic of <a href="http://wpgarage.com/themes/wordpress-themes-what-is-up-with-your-scandalous-images/" title="http://wpgarage.com/themes/wordpress-themes-what-is-up-with-your-scandalous-images/">whether scandalous images sell more WordPress Themes</a>? In the examples Rebecca Markowitz provides within the post, there are a couple of images featuring women covered in different colors of paint while barely having any clothes on. The third example shows an image of a topless female and male laying on the floor apparently hugging each other. </p>\n<p><a href="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/SexSellThemes.jpg" rel="thumbnail"><img src="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/SexSellThemes.jpg?resize=536%2C241" alt="Sex Sells Themes" class="aligncenter size-full wp-image-7367" /></a></p>\n<p>Rebecca&#8217;s main concern is showing these themes to clients, especially younger ones where these type of images border on inappropriate. Obviously, for porn themes, sex sells, but I can&#8217;t remember the last time I saw a theme on a marketplace that stopped me dead in my tracks because of a demo content image of a naked woman or a naked man or anything close that I would consider to be inappropriate. Have you? Also, is this a legitimate concern amongst other WordPress consultants?</p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/6d3CksO7O78" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 22:04:09 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:22;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:36:"WPTavern: Lofty Goal Set For Tung Do";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7361";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:88:"http://feedproxy.google.com/~r/WordpressTavern/~3/bjTdrtVIaTA/lofty-goal-set-for-tung-do";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1696:"<p>Tung Do otherwise known throughout the WordPress community as &#8216;<em>Small Potato</em>&#8216; is on a mission. That mission is as follows:</p>\n<blockquote><p>To create a more enjoyable and feature-packed service than WordPress.com. I’m not gunning for WP.com, but it’s the easiest way to explain what I’m going to build. And instead of re-inventing the wheel, I’ll use WP.com’s business model — freemium — as well.</p></blockquote>\n<p>In a <a href="http://devpress.com/shooting-myself-in-the-foot/" title="http://devpress.com/shooting-myself-in-the-foot/">recent blog post</a> on DevPress.com, Tung Do outlines something akin to a business plan. While his personal project won&#8217;t be a direct WP.com competitor, he&#8217;ll use the freemimum model popularized by Automattic. The service will have one theme, not many although he mentions the possibility of child themes down the road. While the initial account will be free, there will be optional paid upgrades. </p>\n<p>Tung Do&#8217;s <a href="http://devpress.com/shooting-myself-in-the-foot/#comment-18880" title="http://devpress.com/shooting-myself-in-the-foot/#comment-18880">follow up comment</a> to his article is also worth reading to get a better idea about what he&#8217;ll be working on. While the hosting business is tough as nails, I think there is still room in that segment to succeed. I reached out to Tung to find out more about his project but he doesn&#8217;t want to go into details about something that doesn&#8217;t exist yet.</p>\n<p>If you had any advice for Small Potato, what would you tell him?</p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/bjTdrtVIaTA" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 21:12:15 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:23;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:53:"WordPress.tv: Understanding WordPress Post Categories";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=18554";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:71:"http://wordpress.tv/2013/06/18/understanding-wordpress-post-categories/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:638:"<div id="v-qFoOVaF1-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18554/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18554/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18554&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/18/understanding-wordpress-post-categories/"><img alt="wppostcategories.mp4" src="http://videos.videopress.com/qFoOVaF1/video-c9340f4e15_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 19:00:28 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:24;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"Alex King: Capsule 1.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://alexking.org/?p=17290";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:47:"http://alexking.org/blog/2013/06/18/capsule-1-1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:2412:"<p><img src="http://alexking.org/wp-content/uploads/2013/06/capsule-512-300x300.png" alt="capsule-512" width="300" height="300" class="aligncenter size-medium wp-image-17292" /></p>\n<p>I&#8217;m very pleased to announce the release of <a href="http://crowdfavorite.com/capsule/">Capsule</a> v1.1 (and Capsule Server v1.1). In this release we added some pretty handy features along with addressing the usual array of <a href="http://alexking.org/blog/2013/04/24/capsule-the-developers-code-journal">1.0</a>-related issues.</p>\n<p>The <a href="http://crowdfavorite.com/capsule/">download and an online demo</a> are available on the Crowd Favorite website.</p>\n<p>Some of the highlights in the new version include:</p>\n<ul>\n<li>A great icon, compliments of <a href="http://dribbble.com/matthewspiel">Matthew Spiel</a> &#8211; awesome for use as a <a href="http://fluidapp.com/">Fluid app</a> icon</li>\n<li>Keyboard shortcuts to navigate home (shift-h), create a new post (shift-n), and set focus to the search field (shift-f)</li>\n<li>A background queue for sending posts to Capsule Server (saves are no longer held up by the remote request) &#8211; requires Capsule Server 1.1</li>\n<li>The ability to map multiple local projects to a single project on Capsule Server</li>\n<li>An indicator to show which Capsule Server(s) a post has been pushed to</li>\n</ul>\n<p><img src="http://alexking.org/wp-content/uploads/2013/06/server-push-510x248.png" alt="server-push" width="480" height="233" class="aligncenter size-medium-img wp-image-17293" /></p>\n<p>We&#8217;ve also added some hooks and addressed a <a href="https://github.com/crowdfavorite/wp-capsule/issues?milestone=1&state=closed">number of issues</a> relating to syntax highlighting, additional default display styling and formatting, etc.</p>\n<p>A big thank you to everyone who reported issues, suggested features and submitted patches. If you&#8217;re interested in contributing, please <a href="https://github.com/crowdfavorite/wp-capsule/">join us on GitHub</a>.</p>\n<hr />\n<p>Capsule is a developer&#8217;s code journal, implemented as a WordPress-based app. Think of it as a replacement for that text file you have open while you&#8217;re building things. Instead of throwing those artifacts away, easily tag and capture them for the future.</p>\n<hr />\n<p>And only 30 minutes later, version 1.1.1 fixes the missing JS in the build file (optimized.js).</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 17:59:13 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Alex";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:25;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:63:"WordPress.tv: Colin Loretz: Consuming Web APIs within WordPress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19397";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:80:"http://wordpress.tv/2013/06/18/colin-loretz-consuming-web-apis-within-wordpress/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:676:"<div id="v-P3dxTa9N-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19397/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19397/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19397&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/18/colin-loretz-consuming-web-apis-within-wordpress/"><img alt="Colin Loretz: Consuming Web APIs within WordPress" src="http://videos.videopress.com/P3dxTa9N/video-5d04b56f95_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 17:41:37 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:26;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"WP Blackberry: Get Involved";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:38:"http://blackberry.wordpress.org/?p=697";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://blackberry.wordpress.org/2013/06/18/get-involved/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1189:"<p>Did you know WordPress for BlackBerry is an Open Source project, which means anyone, including you, can play a part in its development?</p>\n<p>WordPress for BlackBerry is released under the <a href="http://blackberry.svn.wordpress.org/trunk/license.txt">GNU General Public License</a>. Both our app and source code are free to download and use however you’d like. In return, if you&#8217;re able, we’d love it if you contributed your code, design skills, or even your suggestions for this project.</p>\n<p>Our developers now discuss development plans and progress at <a href="http://make.wordpress.org/mobile/tag/blackberry/" target="_blank">make.wordpress.org</a> under the &#8220;BlackBerry&#8221; tab. We invite you to follow along and join the discussion there. You can also follow the changes to our <a href="http://blackberry.trac.wordpress.org/timeline">source code in Trac</a>. (The login system uses the <a href="http://wordpress.org/support/register.php">WordPress.org registration</a>.)</p>\n<br />  <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=blackberry.wordpress.org&blog=8247031&post=697&subd=wpblackberry&ref=&feed=1" width="1" height="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 17:04:21 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:20:"Cheri Lucas Rowlands";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:27;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:47:"WPTavern: WordPress Isn’t Done Yet, Or Is It?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7348";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:94:"http://feedproxy.google.com/~r/WordpressTavern/~3/oRVBlIu0sX4/wordpress-isnt-done-yet-or-is-it";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3923:"<p>John O&#8217; Nolan believes that <a href="http://www.fastcolabs.com/3013086/open-company/who-will-pick-up-where-wordpress-left-off" title="http://www.fastcolabs.com/3013086/open-company/who-will-pick-up-where-wordpress-left-off">publishing on the web is in a state of complete disrepair</a>. That is hard to believe considering it&#8217;s never been as easy to publish content online as it is today. However, whether or not WordPress is the best tool for <strong>THAT</strong> job is up for debate. There is a reason why some WordPress faithful like Jason Schuller of <a href="http://press75.com/" title="http://press75.com/">Press75.com</a> have stopped using WordPress for their personal sites and instead, have gone off to create <a href="http://dropplets.com/" title="http://dropplets.com/">their own vision</a> of what a publishing platform should be like. I asked Jason what pushed him over the edge to stop using WordPress.</p>\n<blockquote><p>I&#8217;m not sure that any one thing in particular pushed me over the edge. Being excited, happy and passionate about what I’m working on/with is very important to me, and I no longer feel any of those things when it comes to WordPress. Creating a simple WordPress theme (for example) has become a grueling task because there are certain expectations that you have to consider in order for the WordPress community to accept your work. </p>\n<p>I still think WordPress is an amazing piece of software that has opened so many doors for so many people and that is something I will never forget&#8230; it’s just not something that interests me in its current state or direction. My focus is on creating simple/elegant solutions that actual people can use without having to spend weeks reading through tutorials or sifting through admin menus. Also, in order to continue to learn and grow as an entrepreneur I have to leave WordPress behind and find my own path.</p></blockquote>\n<p>Then there is <a href="http://wiki.habariproject.org/en/Manual#Introduction" title="http://wiki.habariproject.org/en/Manual#Introduction">Habari</a>. Habari is another project created from the ground up from former WordPress developers/users. If you want to hear Matt&#8217;s thoughts on Habari at the time, I highly encourage you to <a href="http://wp-community.org/2007/01/18/episode-18-habari-wordpress-206-released-wordpress-21-enters-beta/" title="http://wp-community.org/2007/01/18/episode-18-habari-wordpress-206-released-wordpress-21-enters-beta/">listen to episode 18 of the original WordPress Podcast</a> from January 18th, 2007 starting at the 10:34 mark. Their news bit includes a quote from Matt with his thoughts on the release of Habari as well as open-source competitors. I wonder if his attitude on competitors is the same today as it was back then. </p>\n<p>There are a handful of other publishing platforms available but the core point I want to draw attention to is that they all seem to focus around one thing. <strong>Simplicity</strong>. One of the major features of WordPress in its early years was in fact, simplicity. Now it seems as though that simplicity is disappearing and is ending up in entirely new codebases. There is no need to panic but it&#8217;s a trend worth taking note of. </p>\n<p>I love the freedoms that WordPress provides but I&#8217;d hate to see people give up those freedoms to go behind a walled garden because WordPress is just too darn complex to use. A strong pillar of the WordPress ecosystem is its third-party community via plugins and themes. But this pillar can not exist as the foundation of WordPress, nor should it. The foundation should be the publishing software. If the third-party ecosystem becomes <em><strong>the only</strong></em> reason to use WordPress and I were a core developer, I&#8217;d be extremely disappointed. </p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/oRVBlIu0sX4" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 21:28:23 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:28;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:67:"WPTavern: Matt Mullenweg Donates $1.5 Million To Bay Lights Project";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7343";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:118:"http://feedproxy.google.com/~r/WordpressTavern/~3/KhEalHFe6rI/matt-mullenweg-donates-1-5-million-to-bay-lights-project";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:751:"<p>WordPress founder Matt Mullenweg has stepped up and donated the remaining 1.5 million dollars to the <a href="http://thebaylights.org/" title="http://thebaylights.org/">Bay Lights project</a> in San Francisco, California. Talk about generosity! Thanks to his donation, the project will be able to go through with its planned 2-year run. Now I have one more reason to view the bridge when I attend <a href="http://2013.sf.wordcamp.org/" title="http://2013.sf.wordcamp.org/">WordCamp San Francisco</a>. </p>\n<div class="aligncenter"> </div>\n<div class="aligncenter"><strong>View of the Bay Lights in action</strong></div>\n<div class="aligncenter"></div>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/KhEalHFe6rI" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 18:26:31 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:29;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:87:"WordPress.tv: Mike Fitzpatrick: Using WordPress to Change How You Think About Marketing";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19413";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:104:"http://wordpress.tv/2013/06/17/mike-fitzpatrick-using-wordpress-to-change-how-you-think-about-marketing/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:724:"<div id="v-Fgv86TLO-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19413/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19413/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19413&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/17/mike-fitzpatrick-using-wordpress-to-change-how-you-think-about-marketing/"><img alt="Mike Fitzpatrick: Using WordPress to Change How You Think About Marketing" src="http://videos.videopress.com/Fgv86TLO/video-9e79fef3ca_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 17:37:55 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:30;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:74:"WordPress.tv: Sterling Hamilton: Tips &amp; Tricks for Extending WordPress";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19368";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:85:"http://wordpress.tv/2013/06/17/sterling-hamilton-tips-tricks-for-extending-wordpress/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:688:"<div id="v-G3khlm8D-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19368/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19368/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19368&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/17/sterling-hamilton-tips-tricks-for-extending-wordpress/"><img alt="Sterling Hamilton: Tips & Tricks for Extending WordPress" src="http://videos.videopress.com/G3khlm8D/video-f2e082834a_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 17:35:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:31;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"Matt: Bookend Gifts";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:21:"http://ma.tt/?p=42448";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:35:"http://ma.tt/2013/06/bookend-gifts/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1997:"<p>The news came out this weekend on <a href="http://www.mercurynews.com/traffic/ci_23468067/bay-lights-receives-1-5-million-gift-display">Mercury News</a> and the <a href="http://www.sfgate.com/bayarea/article/Fixes-funding-brighten-Bay-Lights-day-4602033.php">Chronicle</a>, so it&#8217;s worth addressing here: <a href="http://thebaylights.org/">The Bay Lights</a>, a public art project that uses San Francisco&#8217;s Bay Bridge as its canvas, is a project I&#8217;ve supported since I first heard of it and the idea captured my imagination. I was happy to make the first monetary donation when the project got started, and as of last week I was able to make a closing bookend donation for the remaining amount they needed, a bit above $1.5M. It was an honor to chip in along with the thousands of other supporters who have already donated to make the project a reality.</p>\n<blockquote><p>The purpose of art is washing the dust of daily life off our souls. &#8212; Pablo Picasso</p></blockquote>\n<p>My hope is that over the next few years, and perhaps beyond that, the lights brighten people&#8217;s experience of San Francisco whether they see them every night or they&#8217;re one of the 16 million that visit the city every year. Hopefully that effect, however small, spreads to their other interactions long after the lights are off and the sun comes up. There are countless good causes around the world, some which I support regularly <a href="http://ma.tt/about/">are listed on my about page</a>, and I hope to have the opportunity to support many more in the future, but this close-to-home gift to a city that has given me so much seemed like the right thing right now.</p>\n<p>If you haven&#8217;t seen them yet, here are the lights in action, more on the <a href="http://thebaylights.org/celebrating-solutions/">tech fixes happening to the lights on TBL</a>, and <a href="http://ma.tt/2013/02/bay-bridge-cable-walk/">photos I took climbing the bridge a few months ago</a>:</p>\n<p></p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 15:09:54 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Matt";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:32;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:84:"WP Windows Phone 7: Version 2.2 Now Available: Gallery Support for self-hosted sites";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:42:"http://wpwindowsphone.wordpress.com/?p=456";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:59:"http://wpwindowsphone.wordpress.com/2013/06/17/version-2-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3983:"<p><a href="http://wpwindowsphone.files.wordpress.com/2013/02/wpwindowsphone-2-0-gallery-support.png"><img class="alignright size-large wp-image-412" alt="Version 2.2 of WordPress for Windows Phone: Gallery Support for Self-Hosted sites" src="http://wpwindowsphone.files.wordpress.com/2013/02/wpwindowsphone-2-0-gallery-support.png?w=300&h=560" width="300" height="560" /></a>Version 2.2 of WordPress for Windows Phone is now available in the Windows Phone Store. It introduces gallery support for self-hosted sites running WordPress 3.5 or higher. It also resolves many of the outstanding issues and quirks that you have mentioned on the forums and on Twitter.</p>\n<p>Galleries are a great way to share pictures with your friends and followers. An image gallery will display thumbnails for all images attached to a particular post or page. Readers can tap or click any image to launch the gallery full-screen, displaying huge versions of your images.</p>\n<p>You can create a gallery straight from your device by attaching two or more pictures to a post or a page. You can even customize the appearance of a gallery by tapping the &#8220;gallery settings&#8221; button and choosing the best options for your site.</p>\n<h3>Gallery Styles</h3>\n<p>You have great control over how the gallery will be displayed: as a thumbnail grid, or as a slideshow. Both gallery types offer a lot of options to choose, not limited to: random order, page or file attachment.</p>\n<p>Below is an example of an image gallery using the default thumbnail setting. If you click on any of the images you will be able to see what the carousel view looks like:</p>\n\n<a href="http://wpwindowsphone.wordpress.com/2013/02/28/version-2-0/01-dashboard/" title="01-dashboard"><img /></a>\n<a href="http://wpwindowsphone.wordpress.com/2013/02/28/version-2-0/02-write-screen/" title="02 - write screen"><img /></a>\n<a href="http://wpwindowsphone.wordpress.com/2013/02/28/version-2-0/03-gallery-settings/" title="03- gallery settings"><img /></a>\n<a href="http://wpwindowsphone.wordpress.com/2013/02/28/version-2-0/04-gellery-settings/" title="04 - gellery-settings"><img /></a>\n\n<p><strong>Gallery as a slideshow</strong></p>\n<a href="http://wpwindowsphone.wordpress.com/2013/06/17/version-2-2/#gallery-456-1-slideshow">Click to view slideshow.</a>\n<h3></h3>\n<h3><span>More improvements and bug fixes</span></h3>\n<p>This release also includes improvements for WordPress.com  push notifications, as well as fixes for crashes and other bugs.</p>\n<h3>Download</h3>\n<p>Ready to get the latest? Click the link below to update the best WordPress app for Windows Phone so far.</p>\n<p class="download"><a href="http://windowsphone.com/s?appid=5f64ad85-f801-e011-9264-00237de2db9e"><strong>Download App</strong>WordPress for Windows Phone</a><span class="download-info">Supported: WordPress.com or self-hosted WordPress (v. 2.9+)</span></p>\n<h3>Contributors</h3>\n<p>A huge thanks to the contributors that worked on this release: <a href="http://wordpress.org/support/profile/daniloercoli" target="_blank">daniloercoli</a>, and <a href="http://wordpress.org/support/profile/jkv1" target="_blank">jkv1</a>.</p>\n<p>Would you like to get in on the fun? Let us know at <a href="http://make.wordpress.org/mobile" target="_blank">make/mobile on WordPress.org</a> and we&#8217;ll help you get started as a contributor.  Do you have an idea for a new feature or have you encountered a bug that needs fixing? Tell us about it on the <a title="Project Trac site" href="http://wpwindowsphone.wordpress.com/feed/windowsphone.trac.wordpress.org" target="_blank">WordPress for Windows Phone Trac</a>.</p>\n<p>Make sure to follow <a href="https://twitter.com/wpwindowsphone" target="_blank">@WPWindowsPhone on Twitter</a> to get the latest news first.</p>\n<br />  <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wpwindowsphone.wordpress.com&blog=16495748&post=456&subd=wpwindowsphone&ref=&feed=1" width="1" height="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 09:16:43 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Danilo";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:33;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:58:"WordPress.tv: Susan Breidenbach: Feeding the Content Beast";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19410";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:75:"http://wordpress.tv/2013/06/16/susan-breidenbach-feeding-the-content-beast/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:666:"<div id="v-HpbAHk9E-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19410/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19410/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19410&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/16/susan-breidenbach-feeding-the-content-beast/"><img alt="Susan Breidenbach: Feeding the Content Beast" src="http://videos.videopress.com/HpbAHk9E/video-aa31df8291_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 16 Jun 2013 17:33:29 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:34;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:81:"WordPress.tv: Patricia Barnes: Using WordPress to Sell Books and Influence People";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19421";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:98:"http://wordpress.tv/2013/06/16/patricia-barnes-using-wordpress-to-sell-books-and-influence-people/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:712:"<div id="v-Rw6LHPOl-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19421/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19421/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19421&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/16/patricia-barnes-using-wordpress-to-sell-books-and-influence-people/"><img alt="Patricia Barnes: Using WordPress to Sell Books and Influence People" src="http://videos.videopress.com/Rw6LHPOl/video-a70aa5e83c_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 16 Jun 2013 17:30:57 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:35;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:66:"WordPress.tv: Benjamin Lotter: Getting Started with Video Blogging";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=18955";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:83:"http://wordpress.tv/2013/06/15/benjamin-lotter-getting-started-with-video-blogging/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:688:"<div id="v-pUHXK3Hs-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/18955/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/18955/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=18955&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/15/benjamin-lotter-getting-started-with-video-blogging/"><img alt="Benjamin Lotter: Getting Started with Video Blogging" src="http://videos.videopress.com/pUHXK3Hs/video-c7af880e18_scruberthumbnail_0.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 15 Jun 2013 17:25:57 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:36;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:73:"WordPress.tv: Brian Bourn: How To Plan Your WordPress Site For Conversion";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19402";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:90:"http://wordpress.tv/2013/06/15/brian-bourn-how-to-plan-your-wordpress-site-for-conversion/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:696:"<div id="v-LuYPg6ZO-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19402/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19402/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19402&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/15/brian-bourn-how-to-plan-your-wordpress-site-for-conversion/"><img alt="Brian Bourn: How To Plan Your WordPress Site For Conversion" src="http://videos.videopress.com/LuYPg6ZO/video-6ccc48d035_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 15 Jun 2013 17:21:56 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:37;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:58:"WPTavern: WordPress News Is Free. So Who Would Pay For It?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7329";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:108:"http://feedproxy.google.com/~r/WordpressTavern/~3/ROLwPSYuSzE/wordpress-news-is-free-so-who-would-pay-for-it";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5978:"<p>In light of my <a title="http://www.wptavern.com/ill-be-on-dradcast-tonight" href="http://www.wptavern.com/ill-be-on-dradcast-tonight">recent appearance on DradCast</a>, the topic of conversation recently has focused on whether WordPress news centric websites can be self-sustainable. I came to the conclusion that they can&#8217;t which was the basis behind my WordPress news sites disappearing into the <a title="http://www.wptavern.com/wordpress-news-sites-and-the-bermuda-triangle" href="http://www.wptavern.com/wordpress-news-sites-and-the-bermuda-triangle">bermuda triangle post</a>. I&#8217;ve had a chance to look at all the feedback surrounding the topic and it&#8217;s clear that some have totally missed the point I was trying to make. Some of the websites that have repeatedly been used as examples of success in this market include <a title="http://wpdaily.co/" href="http://wpdaily.co/">WPDaily.co</a>, <a title="http://www.wpbeginner.com/" href="http://www.wpbeginner.com/">WPBeginner</a>, <a title="http://www.wpcandy.com" href="http://www.wpcandy.com">WPCandy</a>, and <a title="http://wpmu.org" href="http://wpmu.org">WPMU.org</a> to name a few. The only website in that group that comes close to what I tried to achieve is WPCandy. The other sites all have a source of income that is not based on the content they are publishing.</p>\n<p><strong>WPDaily.co</strong> &#8211; This website is backed by 8Bit</p>\n<p><strong>WPBeginner</strong> &#8211; They offer services such as consulting and custom WordPress designs.</p>\n<p><strong>WPMU.org</strong> &#8211; This site is funded by a commercial plugins and themes</p>\n<p><strong>WPRealm</strong> &#8211; All of the contributors are compensated outside of the content they produce on WPRealm. </p>\n<p>Starting to notice a trend here?</p>\n<p>All four of those websites publish WordPress news and related items on a routine basis but they&#8217;re also excellent examples of the primary point I made: <em>A news centric website takes so much time and energy to maintain and keep fresh, it’s not worth it in the long run unless you have a company backing you or an auxiliary source of cash that pays the bills and puts food on the table at the same time.</em></p>\n<p>A number of people suggested I should have started a consulting section on WPTavern but that was something I was never interested in doing. I was and still am a content creation guy. I needed to figure out how to make the content I created pay for the bills while also getting to the point where the site was self-sustainable. I tried affiliate links for themes and plugins I reviewed, display advertising, sponsorships, nothing I tried was as consistent as a 40 hour work week. I did toy with the idea of putting up a paywall but I wanted as many people as possible to read what I had to say.</p>\n<blockquote><p>I believe that there is space to make money providing WordPress news and information without selling out. I also think that this notion that there would be a void had Matt Mullenweg not bailed out the Tavern and funded Jeff to write there is totally false.</p>\n<p>The WordPress ecosystem is a market like any other, and holes in markets tend to be filled. What fills a hole in a particular market may take different shape over time as the solutions evolve, but people are always out there to fill voids. Especially if you can do something to fill a void that you are passionate about. <a href="http://poststat.us/on-wordpress-news-sites/" title="http://poststat.us/on-wordpress-news-sites/">Brian Krogsgard &#8211; PostStat.us On WordPress News Sites</a></p></blockquote>\n<p>I agree with Brian that there would not have been a void had the Tavern disappeared. Once things started to go south on this website, WPCandy was rocking and rolling. I watched from the sideline as WPCandy became the coolest place to be in the WordPress community and saw Ryan Imel take ideas I had for the Tavern and turn them into reality e.g. the first print edition WordPress magazine, <a href="http://wpcandy.com/quarterly/" title="http://wpcandy.com/quarterly/">The WPCandy Quarterly</a>. Once things started to go south for WPCandy, WPDaily.co became the new popular watering hole. There is never a void in the WordPress news space. </p>\n<p>One of the few people to understand my original point is Curtis McHale. He has an <a href="https://plus.google.com/113827756965068019660/posts/EfgkNUNacea" title="https://plus.google.com/113827756965068019660/posts/EfgkNUNacea">ongoing conversation</a> taking place on Google+. At the end of his comment, he asks the following question: <em>Can a WordPress site monetize just on the news it produces? It may be a naïve assumption that it&#8217;s possible (without a ton of ads).﻿</em> A similar <a href="http://wpmu.org/wordpress-news-sites-are-they-worth-paying-for/" title="http://wpmu.org/wordpress-news-sites-are-they-worth-paying-for/">type question asked on WMPU.org</a> <em>Is WordPress news worth paying for?</em> After my experience with WPTavern, I don&#8217;t think it&#8217;s possible for a WordPress news centric site to survive solely on the content it produces. I&#8217;m interested to see if Brian proves me wrong with PostStat.us.</p>\n<p>I&#8217;ll close out this post by providing these words of wisdom. </p>\n<blockquote><p>My advice to anyone wanting to start a WordPress news centric website, especially if you think it’s going to make you some money is to stop immediately. Focus your efforts on where the real cash is. Commercial plugins, themes, and services. A news centric website takes so much time and energy to maintain and keep fresh, it’s not worth it in the long run unless you have a company backing you or an auxiliary source of cash that pays the bills and puts food on the table at the same time. The value and worth comes from writing code, not text.</p></blockquote>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/ROLwPSYuSzE" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 14 Jun 2013 19:57:50 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:38;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:90:"WordPress.tv: Michelle Blais: 5 Ways to Maintain Brand Consistency in Your WordPress Theme";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19708";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:107:"http://wordpress.tv/2013/06/14/michelle-blais-5-ways-to-maintain-brand-consistency-in-your-wordpress-theme/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:730:"<div id="v-52G8xHwU-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19708/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19708/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19708&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/14/michelle-blais-5-ways-to-maintain-brand-consistency-in-your-wordpress-theme/"><img alt="Michelle Blais: 5 Ways to Maintain Brand Consistency in Your WordPress Theme" src="http://videos.videopress.com/52G8xHwU/video-a7f78d56b6_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 14 Jun 2013 17:18:12 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:39;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:115:"WordPress.tv: Al Caldarone: Circle Gets the Square: Harnessing the Power of WordPress and Making it Work for You…";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19655";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:128:"http://wordpress.tv/2013/06/14/al-caldarone-circle-gets-the-square-harnessing-the-power-of-wordpress-and-making-it-work-for-you/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:776:"<div id="v-KvSoTeLe-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19655/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19655/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19655&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/14/al-caldarone-circle-gets-the-square-harnessing-the-power-of-wordpress-and-making-it-work-for-you/"><img alt="Al Caldarone: Circle Gets the Square: Harnessing the Power of WordPress and Making it Work for You…" src="http://videos.videopress.com/KvSoTeLe/video-97b9250316_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 14 Jun 2013 17:13:27 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:40;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:39:"WPTavern: Theme Review – Americanaura";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7320";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:87:"http://feedproxy.google.com/~r/WordpressTavern/~3/1aN6wZQjnf4/theme-review-americanaura";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:5425:"<p><a href="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeLogo.jpg" rel="thumbnail"><img class="alignright size-full wp-image-7321" alt="AudioTheme Logo" src="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeLogo.jpg?resize=91%2C57" /></a>Custom post types are one of those things in WordPress that&#8217;s been difficult for me to figure out. However, after reviewing the <a title="http://demo.audiotheme.com/americanaura/" href="http://demo.audiotheme.com/americanaura/">Americanaura theme</a> combined with the <a title="https://audiotheme.com/view/audiotheme/" href="https://audiotheme.com/view/audiotheme/">AudioTheme framework</a>, I have a better understanding of why custom post types are so cool.</p>\n<p><a href="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeTips.jpg" rel="thumbnail"><img class="aligncenter size-large wp-image-7322" alt="AudioTheme Tips" src="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeTips.jpg?resize=500%2C285" /></a></p>\n<p>Unlike a traditional theme framework, the majority of the functionality is located in the AudioTheme Plugin. Without this plugin, AudioTheme themes will not function. This setup enables the separation between code and design. The nuts and bolts behind this theme are the custom post types. There are three primary post types, <strong>Gigs, Discography, and Videos</strong>. Each one has a set of custom meta boxes like record details, or ticket prices. While the screenshot shows off a tool-tip, I would like to see more of these added. For example, when adding a new gig, there is a custom meta box for Tickets. One of the fields is for configuring a tickets URL. It&#8217;s not obvious if this URL is something within the theme or a URL to an outside source such as TicketMaster. A simple tool-tip could explain exactly what that field is for. However, most of the theme is self-explanatory.</p>\n<p><a href="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeVolumeControl.jpg" rel="thumbnail"><img class="aligncenter size-full wp-image-7324" alt="AudioTheme Volume Slider" src="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeVolumeControl.jpg?resize=303%2C159" /></a></p>\n<p>One of the coolest features within this framework is the jukebox. The source of music can come from a record or a list of tracks. Once the jukebox is set up, a media player will show up at the bottom of the browser window giving visitors the option to browse through tracks, stop/play, click to a specific point in the music timeline, and volume control. While it&#8217;s a small nitpick, I found the volume control confusing. In most media players, moving the slider<em> down to up</em> or<em> left to right</em> will increase volume. In the jukebox, moving from left to right will increase the volume but the way it&#8217;s displayed makes it look as though the volume is being lowered. A simple color switch would solve this problem.</p>\n<p><a href="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeJukebox.jpg" rel="thumbnail"><img class="aligncenter size-full wp-image-7323" alt="AudioTheme" src="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/AudioThemeJukebox.jpg?resize=560%2C192" /></a></p>\n<p>Both the themes and the plugin framework are licensed under the GPLv2, the same license as WordPress. While checking out, you&#8217;ll notice text that stipulates how many sites you can use the framework on. This is related to how many sites can receive support and is not a restriction of use. Because of the separation between theme and plugin, each has its own price tag. If you&#8217;re a theme developer, you&#8217;ll probably want to look at purchasing only the AudioTheme framework and design around it. But for non-coders, you&#8217;ll most likely need to buy both a theme <strong>and</strong> the framework. However, the website states that any theme purchase will come with a personal license to use the framework.</p>\n<p>It&#8217;s not the most user-friendly setup but I like the versatility it provides them as a company. By keeping the framework separate, AudioThemes can work with other  companies to build designs around their plugin as they did with <a title="https://audiotheme.com/view/blocco/" href="https://audiotheme.com/view/blocco/">Press75</a>. I&#8217;m hoping that in the future, they have a ton of designs to choose from.</p>\n<h2>Conclusion:</h2>\n<p>Overall, the theme I reviewed along with the framework was not only easy to install, but easy to use as well. I remember 5-8 years ago that some of the features that come standard with the AudioTheme Framework and with WordPress were very hard to come by in any other CMS. Take the Jukebox for example. Something like the Jukebox 5-8 years ago would involve installing hacks or using some sort of third-party service. This example of utilizing custom post types has taught me why their versatility is such an exciting component of WordPress. Based on this theme and some other examples I&#8217;ve seen, when a good design is paired with custom post types, magical things happen. I can&#8217;t wait to come across indie or established artists utilizing AudioTheme to get their music to the world, without the need for a middle man.</p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/1aN6wZQjnf4" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 14 Jun 2013 07:04:20 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:41;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:56:"WPTavern: What’s Going On With The WordPress Importer?";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7313";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:104:"http://feedproxy.google.com/~r/WordpressTavern/~3/c2TvkfWm2CQ/whats-going-on-with-the-wordpress-importer";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:3608:"<p><a href="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/WPImporterRatings.jpg" rel="thumbnail"><img src="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/WPImporterRatings.jpg?resize=164%2C181" alt="WordPress Importer Ratings" class="alignright size-full wp-image-7317" /></a>A few days ago, I received an email informing me that the <a href="http://wordpress.org/plugins/wordpress-importer/" title="http://wordpress.org/plugins/wordpress-importer/">WordPress importer</a> plugin was having issues and was at the brink of receiving as many 1 star ratings as it had 5. It&#8217;s never a good sign when you see support forum stats like this: <em>0 of 10 support threads in the last two months have been resolved</em>. But considering the topic creator has to mark the topic as resolved, this is not a fool-proof method of determining if a plugin is broken. From what I can tell, most of the issues surround partial imports and the <a href="http://wordpress.org/support/topic/does-not-import-images-file-attachements" title="http://wordpress.org/support/topic/does-not-import-images-file-attachements">importing of images</a>. </p>\n<p>I used the importer to move all the content from WPTavern.com to a local install of WordPress. I chose to do a full export/import. The WXR file was around 17 megs but WordPress seemed to take forever to process the file, even on my local machine. While all the images were imported properly, they were not attached to the proper posts. The images that were displayed on the local site were linked to the ones within the media library on WPTavern.com. After dropping all the tables from the database and starting over, I tried to import my files again with the same results. Just to see what would happen, I exported only my posts with attachments to see if both would be imported correctly. While the posts were imported correctly, none of the media attachments were brought over into the media library. As illustrated in the support forum post I linked above, the only way to move media attachments from one site to another is to export/import <strong>EVERYTHING</strong>. If I select attachments to be downloaded and exported, then that&#8217;s what should happen no matter which variety of ways I export the content. </p>\n<p><a href="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/NoMediaAttachments.jpg" rel="thumbnail"><img src="http://i0.wp.com/www.wptavern.com/wp-content/uploads/2013/06/NoMediaAttachments.jpg?resize=328%2C240" alt="No Media Attachments" class="aligncenter size-full wp-image-7315" /></a></p>\n<p>It&#8217;s been a long time since I&#8217;ve exported/imported content from one WordPress site to another so I don&#8217;t remember how the process is suppose to play out but if the behavior I described above is considered normal, the import process is definitely not as painless as it should be. After all, exporting/importing from WordPress to WordPress should be as easy as counting 1,2,3. Unlike other plugins that have a specific author, this one is developed by the <a href="http://profiles.wordpress.org/wordpressdotorg/" title="http://profiles.wordpress.org/wordpressdotorg/">WordPressdotorg</a> team so it&#8217;s not clear who to contact. </p>\n<p>If you have used the WordPress export/import plugin within the past few weeks and have also run into problems, I&#8217;d love for you to chime in on the comments. I&#8217;d especially like to hear from those that export/import sites on a routine basis. </p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/c2TvkfWm2CQ" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 13 Jun 2013 23:51:15 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:42;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:49:"BuddyPress: BuddyPress 1.8-beta1 is now available";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://buddypress.org/?p=165934";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"http://buddypress.org/2013/06/buddypress-1-8-beta1-is-now-available/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:39052:"<p>Ladies and gentlemen, start your testing engines: BuddyPress 1.8-beta1 is ready for a lap around the track.</p>\n<p>If you develop BuddyPress themes or plugins, or if you run a BP-powered community site, now is the time to start testing the next major version of BuddyPress in your development environments. BP 1.8 will feature a large number of fixes and enhancements. For the full list, see <a href="http://buddypress.trac.wordpress.org/query?status=closed&group=resolution&milestone=1.8">the 1.8 milestone in Trac</a>. Here is a short list of major changes, areas where you may want to focus your testing energies:</p>\n<ul>\n<li><strong><code>BP_Group_Extension</code></strong> has been largely rewritten, with the goal of making Group Extension plugins faster and more consistent to write (<a href="http://buddypress.trac.wordpress.org/ticket/4955">#4955</a>). We&#8217;ve worked hard to make sure that existing <code>BP_Group_Extension</code> plugins will continue to work as before, but we encourage you to verify your own plugins. In the upcoming days, I&#8217;ll be writing updated Codex documentation for the Group Extension API, so you can see how the new features in BP 1.8 will make writing group extension plugins radically simpler. Watch <a href="http://bpdevel.wordpress.com">bpdevel.wordpress.com</a> for updates.</li>\n<li>The <strong>group administration panels</strong> in the Dashboard have seen some improvements &#8211; in particular, to the way that the Manage Members section works (<a href="http://buddypress.trac.wordpress.org/ticket/4482">#4482</a>, <a href="http://buddypress.trac.wordpress.org/ticket/4977">#4977</a>). Pagination support has been added to the member lists in these panels, as well as the <code>bp_group_has_members()</code> stack that underpins the panels.</li>\n<li>The <strong>bp-legacy stylesheet</strong> has undergone a process of &#8220;detheming&#8221; (<a href="http://buddypress.trac.wordpress.org/ticket/4953">#4953</a>). We&#8217;ve combed through the bp-legacy CSS &#8211; which provides BP-specific styling on themes that don&#8217;t have native support for BP &#8211; and removed some of the lingering stylistic remnants of the bp-default theme. Now, things like font faces, buttons, and form element styling will be inherited from your WordPress theme in a much more graceful way.</li>\n<li>We&#8217;ve introduced a new <strong>template hierarchy layer for top-level templates</strong> (<a href="http://buddypress.trac.wordpress.org/ticket/4639">#4639</a>). Similar to <a href="http://codex.wordpress.org/Template_Hierarchy">WordPress&#8217;s template hierarchy</a>, this new feature allows themes to provide top-level template files that are specific to a component or item. For example, if your theme contains a template at <code>groups/index-directory.php</code>, it&#8217;ll be used instead of <code>buddypress.php</code> or <code>page.php</code> when viewing the Groups directory. See <a href="http://buddypress.trac.wordpress.org/changeset/7212">r7212</a> for more details on the hierarchy, and watch the <a href="http://codex.buddypress.org">Codex</a> and <a href="http://bpdevel.wordpress.com">bpdevel</a> for documentation between now and the 1.8 release.</li>\n<li><code>bp_has_groups()</code> and <code>bp_has_activities()</code> now accept a <strong><code>meta_query</code> parameter</strong> (<a href="http://buddypress.trac.wordpress.org/ticket/3521">#3521</a>). This means you can filter a group or activity query based on groupmeta or activitymeta, using the very same <code>meta_query</code> syntax familiar from <a href="http://codex.wordpress.org/Class_Reference/WP_Query#Custom_Field_Parameters">WP_Query</a>.</li>\n<li><strong>@-mentions can now be disabled</strong> (<a href="http://buddypress.trac.wordpress.org/ticket/3388">#3388</a>), by adding <code>add_filter( ''bp_activity_do_mentions'', ''__return_false'' );</code> to your bp-custom.php file.</li>\n<li><strong>RSS feeds for activity streams</strong> have been overhauled (<a href="http://buddypress.trac.wordpress.org/ticket/5020">#5020</a>). Our RSS implementation has been brought more in line with best practices for feed construction. And feed-building logic has been abstracted from myriad standalone feed templates into a single <code>BP_Activity_Feed</code> class, which makes the creation of custom feeds a breeze.</li>\n</ul>\n<p>Remember that BuddyPress 1.8-beta1 is beta software, and we don&#8217;t recommend running it on a production site quite yet.</p>\n<p>Get 1.8-beta1 via svn, or by downloading <a href="http://downloads.wordpress.org/plugin/buddypress.1.8-beta1.zip">the zip file from wordpress.org</a>. Find a bug or have a question? Check out our <a href="http://buddypress.org/support">support community</a>, or visit <a href="http://buddypress.trac.wordpress.org">our development tracker</a>.</p>\n<p><span id="more-165934"></span></p>\n<h2>Discussion</h2>\n\n<div id="bbpress-forums">\n\n	\n	\n		\n		\n			\n\n<div class="bbp-pagination">\n	<div class="bbp-pagination-count">\n\n		Viewing 23 posts - 1 through 23 (of 23 total)\n	</div>\n\n	<div class="bbp-pagination-links">\n\n		\n	</div>\n</div>\n\n\n			\n<ul id="topic-165940-replies" class="forums bbp-replies">\n\n	<li class="bbp-body">\n\n		\n			\n<div id="post-165940" class="post-165940 topic type-topic status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-1 user-id-2881701 topic-author">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/boonebgorges/" title="View Boone Gorges''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/9cf7c4541a582729a5fc7ae484786c0c?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-2881701-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Boone Gorges" /></a><br /><a href="http://buddypress.org/community/members/boonebgorges/" title="View Boone Gorges''s profile" class="bbp-author-name" rel="nofollow">Boone Gorges</a><br /><div class="bbp-author-role">Keymaster</div>\n		<p class="bbp-user-nicename">@boonebgorges</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165940" title="#165940" class="bbp-reply-permalink">1 week, 4 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>BP 1.8-beta1 is now available. If you&#8217;re a BP developer, translator, or site admin, this is a good time to start testing the next major release in your dev environments. Read more about it here: <a href="http://buddypress.org/2013/06/buddypress-1-8-beta1-is-now-available/" rel="nofollow">http://buddypress.org/2013/06/buddypress-1-8-beta1-is-now-available/</a></p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165940 -->\n\n		\n			\n<div id="post-165942" class="post-165942 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-2 user-id-11701205">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/bphelp/" title="View bp-help''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/4beef603f70f7692207c777daecff500?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-11701205-avatar avatar-100 photo" width="100" height="100" alt="Avatar of bp-help" /></a><br /><a href="http://buddypress.org/community/members/bphelp/" title="View bp-help''s profile" class="bbp-author-name" rel="nofollow">bp-help</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@bphelp</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165942" title="#165942" class="bbp-reply-permalink">1 week, 4 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p><a href="http://buddypress.org/community/members/boonebgorges/" rel="nofollow">@boonebgorges</a><br />\nAwesome job to the entire Development team!</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165942 -->\n\n		\n			\n<div id="post-165945" class="post-165945 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-3 user-id-3251590">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/unsalkorkmaz/" title="View Unsal Korkmaz''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/bcf3949b251f8d78246d5f7049f7c241?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-3251590-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Ünsal Korkmaz" /></a><br /><a href="http://buddypress.org/community/members/unsalkorkmaz/" title="View Unsal Korkmaz''s profile" class="bbp-author-name" rel="nofollow">Unsal Korkmaz</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@unsalkorkmaz</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165945" title="#165945" class="bbp-reply-permalink">1 week, 4 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Uhm.. Getting this error:<br />\n<code>Warning: require(C:\\wamp\\www/wp-content/plugins/buddypress/bp-core/deprecated/1.2.php): failed to open stream: No such file or directory in C:\\wamp\\www\\wp-content\\plugins\\buddypress\\bp-loader.php on line 443</code></p>\n<p>Should i open a ticket?</p>\n<p>I will try to check files but is there any special changes that theme authors have to change their theme?</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165945 -->\n\n		\n			\n<div id="post-165950" class="post-165950 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-4 user-id-8106645">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/qrahaman/" title="View Quint''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/039cca948f05a874bc3453014e0b6c24?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-8106645-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Quint" /></a><br /><a href="http://buddypress.org/community/members/qrahaman/" title="View Quint''s profile" class="bbp-author-name" rel="nofollow">Quint</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@qrahaman</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165950" title="#165950" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Same activation error as Unsal&#8230; this is probably not the site to report the bug but I can&#8217;t remember where I should report it.</p>\n<p>[13-Jun-2013 16:43:50 UTC] PHP Fatal error:  require(): Failed opening required &#8216;/htdocs/wp-content/plugins/buddypress/bp-core/deprecated/1.2.php&#8217; (include_path=&#8217;/:.&#8217;) in /htdocs/wp-content/plugins/buddypress/bp-loader.php on line 443</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165950 -->\n\n		\n			\n<div id="post-165951" class="post-165951 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-5 user-id-3251590">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/unsalkorkmaz/" title="View Unsal Korkmaz''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/bcf3949b251f8d78246d5f7049f7c241?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-3251590-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Ünsal Korkmaz" /></a><br /><a href="http://buddypress.org/community/members/unsalkorkmaz/" title="View Unsal Korkmaz''s profile" class="bbp-author-name" rel="nofollow">Unsal Korkmaz</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@unsalkorkmaz</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165951" title="#165951" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Solution: just remove or comment-out that line.</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165951 -->\n\n		\n			\n<div id="post-165953" class="post-165953 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-6 user-id-187497">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/mercime/" title="View @mercime''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/fae451be6708241627983570a1a1817a?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-187497-avatar avatar-100 photo" width="100" height="100" alt="Avatar of @mercime" /></a><br /><a href="http://buddypress.org/community/members/mercime/" title="View @mercime''s profile" class="bbp-author-name" rel="nofollow">@mercime</a><br /><div class="bbp-author-role">Keymaster</div>\n		<p class="bbp-user-nicename">@mercime</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165953" title="#165953" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p><a href="http://buddypress.org/community/members/unsalkorkmaz/" rel="nofollow">@unsalkorkmaz</a> trac ticket please</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165953 -->\n\n		\n			\n<div id="post-165956" class="post-165956 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-6 user-id-2881701 topic-author">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/boonebgorges/" title="View Boone Gorges''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/9cf7c4541a582729a5fc7ae484786c0c?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-2881701-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Boone Gorges" /></a><br /><a href="http://buddypress.org/community/members/boonebgorges/" title="View Boone Gorges''s profile" class="bbp-author-name" rel="nofollow">Boone Gorges</a><br /><div class="bbp-author-role">Keymaster</div>\n		<p class="bbp-user-nicename">@boonebgorges</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165956" title="#165956" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Looks like I made an error in the way I built the zip file. Please re-download and try again. And thanks for the report.</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165956 -->\n\n		\n			\n<div id="post-165957" class="post-165957 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-8 user-id-8106645">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/qrahaman/" title="View Quint''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/039cca948f05a874bc3453014e0b6c24?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-8106645-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Quint" /></a><br /><a href="http://buddypress.org/community/members/qrahaman/" title="View Quint''s profile" class="bbp-author-name" rel="nofollow">Quint</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@qrahaman</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165957" title="#165957" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Thanks&#8230; activation successful using the latest zip.</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165957 -->\n\n		\n			\n<div id="post-165977" class="post-165977 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-9 user-id-7349734">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/ubernaut/" title="View @ubernaut''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/e715c0ee9082add252b5246f7af712ac?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-7349734-avatar avatar-100 photo" width="100" height="100" alt="Avatar of @ubernaut" /></a><br /><a href="http://buddypress.org/community/members/ubernaut/" title="View @ubernaut''s profile" class="bbp-author-name" rel="nofollow">@ubernaut</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@ubernaut</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165977" title="#165977" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>so is this site already using the beta? i&#8217;ve noticed that not only are the comments for this post showing up in the rss feed but also that the forum topic and the comments for this post seem to be one in the same thing as well. that seems new to me.</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165977 -->\n\n		\n			\n<div id="post-165978" class="post-165978 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-10 user-id-9764778">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/mgkoller/" title="View mgkoller''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/b9d2beeae0ee940de08d6512902c7ebf?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-9764778-avatar avatar-100 photo" width="100" height="100" alt="Avatar of mgkoller" /></a><br /><a href="http://buddypress.org/community/members/mgkoller/" title="View mgkoller''s profile" class="bbp-author-name" rel="nofollow">mgkoller</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@mgkoller</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165978" title="#165978" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Testing this on WordPress 3.6-beta, works / looks really nice with the twenty thirteen theme.</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165978 -->\n\n		\n			\n<div id="post-165983" class="post-165983 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-11 user-id-9664517">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/synaptic/" title="View Asynaptic''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/e0ac655eaefb453834dd1190cd1de480?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-9664517-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Asynaptic" /></a><br /><a href="http://buddypress.org/community/members/synaptic/" title="View Asynaptic''s profile" class="bbp-author-name" rel="nofollow">Asynaptic</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@synaptic</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-165983" title="#165983" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p><a href="http://buddypress.org/community/members/ubernaut/" rel="nofollow">@ubernaut</a> I think the only place the latest is tested is <a href="http://testbp.org/" rel="nofollow">http://testbp.org/</a> but someone correct me if I&#8217;m wrong!</p>\n<p>ps thank you to the dev team for the new beta! <img src="http://buddypress.org/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-165983 -->\n\n		\n			\n<div id="post-166008" class="post-166008 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-12 user-id-5462728">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/themightymo/" title="View Toby Cryns (@themightymo)''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/6bb015a651cf984d63d9f0389de8a246?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-5462728-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Toby Cryns (@themightymo)" /></a><br /><a href="http://buddypress.org/community/members/themightymo/" title="View Toby Cryns (@themightymo)''s profile" class="bbp-author-name" rel="nofollow">Toby Cryns (@themightymo)</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@themightymo</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166008" title="#166008" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Wonderful work, team!!  Thank you!</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166008 -->\n\n		\n			\n<div id="post-166022" class="post-166022 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-13 user-id-10340144">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/henrywright-1/" title="View Henry''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/6d4dcc9a075c3262d74644edc9bc1082?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-10340144-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Henry" /></a><br /><a href="http://buddypress.org/community/members/henrywright-1/" title="View Henry''s profile" class="bbp-author-name" rel="nofollow">Henry</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@henrywright-1</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166022" title="#166022" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Great work, lots of thanks to everyone involved for making such a great product! </p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166022 -->\n\n		\n			\n<div id="post-166037" class="post-166037 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-14 user-id-327624">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/lenasterg/" title="View lenasterg''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/fad6cb26417a2ff5b794ecab3c9b1036?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-327624-avatar avatar-100 photo" width="100" height="100" alt="Avatar of lenasterg" /></a><br /><a href="http://buddypress.org/community/members/lenasterg/" title="View lenasterg''s profile" class="bbp-author-name" rel="nofollow">lenasterg</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@lenasterg</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166037" title="#166037" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Hi, I tested my plugin BP Group Documents (download link <a href="http://blogs.sch.gr/stergatu/files/2013/06/buddypress-group-documents0_6.zip" rel="nofollow">http://blogs.sch.gr/stergatu/files/2013/06/buddypress-group-documents0_6.zip</a>) against BP 1.8 beta-1, wp 3.5.1.<br />\nThe plugin extends BP_Group_Extension and uses the _construct, edit_screen, display() etc functions.<br />\nI noticed the following strange behaviour.<br />\nGroup create step screen OK<br />\nAdmin group page screen OK<br />\nEdit group page screen OK<br />\nDisplay screen and nav tab of plugin NOT showing at all.<br />\nI don&#8217;t get any error log or debug messages with wp_debug.</p>\n<p>Any clues / directions?</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166037 -->\n\n		\n			\n<div id="post-166049" class="post-166049 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-15 user-id-2011996">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/sbrajesh/" title="View Brajesh Singh''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/2106622ee90d53d15ac1402806616aca?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-2011996-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Brajesh Singh" /></a><br /><a href="http://buddypress.org/community/members/sbrajesh/" title="View Brajesh Singh''s profile" class="bbp-author-name" rel="nofollow">Brajesh Singh</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@sbrajesh</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166049" title="#166049" class="bbp-reply-permalink">1 week, 3 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Awesome work guys! Loved the new enhancements in Group/Activity fetching. Opens a lot of possibilities.</p>\n<p>Thank you dev team for all the hard work <img src="http://buddypress.org/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166049 -->\n\n		\n			\n<div id="post-166271" class="post-166271 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-16 user-id-7564761">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/sooskriszta/" title="View OC2PS''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/6ae41315a1c52ed387a0d80db0491435?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-7564761-avatar avatar-100 photo" width="100" height="100" alt="Avatar of OC2PS" /></a><br /><a href="http://buddypress.org/community/members/sooskriszta/" title="View OC2PS''s profile" class="bbp-author-name" rel="nofollow">OC2PS</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@sooskriszta</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166271" title="#166271" class="bbp-reply-permalink">6 days, 7 hours ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>Awesome!</p>\n<p>So, just to be sure, there won&#8217;t be a 1.7.3? <a href="https://buddypress.trac.wordpress.org/ticket/4948" rel="nofollow">https://buddypress.trac.wordpress.org/ticket/4948</a></p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166271 -->\n\n		\n			\n<div id="post-166283" class="post-166283 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-17 user-id-7349734">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/ubernaut/" title="View @ubernaut''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/e715c0ee9082add252b5246f7af712ac?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-7349734-avatar avatar-100 photo" width="100" height="100" alt="Avatar of @ubernaut" /></a><br /><a href="http://buddypress.org/community/members/ubernaut/" title="View @ubernaut''s profile" class="bbp-author-name" rel="nofollow">@ubernaut</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@ubernaut</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166283" title="#166283" class="bbp-reply-permalink">6 days, 1 hour ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>i don&#8217;t think that necessarily follows.</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166283 -->\n\n		\n			\n<div id="post-166294" class="post-166294 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-18 user-id-187497">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/mercime/" title="View @mercime''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/fae451be6708241627983570a1a1817a?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-187497-avatar avatar-100 photo" width="100" height="100" alt="Avatar of @mercime" /></a><br /><a href="http://buddypress.org/community/members/mercime/" title="View @mercime''s profile" class="bbp-author-name" rel="nofollow">@mercime</a><br /><div class="bbp-author-role">Keymaster</div>\n		<p class="bbp-user-nicename">@mercime</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166294" title="#166294" class="bbp-reply-permalink">6 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p><a href="http://buddypress.trac.wordpress.org/roadmap" rel="nofollow">http://buddypress.trac.wordpress.org/roadmap</a></p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166294 -->\n\n		\n			\n<div id="post-166332" class="post-166332 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-19 user-id-5462165">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/hnla/" title="View Hugo''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/3860c955aa3f79f13b92826ae47d07fe?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-5462165-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Hugo" /></a><br /><a href="http://buddypress.org/community/members/hnla/" title="View Hugo''s profile" class="bbp-author-name" rel="nofollow">Hugo</a><br /><div class="bbp-author-role">Moderator</div>\n		<p class="bbp-user-nicename">@hnla</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166332" title="#166332" class="bbp-reply-permalink">5 days, 21 hours ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p><a href="http://buddypress.org/community/members/sooskriszta/" rel="nofollow">@sooskriszta</a> those are point revisions of course there could possibly be a 1.7.3, if a bug of a serious enough nature comes along and needs fixing how do you think it&#8217;s numbered, the fix would be rolled into a point revision and released then merged into trunk so that the latest revision had it ? </p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166332 -->\n\n		\n			\n<div id="post-166388" class="post-166388 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-20 user-id-12233503">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/terence1/" title="View Terence1''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/0a71771f3f303149b6e79bab18bf6839?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-12233503-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Terence1" /></a><br /><a href="http://buddypress.org/community/members/terence1/" title="View Terence1''s profile" class="bbp-author-name" rel="nofollow">Terence1</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@terence1</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166388" title="#166388" class="bbp-reply-permalink">5 days, 4 hours ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>hi guys Im prob well behind on this but my friend button is greyed out and doesnt work as well as my autocomplete mentions dont work<br />\nthanks heaps for anyones time!.<br />\nwebsite <a href="http://www.waimateweb.co.nz" rel="nofollow">http://www.waimateweb.co.nz</a></p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166388 -->\n\n		\n			\n<div id="post-166389" class="post-166389 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-21 user-id-12233503">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/terence1/" title="View Terence1''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/0a71771f3f303149b6e79bab18bf6839?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-12233503-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Terence1" /></a><br /><a href="http://buddypress.org/community/members/terence1/" title="View Terence1''s profile" class="bbp-author-name" rel="nofollow">Terence1</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@terence1</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166389" title="#166389" class="bbp-reply-permalink">5 days, 4 hours ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>also seems to not be activated ? bbPress has not been activated. Please disable bbPress Topic Thumbnails.</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166389 -->\n\n		\n			\n<div id="post-166402" class="post-166402 reply type-reply status-publish hentry even bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-22 user-id-187497">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/mercime/" title="View @mercime''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/fae451be6708241627983570a1a1817a?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-187497-avatar avatar-100 photo" width="100" height="100" alt="Avatar of @mercime" /></a><br /><a href="http://buddypress.org/community/members/mercime/" title="View @mercime''s profile" class="bbp-author-name" rel="nofollow">@mercime</a><br /><div class="bbp-author-role">Keymaster</div>\n		<p class="bbp-user-nicename">@mercime</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166402" title="#166402" class="bbp-reply-permalink">5 days ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p><a href="http://buddypress.org/community/members/terence1/" rel="nofollow">@terence1</a> please create a new topic for the issue you posted including BP/WP versions among others</p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166402 -->\n\n		\n			\n<div id="post-166454" class="post-166454 reply type-reply status-publish hentry odd bbp-parent-forum-2074 bbp-parent-topic-165940 bbp-reply-position-23 user-id-12233503">\n\n	<div class="bbp-reply-author">\n\n		\n		<a href="http://buddypress.org/community/members/terence1/" title="View Terence1''s profile" class="bbp-author-avatar" rel="nofollow"><img src="http://gravatar.com/avatar/0a71771f3f303149b6e79bab18bf6839?d=http://buddypress.org/wp-content/plugins/buddypress/bp-core/images/mystery-man.jpg&s=100&r=G" class="avatar user-12233503-avatar avatar-100 photo" width="100" height="100" alt="Avatar of Terence1" /></a><br /><a href="http://buddypress.org/community/members/terence1/" title="View Terence1''s profile" class="bbp-author-name" rel="nofollow">Terence1</a><br /><div class="bbp-author-role">Participant</div>\n		<p class="bbp-user-nicename">@terence1</p>\n		<p class="bbp-reply-post-date"><a href="http://buddypress.org/support/topic/buddypress-1-8-beta1-is-now-available/#post-166454" title="#166454" class="bbp-reply-permalink">4 days, 10 hours ago</a></p>\n\n		\n		\n	</div><!-- .bbp-reply-author -->\n\n	<div class="bbp-reply-content">\n\n		\n		<p>hi there sorry and thank you for direction <img src="http://buddypress.org/wp-includes/images/smilies/icon_smile.gif" alt=":)" class="wp-smiley" /> </p>\n\n		\n	</div><!-- .bbp-reply-content -->\n\n	\n</div><!-- #post-166454 -->\n\n		\n	</li><!-- .bbp-body -->\n\n</ul><!-- #topic-165940-replies -->\n\n\n			\n\n<div class="bbp-pagination">\n	<div class="bbp-pagination-count">\n\n		Viewing 23 posts - 1 through 23 (of 23 total)\n	</div>\n\n	<div class="bbp-pagination-links">\n\n		\n	</div>\n</div>\n\n\n		\n		\n\n\n	<div id="no-reply-165940" class="bbp-no-reply">\n		<div class="bbp-template-notice">\n			<p>You must be logged in to reply to this topic.</p>\n		</div>\n	</div>\n\n\n\n	\n	\n</div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 13 Jun 2013 16:06:11 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Boone Gorges";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:43;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:52:"WordPress.tv: Ben Doherty: OOP for Theme Development";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19729";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:69:"http://wordpress.tv/2013/06/13/ben-doherty-oop-for-theme-development/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:660:"<div id="v-NwnVQdQI-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19729/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19729/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19729&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/13/ben-doherty-oop-for-theme-development/"><img alt="Ben Doherty: OOP for Theme Development" src="http://videos.videopress.com/NwnVQdQI/video-e644971d75_scruberthumbnail_3.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 13 Jun 2013 15:50:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:44;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:48:"WordPress.tv: Chris Becker: Custom Theming Power";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19705";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:65:"http://wordpress.tv/2013/06/13/chris-becker-custom-theming-power/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:652:"<div id="v-9vgyw8Ox-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19705/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19705/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19705&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/13/chris-becker-custom-theming-power/"><img alt="Chris Becker: Custom Theming Power" src="http://videos.videopress.com/9vgyw8Ox/video-9c76bfdecd_scruberthumbnail_0.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Thu, 13 Jun 2013 14:58:56 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:45;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:39:"Alex King: Customer vs. Product Support";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://alexking.org/?p=16291";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://alexking.org/blog/2013/06/12/customer-vs-product-support";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:4478:"<p>How to best provide support for the software you create is an interesting point of deliberation. I&#8217;ve gone through various stages and iterations, all different as circumstances have evolved, but all driven by the same question:</p>\n<blockquote><p>\n  How can I create the best experience for the user in a way that is sustainable?\n</p></blockquote>\n<p>On a podcast a while back I said something to this effect:</p>\n<blockquote><p>\n  Free support is only sustainable on either end of the spectrum. Either you have so many users that you&#8217;re able to well monetize them to the point that you have a dedicated support team tasked with making sure they are well cared for; or you have so few users that the drain on your time is negligible and can easily be handled along with other day-to-day tasks. The tricky stuff lies in the middle.\n</p></blockquote>\n<p>When I first started writing hacks for b2 and plugins and themes for WordPress, my life looked a lot different than it does now. I had a day job which paid all my bills, a wife that also worked long hours, and the work I did on my own site was what generated most of the code I released to the community.</p>\n<p>The community was also much smaller and had a different profile back then. A handful of hackers that would use each other&#8217;s code, send each other suggestions, and generally collaborate as peers.</p>\n<p>Nowdays the profile of the average WordPress user is far different. WordPress has become a tool for business users that do not need to have technical experience to make WordPress work for them. This is awesome, but it fundamentally changes the nature of the support requests I see.</p>\n<p>My station in life has changed quite a bit too. I have a daughter, I run a great team of 15 people and I&#8217;m dealing with some <a href="https://alexking.org/blog/2013/05/31/cancer">medical issues</a>. I don&#8217;t have the time that I used to, and what time I do have I&#8217;d rather spend building something than responding to emails.</p>\n<p>How I<sup id="fnref:1"><a href="http://alexking.org/blog/topic/wordpress/feed#fn:1" rel="footnote">1</a></sup> handle support today is to break it down into two types of support:</p>\n<ol>\n<li>User Support</li>\n<li>Product Support</li>\n</ol>\n<p>With <strong>User Support</strong>, we provide one-on-one attention and do our best to solve whatever issues the user might be experiencing. This can even extend to troubleshooting plugin conflicts and server configuration issues. We reserve this level of support for our paid products (<a href="http://crowdfavorite.com/wordpress/ramp/">RAMP</a>, <a href="http://crowdfavorite.com/wordpress/carrington-build/">Carrington Build</a>, etc.).</p>\n<p>For our free products, we provide <strong>Product Support</strong>. This means we listen and pay attention to bug reports and try to fix anything that appears to have a reproducible use case. However we do not provide one-on-one support for users and do not dive deeply into one-off reports of edge cases.</p>\n<p>I feel that this is a reasonable compromise, and I believe that most of the users of my products agree. There will always be people who believe they can make unreasonable demands on your time, but luckily there&#8217;s a handy button on those emails (or even voicemails, yikes!) for resolving them with minimal effort.</p>\n<hr />\n<p>A few years back I had the idea that the collective support burden on WordPress plugin developers had grown to the point that we should all outsource it to a 3rd party. To support this, I created WP HelpCenter and tried to partner with plugin and theme developers through a referral program.</p>\n<p>This ended up being a flop, for a few reasons. The main on was users that actually needed support were typically unwilling to pay for it. From their perspective the plugin/theme wasn&#8217;t working and they were doing the developer a favor by reporting a bug. They certainly weren&#8217;t going to pay anything for it. What users are willing to pay for is customization, and that&#8217;s an entirely different beast.</p>\n<p>I still think something like WP HelpCenter could work, but it would be a lot of work and would need real buy-in from all parts of the community.</p>\n<div class="footnotes">\n<hr />\n<ol>\n<li id="fn:1">\n<a href="http://crowdfavorite.com">Crowd Favorite</a> uses the same approach.&#160;<a href="http://alexking.org/blog/topic/wordpress/feed#fnref:1" rev="footnote">&#8617;</a>\n</li>\n</ol>\n</div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 12 Jun 2013 19:46:13 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Alex";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:46;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:39:"WPTavern: I’ll Be On DradCast Tonight";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7306";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:88:"http://feedproxy.google.com/~r/WordpressTavern/~3/lbXLV2LPKVU/ill-be-on-dradcast-tonight";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:920:"<p><a href="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/dradcastlogo.jpg" rel="thumbnail"><img src="http://i2.wp.com/www.wptavern.com/wp-content/uploads/2013/06/dradcastlogo.jpg?resize=150%2C150" alt="Dradcast Logo" class="alignright size-thumbnail wp-image-7307" /></a> I have the pleasure of being the guest host for <a href="http://dradcast.com/" title="http://dradcast.com/">episode 16 of DradCast</a> tonight at 8PM Eastern time. I invite you to tune into the live video stream as we talk about WPTavern, the news of the week and whatever else pops up during the show. It&#8217;s an hour long so it won&#8217;t take up too much of your time. If you have any questions you&#8217;d like me to answer, post them in the comments and I&#8217;ll try to get to as many as I can near the end of the show. </p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/lbXLV2LPKVU" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 12 Jun 2013 18:21:15 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:47;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:52:"WPTavern: Global Notices Plugin For bbPress Released";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:31:"http://www.wptavern.com/?p=7302";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:104:"http://feedproxy.google.com/~r/WordpressTavern/~3/wc4m1gN1Zq8/global-notices-plugin-for-bbpress-released";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:756:"<p><a href="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/bbPressNotices.jpg" rel="thumbnail"><img src="http://i1.wp.com/www.wptavern.com/wp-content/uploads/2013/06/bbPressNotices.jpg?resize=150%2C150" alt="bbPress Notices" class="alignright size-thumbnail wp-image-7303" /></a>Pippin has released a simple <a href="http://pippinsplugins.com/bbpress-notices/" title="http://pippinsplugins.com/bbpress-notices/">bbPress notices plugin</a> that allows you to place forum notices that will be seen across the entire forum. By default, the notices appear at the top of the forum and use the default bbPress styling making integration painless. </p>\n<img src="http://feeds.feedburner.com/~r/WordpressTavern/~4/wc4m1gN1Zq8" height="1" width="1" />";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 12 Jun 2013 17:10:33 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:6:"Jeffro";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:48;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:62:"Alex King: Twitter Tools 3.0.4: Twitter v1.1 API Compatibility";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://alexking.org/?p=17215";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:64:"http://alexking.org/blog/2013/06/12/twitter-tools-3-0-4-v1-1-api";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1385:".threads-post-notice {\n	background: #e8e8e8;\n	padding: 10px;\n}\n.threads-post-notice a {\n	font-weight: bold;\n}\n\n<p>I&#8217;ve released Twitter Tools version 3.0.4 which now uses the Twitter v1.1 API. Since Twitter has turned off the 1.0 API, this is pretty much a &#8220;must upgrade&#8221; situation.</p>\n<p>If Twitter Tools has been active for you over the last few days, you&#8217;ll need to do a little cleanup:</p>\n<ol>\n<li><a href="http://d.pr/i/qoaN">enable the Tweet admin screens</a></li>\n<li><a href="http://d.pr/i/kK4K">delete anything you don&#8217;t want (all of those &#8220;(no title)&#8221; ones, probably)</a></li>\n</ol>\n<p>Grab the code from <a href="https://github.com/crowdfavorite/wp-twitter-tools">GitHub</a> where active development occurs, or from <a href="http://wordpress.org/plugins/twitter-tools/">WordPress.org</a> where it is distributed.</p>\n<p>That should do it. As always post any weirdness you see in the <a href="http://wordpress.org/support/plugin/twitter-tools">support forums</a>. While I can&#8217;t provide individual support, I do look for any issues and reports that would indicate a bug that I can fix.</p>\n<p class="threads-post-notice">This post is part of the thread: <a href="http://alexking.org/blog/thread/twitter-tools">Twitter Tools</a> &#8211; an ongoing story on this site. View the thread timeline for more context on this post.</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 12 Jun 2013 15:11:48 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:4:"Alex";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:49;a:6:{s:4:"data";s:13:"\n	\n	\n	\n	\n	\n	\n";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:50:"WordPress.tv: Brad Parbs: Responsive Design Primer";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:28:"http://wordpress.tv/?p=19701";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:69:"http://wordpress.tv/2013/06/12/brad-parbs-responsive-design-primer-2/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:652:"<div id="v-xO68kHri-1" class="video-player">\n</div>\n<br />  <a rel="nofollow" href="http://feeds.wordpress.com/1.0/gocomments/wptv.wordpress.com/19701/"><img alt="" border="0" src="http://feeds.wordpress.com/1.0/comments/wptv.wordpress.com/19701/" /></a> <img alt="" border="0" src="http://stats.wordpress.com/b.gif?host=wordpress.tv&blog=5089392&post=19701&subd=wptv&ref=&feed=1" width="1" height="1" /><div><a href="http://wordpress.tv/2013/06/12/brad-parbs-responsive-design-primer-2/"><img alt="Brad Parbs: Responsive Design Primer" src="http://videos.videopress.com/xO68kHri/video-a588e174ae_std.original.jpg" width="160" height="120" /></a></div>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 12 Jun 2013 13:53:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"WordPress.tv";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:9:{s:6:"server";s:5:"nginx";s:4:"date";s:29:"Mon, 24 Jun 2013 17:10:40 GMT";s:12:"content-type";s:8:"text/xml";s:14:"content-length";s:6:"163780";s:10:"connection";s:5:"close";s:4:"vary";s:15:"Accept-Encoding";s:13:"last-modified";s:29:"Mon, 24 Jun 2013 16:45:29 GMT";s:4:"x-nc";s:11:"HIT lax 249";s:13:"accept-ranges";s:5:"bytes";}s:5:"build";s:14:"20121202124312";}', 'no');
INSERT INTO `wp_options` (`option_id`, `option_name`, `option_value`, `autoload`) VALUES
(670, '_transient_feed_mod_a5420c83891a9c88ad2a4f04584a5efc', '1372093841', 'no'),
(671, '_transient_timeout_feed_mod_867bd5c64f85878d03a060509cd2f92c', '1372137041', 'no'),
(672, '_transient_feed_mod_867bd5c64f85878d03a060509cd2f92c', '1372093841', 'no'),
(675, '_transient_timeout_feed_57bc725ad6568758915363af670fd8bc', '1372137043', 'no'),
(676, '_transient_feed_57bc725ad6568758915363af670fd8bc', 'a:4:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:3:"\n	\n";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:72:"\n		\n		\n		\n		\n		\n		\n				\n\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n		\n\n	";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:33:"WordPress Plugins » View: Newest";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:40:"http://wordpress.org/plugins/browse/new/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:33:"WordPress Plugins » View: Newest";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:5:"en-US";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 24 Jun 2013 16:39:52 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"generator";a:1:{i:0;a:5:{s:4:"data";s:25:"http://bbpress.org/?v=1.1";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:15:{i:0;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:24:"BitMate Author Donations";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:65:"http://wordpress.org/plugins/bitmate-author-donations/#post-54698";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 19 Jun 2013 15:33:54 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54698@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:124:"A simple plugin to help website owners and authors on WordPress powered sites to receive bitcoin donations from their posts.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Daniel McClure";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:7:"SmartS3";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:48:"http://wordpress.org/plugins/smarts3/#post-54619";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 18:12:26 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54619@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:102:"SmartS3 is a simple video plugin that lets you easily embed Amazon S3 videos into your WordPress blog.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:11:"John Morris";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"GitHub Gist Files Shortcode";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"http://wordpress.org/plugins/github-gist-files-shortcode/#post-54580";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 15:22:40 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54580@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:132:"A Wordpress plugin which will insert a specific file from a Gist using the shortcode [gist id=&#34;xxxxxx&#34; file=&#34;name&#34;].";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:11:"phiredesign";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"Smart Arrow Shortcodes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:63:"http://wordpress.org/plugins/smart-arrow-shortcodes/#post-54548";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sun, 16 Jun 2013 03:45:51 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54548@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:71:"Automatically replace &#34;&#34; with nice arrow symbols in your posts.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:8:"ishan001";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:22:"Hype Theme Band Add-on";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:57:"http://wordpress.org/plugins/hype-band-add-on/#post-54622";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 21:44:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54622@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:73:"An add-on for the Hype Theme to add music, video, and tour functionality.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"coreymcollins";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:27:"Big Cartel Product Importer";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:68:"http://wordpress.org/plugins/big-cartel-product-importer/#post-54621";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Tue, 18 Jun 2013 21:43:41 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54621@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:547:"<p>After struggling to find a solution to the problem of importing BigCartel products into WordPress, I settled on &#34;make one yourself&#34;.  So, that&#039;s what I set out to do.  With this plugin, you can finally link your WordPress website and BigCartel stores by importing your products as posts in a Product custom post type.  The importer pulls in the product ID, product price, product description, product URL, product image for each product.  It will also pull in product categories and assign each product to the proper category.\n</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:13:"coreymcollins";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:24:"WP Stripe Email Receipts";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:65:"http://wordpress.org/plugins/wp-stripe-email-receipts/#post-54831";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 20:28:25 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54831@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:106:"Add-on for the WP Stripe plugin: Sends an email receipt to the user after a successful Stripe transaction.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:15:"Philip Newcomer";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"TinyMCE Code Element";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:61:"http://wordpress.org/plugins/tinymce-code-element/#post-54829";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Fri, 21 Jun 2013 18:43:39 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54829@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:42:"Add button for code element to the editor.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:17:"Takayuki Miyauchi";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:15:"FP Testimonials";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:56:"http://wordpress.org/plugins/fp-testimonials/#post-54878";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Sat, 22 Jun 2013 18:02:11 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54878@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:148:"This plugin will display testimonials in sidebar with several effects. You can manage the options from backend.Also you can use Shortcode for pages.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:14:"Flourish Pixel";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:21:"Simple Twitter Tweets";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:62:"http://wordpress.org/plugins/simple-twitter-tweets/#post-54585";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 19:05:24 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54585@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:150:"Simple Twitter Tweets - Display your Tweets on your Wordpress site using the new Twitter OAuth API v1.1. (even when you can&#039;t connect) Because it";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:18:"Planet Interactive";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:23:"Bistri Video Conference";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:64:"http://wordpress.org/plugins/bistri-video-conference/#post-54581";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 16:12:57 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54581@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:43:"Host a Video Conference right in Wordpress.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:8:"rcaddoux";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:19:"Tweets Rotator 2013";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:60:"http://wordpress.org/plugins/tweets-rotator-2013/#post-54440";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 12 Jun 2013 04:52:12 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54440@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:103:"A widget that allows you to display the tweets. Add your Twitter feed to your sidebar with this widget.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:18:"Sabir Abdul Gafoor";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:24:"YITH WooCommerce Compare";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:65:"http://wordpress.org/plugins/yith-woocommerce-compare/#post-54700";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 19 Jun 2013 16:28:51 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54700@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:96:"YITH WooCommerce Compare allows you to compare more products of your shop in one complete table.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:8:"yithemes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:32:"YITH WooCommerce Ajax Navigation";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:73:"http://wordpress.org/plugins/yith-woocommerce-ajax-navigation/#post-54576";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Mon, 17 Jun 2013 13:39:20 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54576@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:111:"YITH WooCommerce Ajax Navigation allows you to filter the products in the Shop page without reloading the page.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:8:"yithemes";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:30:"\n			\n			\n			\n			\n			\n			\n					";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:5:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:15:"Gumroad Overlay";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:48:"http://wordpress.org/plugins/gumroad/#post-54679";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:31:"Wed, 19 Jun 2013 06:13:21 +0000";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:35:"54679@http://wordpress.org/plugins/";s:7:"attribs";a:1:{s:0:"";a:1:{s:11:"isPermaLink";s:5:"false";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:65:"Display your Gumroad purchase pages in a pretty lightbox overlay.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:7:"creator";a:1:{i:0;a:5:{s:4:"data";s:12:"Phil Derksen";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:27:"http://www.w3.org/2005/Atom";a:1:{s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:4:"href";s:41:"http://wordpress.org/plugins/rss/view/new";s:3:"rel";s:4:"self";s:4:"type";s:19:"application/rss+xml";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}s:4:"type";i:128;s:7:"headers";a:10:{s:6:"server";s:5:"nginx";s:4:"date";s:29:"Mon, 24 Jun 2013 17:10:43 GMT";s:12:"content-type";s:23:"text/xml; charset=UTF-8";s:10:"connection";s:5:"close";s:4:"vary";s:15:"Accept-Encoding";s:7:"expires";s:29:"Mon, 24 Jun 2013 17:14:52 GMT";s:13:"cache-control";s:0:"";s:6:"pragma";s:0:"";s:13:"last-modified";s:31:"Mon, 24 Jun 2013 16:39:52 +0000";s:4:"x-nc";s:11:"HIT lax 249";}s:5:"build";s:14:"20121202124312";}', 'no'),
(677, '_transient_timeout_feed_mod_57bc725ad6568758915363af670fd8bc', '1372137043', 'no'),
(678, '_transient_feed_mod_57bc725ad6568758915363af670fd8bc', '1372093843', 'no'),
(688, '_site_transient_timeout_theme_roots', '1372615693', 'yes'),
(689, '_site_transient_theme_roots', 'a:5:{s:15:"CherryFramework";s:7:"/themes";s:9:"theme1934";s:7:"/themes";s:12:"twentyeleven";s:7:"/themes";s:9:"twentyten";s:7:"/themes";s:12:"twentytwelve";s:7:"/themes";}', 'yes'),
(690, '_site_transient_timeout_browser_f9bc7f4664b99a3b56e3c3ecef88108c', '1373218716', 'yes'),
(691, '_site_transient_browser_f9bc7f4664b99a3b56e3c3ecef88108c', 'a:9:{s:8:"platform";s:5:"Linux";s:4:"name";s:7:"Firefox";s:7:"version";s:4:"22.0";s:10:"update_url";s:23:"http://www.firefox.com/";s:7:"img_src";s:50:"http://s.wordpress.org/images/browsers/firefox.png";s:11:"img_src_ssl";s:49:"https://wordpress.org/images/browsers/firefox.png";s:15:"current_version";s:2:"16";s:7:"upgrade";b:0;s:8:"insecure";b:0;}', 'yes'),
(692, 'category_children', 'a:1:{i:2;a:1:{i:0;i:3;}}', 'yes');

-- --------------------------------------------------------

--
-- Table structure for table `wp_postmeta`
--

CREATE TABLE IF NOT EXISTS `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=157 ;

--
-- Dumping data for table `wp_postmeta`
--

INSERT INTO `wp_postmeta` (`meta_id`, `post_id`, `meta_key`, `meta_value`) VALUES
(1, 2, '_wp_page_template', 'default'),
(8, 1, '_edit_lock', '1371371176:1'),
(9, 1, '_edit_last', '1'),
(10, 1, 'tz_audio_format', 'mp3'),
(11, 1, 'tz_image_lightbox', 'yes'),
(13, 12, '_form', '<p>Ваше имя (обязательно)<br />\n    [text* your-name] </p>\n\n<p>Ваш E-Mail (обязательно)<br />\n    [email* your-email] </p>\n\n<p>Тема<br />\n    [text your-subject] </p>\n\n<p>Сообщение<br />\n    [textarea your-message] </p>\n\n<p>[submit "Отправить"]</p>'),
(14, 12, '_mail', 'a:7:{s:7:"subject";s:14:"[your-subject]";s:6:"sender";s:26:"[your-name] <[your-email]>";s:4:"body";s:259:"От: [your-name] <[your-email]>\nТема: [your-subject]\n\nТело сообщения:\n[your-message]\n\n--\nЭто сообщение отправлено посредством контактной формы на Персональный блог http://blog";s:9:"recipient";s:19:"imychkova@gmail.com";s:18:"additional_headers";s:0:"";s:11:"attachments";s:0:"";s:8:"use_html";i:0;}'),
(15, 12, '_mail_2', 'a:8:{s:6:"active";b:0;s:7:"subject";s:14:"[your-subject]";s:6:"sender";s:26:"[your-name] <[your-email]>";s:4:"body";s:200:"Тело сообщения:\n[your-message]\n\n--\nЭто сообщение отправлено посредством контактной формы на Персональный блог http://blog";s:9:"recipient";s:12:"[your-email]";s:18:"additional_headers";s:0:"";s:11:"attachments";s:0:"";s:8:"use_html";i:0;}'),
(16, 12, '_messages', 'a:6:{s:12:"mail_sent_ok";s:89:"Ваше сообщение было отправлено успешно. Спасибо.";s:12:"mail_sent_ng";s:162:"Ошибка при отправке сообщения. Попытайтесь позже или обратитесь к администратору сайта.";s:16:"validation_error";s:103:"Ошибка заполнения. Заполните все поля и отправьте снова.";s:12:"accept_terms";s:82:"Пожалуйста, примите условия для продолжения.";s:13:"invalid_email";s:43:"Некорректный e-mail адрес.";s:16:"invalid_required";s:75:"Пожалуйста, заполните обязательные поля.";}'),
(17, 12, '_additional_settings', ''),
(20, 1, '_wp_old_slug', 'hello-world'),
(21, 2, '_edit_lock', '1371376908:1'),
(39, 37, '_wp_attached_file', '2013/05/mouse-sm2.png'),
(40, 37, '_wp_attachment_metadata', 'a:5:{s:5:"width";i:60;s:6:"height";i:76;s:4:"file";s:21:"2013/05/mouse-sm2.png";s:5:"sizes";a:1:{s:12:"slider-thumb";a:4:{s:4:"file";s:19:"mouse-sm2-60x41.png";s:5:"width";i:60;s:6:"height";i:41;s:9:"mime-type";s:9:"image/png";}}s:10:"image_meta";a:10:{s:8:"aperture";i:0;s:6:"credit";s:0:"";s:6:"camera";s:0:"";s:7:"caption";s:0:"";s:17:"created_timestamp";i:0;s:9:"copyright";s:0:"";s:12:"focal_length";i:0;s:3:"iso";i:0;s:13:"shutter_speed";i:0;s:5:"title";s:0:"";}}'),
(50, 47, '_edit_last', '1'),
(51, 47, '_edit_lock', '1372097804:1'),
(52, 47, 'tz_audio_format', 'mp3'),
(53, 47, 'tz_image_lightbox', 'yes'),
(55, 47, '_wp_old_slug', 'knowledge-lis'),
(56, 55, '_edit_last', '1'),
(57, 55, '_edit_lock', '1371375155:1'),
(58, 55, 'tz_audio_format', 'mp3'),
(59, 55, 'tz_image_lightbox', 'yes'),
(60, 62, '_edit_last', '1'),
(61, 62, '_edit_lock', '1371379959:1'),
(62, 62, 'tz_audio_format', 'mp3'),
(63, 62, 'tz_image_lightbox', 'yes'),
(74, 62, '_syntaxhighlighter_encoded', '1'),
(85, 55, '_syntaxhighlighter_encoded', '1'),
(91, 1, '_syntaxhighlighter_encoded', '1'),
(105, 108, '_edit_last', '1'),
(106, 108, '_edit_lock', '1371377375:1'),
(107, 108, '_wp_page_template', 'default'),
(108, 111, '_menu_item_type', 'post_type'),
(109, 111, '_menu_item_menu_item_parent', '0'),
(110, 111, '_menu_item_object_id', '108'),
(111, 111, '_menu_item_object', 'page'),
(112, 111, '_menu_item_target', ''),
(113, 111, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(114, 111, '_menu_item_xfn', ''),
(115, 111, '_menu_item_url', ''),
(117, 112, '_menu_item_type', 'taxonomy'),
(118, 112, '_menu_item_menu_item_parent', '0'),
(119, 112, '_menu_item_object_id', '3'),
(120, 112, '_menu_item_object', 'category'),
(121, 112, '_menu_item_target', ''),
(122, 112, '_menu_item_classes', 'a:1:{i:0;s:0:"";}'),
(123, 112, '_menu_item_xfn', ''),
(124, 112, '_menu_item_url', ''),
(125, 115, '_edit_last', '1'),
(126, 115, '_edit_lock', '1371531963:1'),
(127, 115, '_syntaxhighlighter_encoded', '1'),
(128, 115, 'tz_audio_format', 'mp3'),
(129, 115, 'tz_image_lightbox', 'yes'),
(130, 123, '_edit_last', '1'),
(131, 123, '_edit_lock', '1371671733:1'),
(132, 123, 'tz_audio_format', 'mp3'),
(133, 123, 'tz_image_lightbox', 'yes'),
(136, 123, '_syntaxhighlighter_encoded', '1'),
(137, 133, '_edit_last', '1'),
(138, 133, '_edit_lock', '1372094989:1'),
(139, 133, 'tz_audio_format', 'mp3'),
(140, 133, 'tz_image_lightbox', 'yes'),
(141, 135, '_edit_last', '1'),
(142, 135, '_edit_lock', '1372094030:1'),
(143, 136, '_edit_last', '1'),
(144, 136, '_edit_lock', '1372096216:1'),
(146, 133, '_syntaxhighlighter_encoded', '1'),
(147, 135, '_wp_trash_meta_status', 'draft'),
(148, 135, '_wp_trash_meta_time', '1372095110'),
(149, 136, 'tz_audio_format', 'mp3'),
(150, 136, 'tz_image_lightbox', 'yes'),
(154, 47, '_syntaxhighlighter_encoded', '1'),
(155, 145, '_edit_last', '1'),
(156, 145, '_edit_lock', '1372614054:1');

-- --------------------------------------------------------

--
-- Table structure for table `wp_posts`
--

CREATE TABLE IF NOT EXISTS `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext NOT NULL,
  `post_title` text NOT NULL,
  `post_excerpt` text NOT NULL,
  `post_status` varchar(20) NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) NOT NULL DEFAULT 'open',
  `post_password` varchar(20) NOT NULL DEFAULT '',
  `post_name` varchar(200) NOT NULL DEFAULT '',
  `to_ping` text NOT NULL,
  `pinged` text NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `post_name` (`post_name`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=146 ;

--
-- Dumping data for table `wp_posts`
--

INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(1, 1, '2013-05-31 18:08:55', '2013-05-31 18:08:55', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[php]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&gt;router-&gt;generate(''homepage'');\r\n        $event-&gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n[/php]\r\n\r\n[sourcecode language="plain"]\r\n// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: \r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n\r\n[/sourcecode]\r\nили если вы предпочитаете XML-определения\r\n\r\n[sourcecode language="html"]\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id=&quot;acme_user.password_resetting&quot;&gt;\r\n    &lt;tag name=&quot;kernel.event_subscriber&quot;/&gt; \r\n    &lt;argument type=&quot;service&quot; id=&quot;router&quot;/&gt; \r\n&lt;/service&gt;\r\n[/sourcecode]\r\n', 'Подключение в контроллерах', '', 'publish', 'open', 'open', '', 'hooking-into-the-controllers', '', '', '2013-06-16 08:28:05', '2013-06-16 08:28:05', '', 0, 'http://blog/?p=1', 0, 'post', '', 1),
(2, 1, '2013-05-31 18:08:55', '2013-05-31 18:08:55', 'Эта страница-пример. Она отличается от поста тем, что всегда будет в одном и том же месте и во многих темах будет показываться в меню. Многие начинают со страницы &quot;О сайте&quot;, рассказывающей о ресурсе потенциальным посетителям. Она может содержать какой-нибудь такой текст:\n\n<blockquote>Привет! Я байкер днем, актер по ночам, и это мой блог. Я живу в Лос Анжелесе, держу собаку по имени Джек и люблю приложиться к бутылке. (Ах, да, еще люблю промокать под дождем.)</blockquote>\n\n...или, например:\n\n<blockquote>Компания XYZ была основана в 1971 году и с тех пор радует всех отменным качеством продукции. Расположена она в Готэм Сити. На наших фабриках работает более 2 тысяч человек, и мы делаем массу полезных вещей для сообщества Готэм Сити.</blockquote>\n\nКак новый пользователь WordPress, Вы, возможно, хотите зайти на <a href="http://blog/wp-admin/">панель администратора</a> и удалить эту запись, создав что-то более дельное. Удачи!', 'Пример страницы', '', 'publish', 'open', 'open', '', 'sample-page', '', '', '2013-05-31 18:08:55', '2013-05-31 18:08:55', '', 0, 'http://blog/?page_id=2', 0, 'page', '', 0),
(7, 1, '2013-06-16 08:27:01', '2013-06-16 08:27:01', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\n[php]\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\n\nnamespace Acme\\UserBundle\\EventListener;\n\nuse FOS\\UserBundle\\FOSUserEvents;\nuse FOS\\UserBundle\\Event\\FormEvent;\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\n\n/**\n * Listener responsible to change the redirection at the end of the password resetting\n*/\nclass PasswordResettingListener implements EventSubscriberInterface\n{\n    private $router;\n\n    public function __construct(UrlGeneratorInterface $router)\n    {\n        $this-&gt;router = $router;\n    }\n\n    /**\n     * {@inheritDoc}\n    */\n    public static function getSubscribedEvents()\n    {\n        return array(\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\n        );\n    }\n\n    public function onPasswordResettingSuccess(FormEvent $event)\n    {\n        $url = $this-&gt;router-&gt;generate(''homepage'');\n        $event-&gt;setResponse(new RedirectResponse($url));\n    }\n}\n[/php]\n\n[sourcecode language="plain"]\n// src/Acme/UserBundle/Resources/config/services.yml \nservices: acme_user.password_resetting: &lt;/code&gt;\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\n    arguments: [@router] \n    tags: - { \n         name: kernel.event_subscriber \n    }\n\n[/sourcecode]\nили если вы предпочитаете XML-определения\n\n[sourcecode language="html"]\n// src/Acme/UserBundle/Resources/config/services.xml \n&lt;service id=&quot;acme_user.password_resetting&quot;&gt;\n    t;tag name=&quot;kernel.event_subscriber&quot;/&gt; \n    &lt;argument type=&quot;service&quot; id=&quot;router&quot;/&gt; \n&lt;/service&gt;\n[/sourcecode]\n', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-autosave', '', '', '2013-06-16 08:27:01', '2013-06-16 08:27:01', '', 1, 'http://blog/?p=7', 0, 'revision', '', 0),
(8, 1, '2013-05-31 18:39:59', '0000-00-00 00:00:00', '', 'Body Background', '', 'draft', 'closed', 'closed', '', 'of-body_background', '', '', '2013-05-31 18:39:59', '0000-00-00 00:00:00', '', 0, 'http://blog/?post_type=optionsframework&p=8', 0, 'optionsframework', '', 0),
(9, 1, '2013-05-31 18:39:59', '0000-00-00 00:00:00', '', 'Logo Url', '', 'draft', 'closed', 'closed', '', 'of-logo_url', '', '', '2013-05-31 18:39:59', '0000-00-00 00:00:00', '', 0, 'http://blog/?post_type=optionsframework&p=9', 0, 'optionsframework', '', 0),
(10, 1, '2013-05-31 18:39:59', '0000-00-00 00:00:00', '', 'Favicon', '', 'draft', 'closed', 'closed', '', 'of-favicon', '', '', '2013-05-31 18:39:59', '0000-00-00 00:00:00', '', 0, 'http://blog/?post_type=optionsframework&p=10', 0, 'optionsframework', '', 0),
(11, 1, '2013-05-31 18:08:55', '2013-05-31 18:08:55', '<p>Поздравляем, Вы установили русифицированную сборку <a href="http://mywordpress.ru/">WordPress</a>. Это первая запись в Вашем блоге, Вы можете ее отредактировать или удалить.</p><p>Прямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.</p>', 'Привет, мир!', '', 'inherit', 'open', 'open', '', '1-revision', '', '', '2013-05-31 18:08:55', '2013-05-31 18:08:55', '', 1, 'http://blog/archives/11', 0, 'revision', '', 0),
(12, 1, '2013-05-31 18:47:00', '2013-05-31 18:47:00', '<p>Ваше имя (обязательно)<br />\n    [text* your-name] </p>\n\n<p>Ваш E-Mail (обязательно)<br />\n    [email* your-email] </p>\n\n<p>Тема<br />\n    [text your-subject] </p>\n\n<p>Сообщение<br />\n    [textarea your-message] </p>\n\n<p>[submit "Отправить"]</p>\n[your-subject]\n[your-name] <[your-email]>\nОт: [your-name] <[your-email]>\nТема: [your-subject]\n\nТело сообщения:\n[your-message]\n\n--\nЭто сообщение отправлено посредством контактной формы на Персональный блог http://blog\nimychkova@gmail.com\n\n\n0\n\n[your-subject]\n[your-name] <[your-email]>\nТело сообщения:\n[your-message]\n\n--\nЭто сообщение отправлено посредством контактной формы на Персональный блог http://blog\n[your-email]\n\n\n0\nВаше сообщение было отправлено успешно. Спасибо.\nОшибка при отправке сообщения. Попытайтесь позже или обратитесь к администратору сайта.\nОшибка заполнения. Заполните все поля и отправьте снова.\nПожалуйста, примите условия для продолжения.\nНекорректный e-mail адрес.\nПожалуйста, заполните обязательные поля.', 'Форма для контакта 1', '', 'publish', 'open', 'open', '', '%d1%84%d0%be%d1%80%d0%bc%d0%b0-%d0%b4%d0%bb%d1%8f-%d0%ba%d0%be%d0%bd%d1%82%d0%b0%d0%ba%d1%82%d0%b0-1', '', '', '2013-05-31 18:47:00', '2013-05-31 18:47:00', '', 0, 'http://blog/?post_type=wpcf7_contact_form&p=12', 0, 'wpcf7_contact_form', '', 0),
(13, 1, '2013-05-31 18:43:02', '2013-05-31 18:43:02', 'Поздравляем, Вы установили русифицированную сборку <a href="http://mywordpress.ru/">WordPress</a>. Это первая запись в Вашем блоге, Вы можете ее отредактировать или удалить.\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Привет, мир!', '', 'inherit', 'open', 'open', '', '1-revision-2', '', '', '2013-05-31 18:43:02', '2013-05-31 18:43:02', '', 1, 'http://blog/2013/05/31/1-revision-2/', 0, 'revision', '', 0),
(14, 1, '2013-05-31 18:54:38', '2013-05-31 18:54:38', 'Поздравляем, Вы установили русифицированную сборку <a href="http://mywordpress.ru/">WordPress</a>. Это первая запись в Вашем блоге, Вы можете ее отредактировать или удалить.\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-3', '', '', '2013-05-31 18:54:38', '2013-05-31 18:54:38', '', 1, 'http://blog/2013/05/31/1-revision-3/', 0, 'revision', '', 0),
(15, 1, '2013-05-31 18:57:37', '2013-05-31 18:57:37', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-4', '', '', '2013-05-31 18:57:37', '2013-05-31 18:57:37', '', 1, 'http://blog/2013/05/31/1-revision-4/', 0, 'revision', '', 0),
(16, 1, '2013-05-31 19:00:11', '2013-05-31 19:00:11', '<p>Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.</p>\r\n&nbsp;\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-5', '', '', '2013-05-31 19:00:11', '2013-05-31 19:00:11', '', 1, 'http://blog/2013/05/31/1-revision-5/', 0, 'revision', '', 0),
(17, 1, '2013-05-31 19:03:17', '2013-05-31 19:03:17', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-6', '', '', '2013-05-31 19:03:17', '2013-05-31 19:03:17', '', 1, 'http://blog/2013/05/31/1-revision-6/', 0, 'revision', '', 0),
(18, 1, '2013-05-31 19:03:57', '2013-05-31 19:03:57', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\n<code>парварвпрпвпа</code>\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-7', '', '', '2013-05-31 19:03:57', '2013-05-31 19:03:57', '', 1, 'http://blog/2013/05/31/1-revision-7/', 0, 'revision', '', 0),
(19, 1, '2013-05-31 19:09:29', '2013-05-31 19:09:29', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все успешные события позволяют установить ответ, если вы не хотите по умолчанию перенаправление. и все завершенные события вы получите доступ к ответа, прежде чем он будет возвращен.\r\n<code>парварвпрпвпа</code>\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-8', '', '', '2013-05-31 19:09:29', '2013-05-31 19:09:29', '', 1, 'http://blog/2013/05/31/1-revision-8/', 0, 'revision', '', 0),
(20, 1, '2013-05-31 19:15:38', '2013-05-31 19:15:38', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n<code>\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n */\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this->router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS => ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this->router->generate(''homepage'');\r\n\r\n        $event->setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n</code>\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-9', '', '', '2013-05-31 19:15:38', '2013-05-31 19:15:38', '', 1, 'http://blog/2013/05/31/1-revision-9/', 0, 'revision', '', 0),
(21, 1, '2013-05-31 19:17:06', '2013-05-31 19:17:06', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n<code>[blockquote]</code>\r\n\r\n<code>\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php</code>\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n\r\n<code>[/blockquote]</code>\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-10', '', '', '2013-05-31 19:17:06', '2013-05-31 19:17:06', '', 1, 'http://blog/2013/05/31/1-revision-10/', 0, 'revision', '', 0),
(22, 1, '2013-05-31 19:17:51', '2013-05-31 19:17:51', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-11', '', '', '2013-05-31 19:17:51', '2013-05-31 19:17:51', '', 1, 'http://blog/2013/05/31/1-revision-11/', 0, 'revision', '', 0),
(23, 1, '2013-05-31 19:18:47', '2013-05-31 19:18:47', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n&nbsp;\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-12', '', '', '2013-05-31 19:18:47', '2013-05-31 19:18:47', '', 1, 'http://blog/2013/05/31/1-revision-12/', 0, 'revision', '', 0),
(24, 1, '2013-05-31 19:19:20', '2013-05-31 19:19:20', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml services: acme_user.password_resetting: class: Acme\\UserBundle\\EventListener\\PasswordResettingListener arguments: [@router] tags: - { name: kernel.event_subscriber }</code>[/frame]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-13', '', '', '2013-05-31 19:19:20', '2013-05-31 19:19:20', '', 1, 'http://blog/2013/05/31/1-revision-13/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(25, 1, '2013-05-31 19:20:41', '2013-05-31 19:20:41', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml services: acme_user.password_resetting: class: Acme\\UserBundle\\EventListener\\PasswordResettingListener arguments: [@router] tags: - { name: kernel.event_subscriber }</code>[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n[frame_left]<code>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</code>[/frame_left]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-14', '', '', '2013-05-31 19:20:41', '2013-05-31 19:20:41', '', 1, 'http://blog/2013/05/31/1-revision-14/', 0, 'revision', '', 0),
(26, 1, '2013-05-31 19:22:49', '2013-05-31 19:22:49', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame_left]// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n[/frame_left]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n[frame_left]<code>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</code>[/frame_left]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-15', '', '', '2013-05-31 19:22:49', '2013-05-31 19:22:49', '', 1, 'http://blog/2013/05/31/1-revision-15/', 0, 'revision', '', 0),
(27, 1, '2013-05-31 19:23:25', '2013-05-31 19:23:25', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame_left]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame_left]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n[frame_left]<code>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</code>[/frame_left]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-16', '', '', '2013-05-31 19:23:25', '2013-05-31 19:23:25', '', 1, 'http://blog/2013/05/31/1-revision-16/', 0, 'revision', '', 0),
(28, 1, '2013-06-01 10:33:45', '2013-06-01 10:33:45', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame_left]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame_left]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</code>[/frame]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-17', '', '', '2013-06-01 10:33:45', '2013-06-01 10:33:45', '', 1, 'http://blog/2013/06/01/1-revision-17/', 0, 'revision', '', 0),
(29, 1, '2013-06-01 10:34:35', '2013-06-01 10:34:35', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</code>[/frame]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-18', '', '', '2013-06-01 10:34:35', '2013-06-01 10:34:35', '', 1, 'http://blog/2013/06/01/1-revision-18/', 0, 'revision', '', 0),
(30, 1, '2013-06-01 10:35:16', '2013-06-01 10:35:16', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</code>[/frame]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-19', '', '', '2013-06-01 10:35:16', '2013-06-01 10:35:16', '', 1, 'http://blog/2013/06/01/1-revision-19/', 0, 'revision', '', 0),
(37, 1, '2013-06-01 11:04:28', '2013-06-01 11:04:28', '', 'mouse-sm2', '', 'inherit', 'open', 'open', '', 'mouse-sm2', '', '', '2013-06-01 11:04:28', '2013-06-01 11:04:28', '', 9, 'http://blog/wp-content/uploads/2013/05/mouse-sm2.png', 0, 'attachment', 'image/png', 0),
(38, 1, '2013-06-01 10:36:56', '2013-06-01 10:36:56', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</code>[/frame]\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-20', '', '', '2013-06-01 10:36:56', '2013-06-01 10:36:56', '', 1, 'http://blog/2013/06/01/1-revision-20/', 0, 'revision', '', 0),
(39, 1, '2013-06-02 07:56:09', '2013-06-02 07:56:09', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</pre>\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-21', '', '', '2013-06-02 07:56:09', '2013-06-02 07:56:09', '', 1, 'http://blog/2013/06/02/1-revision-21/', 0, 'revision', '', 0),
(40, 1, '2013-06-02 07:56:39', '2013-06-02 07:56:39', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>// src/Acme/UserBundle/Resources/config/services.xml &lt;service id="acme_user.password_resetting"&gt; &lt;tag name="kernel.event_subscriber"/&gt; &lt;argument type="service" id="router"/&gt; &lt;/service&gt;</pre>\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-22', '', '', '2013-06-02 07:56:39', '2013-06-02 07:56:39', '', 1, 'http://blog/2013/06/02/1-revision-22/', 0, 'revision', '', 0),
(41, 1, '2013-06-02 07:57:51', '2013-06-02 07:57:51', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n&lt;tag name="kernel.event_subscriber"/&gt; \r\n&lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-23', '', '', '2013-06-02 07:57:51', '2013-06-02 07:57:51', '', 1, 'http://blog/2013/06/02/1-revision-23/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(42, 1, '2013-06-02 07:59:31', '2013-06-02 07:59:31', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[blockquote]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n* Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\nprivate $router;\r\n\r\npublic function __construct(UrlGeneratorInterface $router)\r\n{\r\n$this-&gt;router = $router;\r\n}\r\n\r\n/**\r\n* {@inheritDoc}\r\n*/\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;tag name="kernel.event_subscriber"/&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-24', '', '', '2013-06-02 07:59:31', '2013-06-02 07:59:31', '', 1, 'http://blog/2013/06/02/1-revision-24/', 0, 'revision', '', 0),
(43, 1, '2013-06-02 08:00:47', '2013-06-02 08:00:47', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n<pre>\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\npublic static function getSubscribedEvents()\r\n{\r\nreturn array(\r\nFOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n);\r\n}\r\n\r\npublic function onPasswordResettingSuccess(FormEvent $event)\r\n{\r\n$url = $this-&gt;router-&gt;generate(''homepage'');\r\n\r\n$event-&gt;setResponse(new RedirectResponse($url));\r\n}\r\n}\r\n[/blockquote]\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;tag name="kernel.event_subscriber"/&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-25', '', '', '2013-06-02 08:00:47', '2013-06-02 08:00:47', '', 1, 'http://blog/2013/06/02/1-revision-25/', 0, 'revision', '', 0),
(44, 1, '2013-06-02 08:02:10', '2013-06-02 08:02:10', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n<pre>\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&gt;router-&gt;generate(''homepage'');\r\n        $event-&gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n</pre>\r\n\r\n[frame]<code>// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }</code>\r\n[/frame]\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;tag name="kernel.event_subscriber"/&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-26', '', '', '2013-06-02 08:02:10', '2013-06-02 08:02:10', '', 1, 'http://blog/2013/06/02/1-revision-26/', 0, 'revision', '', 0),
(45, 1, '2013-06-02 08:02:45', '2013-06-02 08:02:45', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n<pre>\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&gt;router-&gt;generate(''homepage'');\r\n        $event-&gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n</pre>\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n</pre>\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;tag name="kernel.event_subscriber"/&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n\r\nПрямо сейчас Вы можете ознакомиться с <a href="http://mywordpress.ru/support/viewtopic.php?id=7071" target="_blank">рекомендациями после установки WordPress</a>. Созданием этой сборки занимается команда <a href="http://mywordpress.ru" target="_blank">MyWordPress</a>. Если у Вас возникнут вопросы, будем рады ответить на них на нашем <a href="http://mywordpress.ru/support" target="_blank">форуме</a>.', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-27', '', '', '2013-06-02 08:02:45', '2013-06-02 08:02:45', '', 1, 'http://blog/2013/06/02/1-revision-27/', 0, 'revision', '', 0),
(46, 1, '2013-06-02 08:03:28', '2013-06-02 08:03:28', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n<pre>\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&gt;router-&gt;generate(''homepage'');\r\n        $event-&gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n</pre>\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n</pre>\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;tag name="kernel.event_subscriber"/&gt; \r\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-28', '', '', '2013-06-02 08:03:28', '2013-06-02 08:03:28', '', 1, 'http://blog/2013/06/02/1-revision-28/', 0, 'revision', '', 0),
(47, 1, '2013-06-02 13:25:53', '2013-06-02 13:25:53', 'Генерировать css+js\r\n<code>php app/console assets:install</code>\r\n\r\nГенерировать getters and setters\r\n<code>php app/console doctrine:generate:entities Acme/StoreBundle/Entity/Product</code>\r\n\r\nПример создания класса сущности\r\n<code>php app/console doctrine:generate:entity --entity="AcmeStoreBundle:Product" --fields="name:string(255) price:float description:text"</code>\r\n\r\nСоздание таблиц/схемы для базы данных\r\n<code>php app/console doctrine:schema:update --force</code>\r\n\r\nОчистка кеша:\r\n[sourcecode]\r\napp/console cache:clear\r\n[/sourcecode]\r\n\r\n<a title="Источник" href="http://symfony-gu.ru/documentation/ru/html/book/doctrine.html" target="_blank">http://symfony-gu.ru/documentation/ru/html/book/doctrine.html</a>', 'Памятка полезностей', '', 'publish', 'open', 'open', '', 'knowledge-list', '', '', '2013-06-24 18:18:33', '2013-06-24 18:18:33', '', 0, 'http://blog/?p=47', 0, 'post', '', 0),
(48, 1, '2013-06-02 13:25:48', '2013-06-02 13:25:48', 'Генерировать css+js\n<code>php app/console assets:install</code>', 'Памятка полезностей', '', 'inherit', 'open', 'open', '', '47-revision', '', '', '2013-06-02 13:25:48', '2013-06-02 13:25:48', '', 47, 'http://blog/47-revision/', 0, 'revision', '', 0),
(49, 1, '2013-06-24 18:18:26', '2013-06-24 18:18:26', 'Генерировать css+js\n<code>php app/console assets:install</code>\n\nГенерировать getters and setters\n<code>php app/console doctrine:generate:entities Acme/StoreBundle/Entity/Product</code>\n\nПример создания класса сущности\n<code>php app/console doctrine:generate:entity --entity="AcmeStoreBundle:Product" --fields="name:string(255) price:float description:text"</code>\n\nСоздание таблиц/схемы для базы данных\n<code>php app/console doctrine:schema:update --force</code>\n\nОчистка кеша:\n[sourcecode]\n\n[/sourcecode]\n\n<a title="Источник" href="http://symfony-gu.ru/documentation/ru/html/book/doctrine.html" target="_blank">http://symfony-gu.ru/documentation/ru/html/book/doctrine.html</a>', 'Памятка полезностей', '', 'inherit', 'open', 'open', '', '47-autosave', '', '', '2013-06-24 18:18:26', '2013-06-24 18:18:26', '', 47, 'http://blog/47-autosave/', 0, 'revision', '', 0),
(50, 1, '2013-06-02 13:25:53', '2013-06-02 13:25:53', 'Генерировать css+js\r\n<code>php app/console assets:install</code>', 'Памятка полезностей', '', 'inherit', 'open', 'open', '', '47-revision-2', '', '', '2013-06-02 13:25:53', '2013-06-02 13:25:53', '', 47, 'http://blog/47-revision-2/', 0, 'revision', '', 0),
(51, 1, '2013-06-04 03:51:29', '2013-06-04 03:51:29', 'Генерировать css+js\r\n<code>php app/console assets:install</code>\r\n\r\nГенерировать getters and setters\r\n<code>php app/console doctrine:generate:entities Acme/StoreBundle/Entity/Product</code>\r\n\r\nПример создания класса сущности\r\n<code>php app/console doctrine:generate:entity --entity="AcmeStoreBundle:Product" --fields="name:string(255) price:float description:text"</code>', 'Памятка полезностей', '', 'inherit', 'open', 'open', '', '47-revision-3', '', '', '2013-06-04 03:51:29', '2013-06-04 03:51:29', '', 47, 'http://blog/47-revision-3/', 0, 'revision', '', 0),
(52, 1, '2013-06-04 03:54:22', '2013-06-04 03:54:22', 'Генерировать css+js\r\n<code>php app/console assets:install</code>\r\n\r\nГенерировать getters and setters\r\n<code>php app/console doctrine:generate:entities Acme/StoreBundle/Entity/Product</code>\r\n\r\nПример создания класса сущности\r\n<code>php app/console doctrine:generate:entity --entity="AcmeStoreBundle:Product" --fields="name:string(255) price:float description:text"</code>\r\n\r\nСоздание таблиц/схемы для базы данных\r\n<code>php app/console doctrine:schema:update --force</code>\r\n\r\n\r\n\r\nhttp://symfony-gu.ru/documentation/ru/html/book/doctrine.html', 'Памятка полезностей', '', 'inherit', 'open', 'open', '', '47-revision-4', '', '', '2013-06-04 03:54:22', '2013-06-04 03:54:22', '', 47, 'http://blog/47-revision-4/', 0, 'revision', '', 0),
(55, 1, '2013-06-09 17:30:49', '2013-06-09 17:30:49', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n[/sourcecode]\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n[/sourcecode]\r\n<h4>Назначение пунктов(items) группы</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n[/sourcecode]\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n[/sourcecode]\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n[/sourcecode]\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n[/sourcecode]', '5 Dashboard', '', 'publish', 'open', 'open', '', 'dashboard', '', '', '2013-06-16 09:34:24', '2013-06-16 09:34:24', '', 0, 'http://blog/?p=55', 0, 'post', '', 0),
(56, 1, '2013-06-09 17:30:44', '2013-06-09 17:30:44', '<h1>Главная страница административного интерфейса. (Dashboard)</h1>\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision', '', '', '2013-06-09 17:30:44', '2013-06-09 17:30:44', '', 55, 'http://blog/55-revision/', 0, 'revision', '', 0),
(57, 1, '2013-06-16 08:22:25', '2013-06-16 08:22:25', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\n\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\n[sourcecode language="js"]\n# app/config/config.yml\nsonata_admin:\n    blocks:\n        # display a dashboard block\n        - { position: left, type: sonata.admin.block.admin_list }\n\n    dashboard\n        groups:\n            ... your config ...\n[/sourcecode]\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\n\n<h3>Примеры</h3>\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\n<pre>\n# app/config/config.yml\nsonata_admin:\n    dashboard:\n        blocks:\n            # display a dashboard block\n            - { position: left, type: sonata.admin.block.admin_list }\n\n        groups:\n            sonata_page:\n                label: Page\n                items: ~\n</pre>\n<h4>Назначение пунктов(items) группы</h4>\n<pre>\n# app/config/config.yml\nsonata_admin:\n    dashboard:\n        blocks:\n            # display a dashboard block\n            - { position: left, type: sonata.admin.block.admin_list }\n\n        groups:\n            sonata_page:\n                items:\n                    - sonata.page.admin.page\n</pre>\n\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\n<pre>\n# app/config/config.yml\nsonata_admin:\n    dashboard:\n        blocks:\n            # display a dashboard block\n            - { position: left, type: sonata.admin.block.admin_list }\n\n        groups:\n            sonata_page: ~\n[/sourcecode]\n\n\n<h4>Добавление пунктов в группу</h4>\n<pre>\n# app/config/config.yml\nsonata_admin:\n    dashboard:\n        blocks:\n            # display a dashboard block\n            - { position: left, type: sonata.admin.block.admin_list }\n\n        groups:\n            sonata_page:\n                item_adds:\n                    - sonata.page.admin.myitem1\n                    - sonata.page.admin.myitem2\n[/sourcecode]\n\n<h4>Отображение нескольких блоков с разными группами</h4>\n<pre>\n# app/config/config.yml\nsonata_admin:\n    dashboard\n        blocks:\n            # display two dashboard blocks\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\n\n        groups:\n            sonata_page1:\n                items:\n                    - sonata.page.admin.myitem1\n            sonata_page2:\n                items:\n                    - sonata.page.admin.myitem2\n                    - sonata.page.admin.myitem3\n            sonata_page3:\n                items:\n                    - sonata.page.admin.myitem4\n[/sourcecode]', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-autosave', '', '', '2013-06-16 08:22:25', '2013-06-16 08:22:25', '', 55, 'http://blog/55-autosave/', 0, 'revision', '', 0),
(58, 1, '2013-06-09 17:30:49', '2013-06-09 17:30:49', '<h1>Главная страница административного интерфейса. (Dashboard)</h1>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-2', '', '', '2013-06-09 17:30:49', '2013-06-09 17:30:49', '', 55, 'http://blog/55-revision-2/', 0, 'revision', '', 0),
(59, 1, '2013-06-09 17:54:32', '2013-06-09 17:54:32', '<h1>Главная страница административного интерфейса. (Dashboard)</h1>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n<pre># app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n</pre>\r\n<img src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" alt="Dashboard" />\r\n', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-3', '', '', '2013-06-09 17:54:32', '2013-06-09 17:54:32', '', 55, 'http://blog/55-revision-3/', 0, 'revision', '', 0),
(60, 1, '2013-06-11 17:27:06', '2013-06-11 17:27:06', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n<pre># app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...</pre>\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n</pre>\r\n\r\n', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-4', '', '', '2013-06-11 17:27:06', '2013-06-11 17:27:06', '', 55, 'http://blog/55-revision-4/', 0, 'revision', '', 0),
(61, 1, '2013-06-11 17:33:02', '2013-06-11 17:33:02', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n<pre># app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...</pre>\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n</pre>\r\n<h4>Назначение пунктов(items) группы</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n</pre>\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n</pre>\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n</pre>\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n</pre>', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-5', '', '', '2013-06-11 17:33:02', '2013-06-11 17:33:02', '', 55, 'http://blog/55-revision-5/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(62, 1, '2013-06-15 13:00:10', '2013-06-15 13:00:10', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n\r\nИсточник: <a href="http://sonata-project.org/bundles/admin/master/doc/reference/architecture.html">http://sonata-project.org/bundles/admin/master/doc/reference/architecture.html</a>\r\n\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n<h2>Template Configuration</h2>\r\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\r\n<ul>\r\n	<li>AdminBundle :: standard_layout.html.twig</li>\r\n	<li>AdminBundle :: ajax_layout.html.twig</li>\r\n</ul>\r\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\r\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\r\n<ul>\r\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\r\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\r\n</ul>\r\n\r\n<h2>CRUD-Controller</h2>\r\nКонтроллер содержит основные CRUD-действия . Он связан с одним Admin-классомс помощью сопоставления имени контроллера с правильным административным инстансом.\r\n\r\nЛюбые или все действия могут быть переопределены в соответствии с требованиями проекта.\r\n\r\nКонтроллер использует Admin-класс для построения различных действий. Внутри контроллера, Admin- объект доступен с помощью конфигурационных свойств.\r\n\r\n<h2>(Получение) Obtaining an Admin Service</h2>\r\nAdmin-определений доступны через sonata.admin.pool службу или непосредственно из DIC (контейнер внедрения зависимостей). Admin-определений "лениво" загружаются через DIC для сокращения накладных расходов.\r\n\r\n<h2>Declaring a new Admin class</h2>\r\nКак только вы создали администратративный класс, вам нужно оповестить об этом фреймворк. Чтобы сделать это, вам нужно добавить тег с именем sonata.admin к службе. Параметрами для этого тега являются:\r\n<ul>\r\n	<li>manager_type: Метка менеджера баз данных для использования;</li>\r\n	<li>group: Метка для группировки в dashboard;</li>\r\n	<li>label: Метка имени сущности которой оперирует этот менеджер.</li>\r\n</ul>\r\n\r\n\r\nПримеры:\r\n[sourcecode language="xml"]\r\n&lt;!-- app/config/config.xml --&gt;\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;Sonata\\NewsBundle\\Admin\\PostAdmin&quot;&gt;\r\n\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;Sonata\\NewsBundle\\Entity\\Post&lt;/argument&gt;\r\n    &lt;argument&gt;SonataAdminBundle:CRUD&lt;/argument&gt;\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЕсли вы хотите определить свой собственный контроллер для обработки CRUD операций, измените последний аргумент в определении службы на:\r\n\r\n[sourcecode language="xml"]\r\n&lt;argument&gt;SonataNewsBundle:PostAdmin&lt;/argument&gt;\r\n[/sourcecode]\r\n\r\nИли, если вы используете конфигурационный файл в формате YML,\r\n\r\n[sourcecode language="plain"]\r\nservices:\r\n   sonata.news.admin.post:\r\n      class: Sonata\\NewsBundle\\Admin\\PostAdmin\r\n      tags:\r\n        - { name: sonata.admin, manager_type: orm, group: sonata_blog, label: post }\r\n      arguments: [null, Sonata\\NewsBundle\\Entity\\Post, SonataNewsBundle:PostAdmin]\r\n[/sourcecode]\r\nМожно расширить Sonata\\AdminBundle\\Admin\\Admin класс, чтобы минимизировать количество кода для написания. Этот базовый административный-класс использует службу маршрутизации для создания маршрутов. Обратите внимание, что вы можете использовать оба формата: или Bundle:Controller- формат или имя службы чтобы указать, какой контроллер загрузить. Если вы укажите null вместо SonataNewsBundle: PostAdmin, вам не нужно будет создавать класс контроллера, система будет использовать контроллер по умолчанию.', '4 Sonata Admin Bundle Architecture', '', 'publish', 'open', 'open', '', 'sonataadminbundle-architecture', '', '', '2013-06-16 10:54:24', '2013-06-16 10:54:24', '', 0, 'http://blog/?p=62', 0, 'post', '', 0),
(63, 1, '2013-06-15 12:58:16', '2013-06-15 12:58:16', '', 'SonataAdminBundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision', '', '', '2013-06-15 12:58:16', '2013-06-15 12:58:16', '', 62, 'http://blog/62-revision/', 0, 'revision', '', 0),
(64, 1, '2013-06-15 12:59:21', '2013-06-15 12:59:21', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на сайте проекта Django.', 'SonataAdminBundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-2', '', '', '2013-06-15 12:59:21', '2013-06-15 12:59:21', '', 62, 'http://blog/62-revision-2/', 0, 'revision', '', 0),
(65, 1, '2013-06-15 13:00:10', '2013-06-15 13:00:10', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.', 'SonataAdminBundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-3', '', '', '2013-06-15 13:00:10', '2013-06-15 13:00:10', '', 62, 'http://blog/62-revision-3/', 0, 'revision', '', 0),
(66, 1, '2013-06-16 09:30:29', '2013-06-16 09:30:29', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\n\n<h2>The Admin Class</h2>\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\nСледующая информация может быть определена в Admin-классе:\n<ul>\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\n</ul>\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\n\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\n<ul>\n	<li><tt>ListBuilder</tt>: строит список полей</li>\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\n	<li><tt>Router</tt>: генерирует разные url</li>\n	<li><tt>Request</tt></li>\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\n	<li><tt>Translator</tt></li>\n</ul>\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\n\n[sourcecode language="xml"]\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\n    &lt;argument /&gt;\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\n\n    &lt;call method=&quot;setUserManager&quot;&gt;\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\n    &lt;/call&gt;\n\n&lt;/service&gt;\n[/sourcecode]\n\nЗдесь, FOS_User_Manager включен в службу Post.\n\n<h2>Field Definition</h2>\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\n\nОпределение состоит из:\n<ul>\n	<li>name: Имя поля определения;</li>\n	<li>type: Тип поля;</li>\n	<li>template: Шаблон используемый для отображения поля;</li>\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\n</ul>\n\n<h2>Template Configuration</h2>\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\n<ul>\n	<li>AdminBundle :: standard_layout.html.twig</li>\n	<li>AdminBundle :: ajax_layout.html.twig</li>\n</ul>\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\n<ul>\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\n</ul>\n\n<h2>CRUD-Controller</h2>\nКонтроллер содержит основные CRUD-действия . Он связан с одним Admin-классомс помощью сопоставления имени контроллера с правильным административным инстансом.\n\nЛюбые или все действия могут быть переопределены в соответствии с требованиями проекта.\n\nКонтроллер использует Admin-класс для построения различных действий. Внутри контроллера, Admin- объект доступен с помощью конфигурационных свойств.\n\n<h2>(Получение) Obtaining an Admin Service</h2>\nAdmin-определений доступны через sonata.admin.pool службу или непосредственно из DIC (контейнер внедрения зависимостей). Admin-определений "лениво" загружаются через DIC для сокращения накладных расходов.\n\n<h2>Declaring a new Admin class</h2>\nКак только вы создали администратративный класс, вам нужно оповестить об этом фреймворк. Чтобы сделать это, вам нужно добавить тег с именем sonata.admin к службе. Параметрами для этого тега являются:\n<ul>\n	<li>manager_type: Метка менеджера баз данных для использования;</li>\n	<li>group: Метка для группировки в dashboard;</li>\n	<li>label: Метка имени сущности которой оперирует этот менеджер.</li>\n</ul>\n\n\nПримеры:\n[sourcecode language="xml"]\n&lt;!-- app/config/config.xml --&gt;\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;Sonata\\NewsBundle\\Admin\\PostAdmin&quot;&gt;\n\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\n\n    &lt;argument /&gt;\n    &lt;argument&gt;Sonata\\NewsBundle\\Entity\\Post&lt;/argument&gt;\n    &lt;argument&gt;SonataAdminBundle:CRUD&lt;/argument&gt;\n&lt;/service&gt;\n[/sourcecode]\n\nЕсли вы хотите определить свой собственный контроллер для обработки CRUD операций, измените последний аргумент в определении службы на:\n\n[sourcecode language="xml"]\n&lt;argument&gt;SonataNewsBundle:PostAdmin&lt;/argument&gt;\n[/sourcecode]\n\nИли, если вы используете конфигурационный файл в формате YML,\n\n[sourcecode language="plain"]\nservices:\n   sonata.news.admin.post:\n      class: Sonata\\NewsBundle\\Admin\\PostAdmin\n      tags:\n        - { name: sonata.admin, manager_type: orm, group: sonata_blog, label: post }\n      arguments: [null, Sonata\\NewsBundle\\Entity\\Post, SonataNewsBundle:PostAdmin]\n[/sourcecode]\nМожно расширить Sonata\\AdminBundle\\Admin\\Admin класс, чтобы минимизировать количество кода для написания. Этот базовый административный-класс использует службу маршрутизации для создания маршрутов. Обратите внимание, что вы можете использовать оба формата: или Bundle:Controller- формат или имя службы чтобы указать, какой контроллер загрузить. Если вы укажите null вместо SonataNewsBundle: PostAdmin, вам не нужно будет создавать класс контроллера, система будет использовать класс по умолчанию.', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-autosave', '', '', '2013-06-16 09:30:29', '2013-06-16 09:30:29', '', 62, 'http://blog/62-autosave/', 0, 'revision', '', 0),
(67, 1, '2013-06-15 13:00:29', '2013-06-15 13:00:29', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.', 'SonataAdminBundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-4', '', '', '2013-06-15 13:00:29', '2013-06-15 13:00:29', '', 62, 'http://blog/62-revision-4/', 0, 'revision', '', 0),
(68, 1, '2013-06-15 13:04:48', '2013-06-15 13:04:48', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nАдмин-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-5', '', '', '2013-06-15 13:04:48', '2013-06-15 13:04:48', '', 62, 'http://blog/62-revision-5/', 0, 'revision', '', 0),
(69, 1, '2013-06-15 13:12:27', '2013-06-15 13:12:27', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-6', '', '', '2013-06-15 13:12:27', '2013-06-15 13:12:27', '', 62, 'http://blog/62-revision-6/', 0, 'revision', '', 0),
(70, 1, '2013-06-16 05:59:58', '2013-06-16 05:59:58', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-7', '', '', '2013-06-16 05:59:58', '2013-06-16 05:59:58', '', 62, 'http://blog/62-revision-7/', 0, 'revision', '', 0),
(71, 1, '2013-06-16 06:01:46', '2013-06-16 06:01:46', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-8', '', '', '2013-06-16 06:01:46', '2013-06-16 06:01:46', '', 62, 'http://blog/62-revision-8/', 0, 'revision', '', 0),
(72, 1, '2013-06-16 06:02:41', '2013-06-16 06:02:41', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n<pre>\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</pre>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-9', '', '', '2013-06-16 06:02:41', '2013-06-16 06:02:41', '', 62, 'http://blog/62-revision-9/', 0, 'revision', '', 0),
(73, 1, '2013-06-16 06:04:22', '2013-06-16 06:04:22', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n<code><service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%"></code>\r\n<pre>\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</pre>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-10', '', '', '2013-06-16 06:04:22', '2013-06-16 06:04:22', '', 62, 'http://blog/62-revision-10/', 0, 'revision', '', 0),
(74, 1, '2013-06-16 06:05:00', '2013-06-16 06:05:00', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n<pre>\r\n<code><service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%"></code>\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</pre>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-11', '', '', '2013-06-16 06:05:00', '2013-06-16 06:05:00', '', 62, 'http://blog/62-revision-11/', 0, 'revision', '', 0),
(75, 1, '2013-06-16 06:12:26', '2013-06-16 06:12:26', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n<pre>\r\n<code><service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%"></code>\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</pre>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-12', '', '', '2013-06-16 06:12:26', '2013-06-16 06:12:26', '', 62, 'http://blog/62-revision-12/', 0, 'revision', '', 0),
(76, 1, '2013-06-16 06:18:46', '2013-06-16 06:18:46', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n<pre lang="xml" line=11>\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</pre>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-13', '', '', '2013-06-16 06:18:46', '2013-06-16 06:18:46', '', 62, 'http://blog/62-revision-13/', 0, 'revision', '', 0),
(77, 1, '2013-06-16 06:19:24', '2013-06-16 06:19:24', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n<pre lang="html" >\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</pre>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-14', '', '', '2013-06-16 06:19:24', '2013-06-16 06:19:24', '', 62, 'http://blog/62-revision-14/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(78, 1, '2013-06-16 06:23:34', '2013-06-16 06:23:34', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n<pre >\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</pre>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-15', '', '', '2013-06-16 06:23:34', '2013-06-16 06:23:34', '', 62, 'http://blog/62-revision-15/', 0, 'revision', '', 0),
(79, 1, '2013-06-16 06:29:29', '2013-06-16 06:29:29', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[code htmlscript="1"][/code]\r\n<service id="sonata.news.admin.post" class="%sonata.news.admin.post.class%">\r\n    <tag name="sonata.admin" manager_type="orm" group="sonata_blog" label="post"/>\r\n    <argument />\r\n    <argument>%sonata.news.admin.post.entity%</argument>\r\n    <argument>%sonata.news.admin.post.controller%</argument>\r\n\r\n    <call method="setUserManager">\r\n        <argument type="service" id="fos_user.user_manager" />\r\n    </call>\r\n\r\n</service>\r\n</code>\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-16', '', '', '2013-06-16 06:29:29', '2013-06-16 06:29:29', '', 62, 'http://blog/62-revision-16/', 0, 'revision', '', 0),
(80, 1, '2013-06-16 07:19:29', '2013-06-16 07:19:29', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[code htmlscript="1"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/code]\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-17', '', '', '2013-06-16 07:19:29', '2013-06-16 07:19:29', '', 62, 'http://blog/62-revision-17/', 0, 'revision', '', 0),
(81, 1, '2013-06-16 08:10:01', '2013-06-16 08:10:01', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[code htmlscript="1" lang="html"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/code]\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-18', '', '', '2013-06-16 08:10:01', '2013-06-16 08:10:01', '', 62, 'http://blog/62-revision-18/', 0, 'revision', '', 0),
(82, 1, '2013-06-16 08:10:51', '2013-06-16 08:10:51', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[code htmlscript="1" lang="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/code]\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-19', '', '', '2013-06-16 08:10:51', '2013-06-16 08:10:51', '', 62, 'http://blog/62-revision-19/', 0, 'revision', '', 0),
(83, 1, '2013-06-16 08:11:51', '2013-06-16 08:11:51', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[code htmlscript="1"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/code]\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-20', '', '', '2013-06-16 08:11:51', '2013-06-16 08:11:51', '', 62, 'http://blog/62-revision-20/', 0, 'revision', '', 0),
(84, 1, '2013-06-16 08:13:34', '2013-06-16 08:13:34', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[code]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/code]\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-21', '', '', '2013-06-16 08:13:34', '2013-06-16 08:13:34', '', 62, 'http://blog/62-revision-21/', 0, 'revision', '', 0),
(85, 1, '2013-06-16 08:18:39', '2013-06-16 08:18:39', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="plain"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\n\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-22', '', '', '2013-06-16 08:18:39', '2013-06-16 08:18:39', '', 62, 'http://blog/62-revision-22/', 0, 'revision', '', 0),
(86, 1, '2013-06-16 08:18:53', '2013-06-16 08:18:53', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="html"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\n\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-23', '', '', '2013-06-16 08:18:53', '2013-06-16 08:18:53', '', 62, 'http://blog/62-revision-23/', 0, 'revision', '', 0),
(87, 1, '2013-06-16 08:19:10', '2013-06-16 08:19:10', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\n\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-24', '', '', '2013-06-16 08:19:10', '2013-06-16 08:19:10', '', 62, 'http://blog/62-revision-24/', 0, 'revision', '', 0),
(88, 1, '2013-06-11 19:36:03', '2013-06-11 19:36:03', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n<pre># app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...</pre>\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n</pre>\r\n<h4>Назначение пунктов(items) группы</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n</pre>\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n</pre>\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n</pre>\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n</pre>', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-6', '', '', '2013-06-11 19:36:03', '2013-06-11 19:36:03', '', 55, 'http://blog/55-revision-6/', 0, 'revision', '', 0),
(89, 1, '2013-06-16 08:20:22', '2013-06-16 08:20:22', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n[/sourcecode]\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n</pre>\r\n<h4>Назначение пунктов(items) группы</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n</pre>\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n</pre>\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n</pre>\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n</pre>', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-7', '', '', '2013-06-16 08:20:22', '2013-06-16 08:20:22', '', 55, 'http://blog/55-revision-7/', 0, 'revision', '', 0),
(90, 1, '2013-06-16 08:20:53', '2013-06-16 08:20:53', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n[sourcecode language="yaml"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n[/sourcecode]\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n</pre>\r\n<h4>Назначение пунктов(items) группы</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n</pre>\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n</pre>\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n</pre>\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n</pre>', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-8', '', '', '2013-06-16 08:20:53', '2013-06-16 08:20:53', '', 55, 'http://blog/55-revision-8/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(91, 1, '2013-06-16 08:21:09', '2013-06-16 08:21:09', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n[sourcecode language="yml"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n[/sourcecode]\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n</pre>\r\n<h4>Назначение пунктов(items) группы</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n</pre>\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n</pre>\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n</pre>\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n</pre>', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-9', '', '', '2013-06-16 08:21:09', '2013-06-16 08:21:09', '', 55, 'http://blog/55-revision-9/', 0, 'revision', '', 0),
(92, 1, '2013-06-16 08:21:22', '2013-06-16 08:21:22', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n[sourcecode language="js"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n[/sourcecode]\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n</pre>\r\n<h4>Назначение пунктов(items) группы</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n</pre>\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n</pre>\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n</pre>\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n<pre>\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n</pre>', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-10', '', '', '2013-06-16 08:21:22', '2013-06-16 08:21:22', '', 55, 'http://blog/55-revision-10/', 0, 'revision', '', 0),
(93, 1, '2013-06-02 08:04:21', '2013-06-02 08:04:21', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n<pre>\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&gt;router-&gt;generate(''homepage'');\r\n        $event-&gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n</pre>\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n</pre>\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n    &lt;tag name="kernel.event_subscriber"/&gt; \r\n    &lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-29', '', '', '2013-06-02 08:04:21', '2013-06-02 08:04:21', '', 1, 'http://blog/1-revision-29/', 0, 'revision', '', 0),
(94, 1, '2013-06-16 08:24:06', '2013-06-16 08:24:06', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[php]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&amp;gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&amp;gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&amp;gt;router-&amp;gt;generate(''homepage'');\r\n        $event-&amp;gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n[/php]\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n</pre>\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n    &lt;tag name="kernel.event_subscriber"/&gt; \r\n    &lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-30', '', '', '2013-06-16 08:24:06', '2013-06-16 08:24:06', '', 1, 'http://blog/1-revision-30/', 0, 'revision', '', 0),
(95, 1, '2013-06-16 08:24:58', '2013-06-16 08:24:58', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[php]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&gt;router-&gt;generate(''homepage'');\r\n        $event-&gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n[/php]\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: </code>\r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n</pre>\r\n\r\nили если вы предпочитаете XML-определения\r\n\r\n<pre>\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id="acme_user.password_resetting"&gt; \r\n    &lt;tag name="kernel.event_subscriber"/&gt; \r\n    &lt;argument type="service" id="router"/&gt; \r\n&lt;/service&gt;\r\n</pre>\r\n', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-31', '', '', '2013-06-16 08:24:58', '2013-06-16 08:24:58', '', 1, 'http://blog/1-revision-31/', 0, 'revision', '', 0),
(96, 1, '2013-06-16 08:27:27', '2013-06-16 08:27:27', 'Контроллеры, поставляемые в комплекте с FOSUserBundle, предоставляют широкую функциональность, достаточную для общих случаев использования. Но, вы можете обнаружить, что вам необходимо расширить  функциональные возможности и добавить некоторую логику, которая соответствует конкретным потребностям вашего приложения.\r\nДля этого контроллеры передают события во многие места своей логики. Все события можно найти в константы [highlight]FOS\\UserBundle класса\\FOSUserEvents[/highlight].\r\nВсе контроллеры следуют общим принципам: они посылают [highlight]SUCCESS[/highlight] события, когда форма валидна до сохранения пользователем, а [highlight]COMPLETED[/highlight] событие, когда сохранена. Таким образом, все [highlight]SUCCESS[/highlight] события позволяют установить ответ, если вы не хотите перенаправления по умолчанию и все [highlight]COMPLETED[/highlight] события позволяют вам установить ответ, прежде чем они будут возвращены.\r\nКонтроллеры с формой отправки также посылают [highlight]INITIALIZE[/highlight] события после того как сущность получена(fetched), но до создания формы.\r\nНапример, этот слушатель(Listener) изменит перенаправление после сброса пароля для перехода на главную страницу вместо профиля.\r\n[php]\r\n// src/Acme/UserBundle/EventListener/PasswordResettingListener.php\r\n\r\nnamespace Acme\\UserBundle\\EventListener;\r\n\r\nuse FOS\\UserBundle\\FOSUserEvents;\r\nuse FOS\\UserBundle\\Event\\FormEvent;\r\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\r\nuse Symfony\\Component\\HttpFoundation\\RedirectResponse;\r\nuse Symfony\\Component\\Routing\\Generator\\UrlGeneratorInterface;\r\n\r\n/**\r\n * Listener responsible to change the redirection at the end of the password resetting\r\n*/\r\nclass PasswordResettingListener implements EventSubscriberInterface\r\n{\r\n    private $router;\r\n\r\n    public function __construct(UrlGeneratorInterface $router)\r\n    {\r\n        $this-&gt;router = $router;\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n    */\r\n    public static function getSubscribedEvents()\r\n    {\r\n        return array(\r\n            FOSUserEvents::RESETTING_RESET_SUCCESS =&gt; ''onPasswordResettingSuccess'',\r\n        );\r\n    }\r\n\r\n    public function onPasswordResettingSuccess(FormEvent $event)\r\n    {\r\n        $url = $this-&gt;router-&gt;generate(''homepage'');\r\n        $event-&gt;setResponse(new RedirectResponse($url));\r\n    }\r\n}\r\n[/php]\r\n\r\n[sourcecode language="html"]\r\n// src/Acme/UserBundle/Resources/config/services.yml \r\nservices: acme_user.password_resetting: \r\n    class: Acme\\UserBundle\\EventListener\\PasswordResettingListener\r\n    arguments: [@router] \r\n    tags: - { \r\n         name: kernel.event_subscriber \r\n    }\r\n\r\n[/sourcecode]\r\nили если вы предпочитаете XML-определения\r\n\r\n[sourcecode language="html"]\r\n// src/Acme/UserBundle/Resources/config/services.xml \r\n&lt;service id=&quot;acme_user.password_resetting&quot;&gt;\r\n    &lt;tag name=&quot;kernel.event_subscriber&quot;/&gt; \r\n    &lt;argument type=&quot;service&quot; id=&quot;router&quot;/&gt; \r\n&lt;/service&gt;\r\n[/sourcecode]\r\n', 'Подключение в контроллерах', '', 'inherit', 'open', 'open', '', '1-revision-32', '', '', '2013-06-16 08:27:27', '2013-06-16 08:27:27', '', 1, 'http://blog/1-revision-32/', 0, 'revision', '', 0),
(97, 1, '2013-06-16 08:19:45', '2013-06-16 08:19:45', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\n\r\n&nbsp;', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-25', '', '', '2013-06-16 08:19:45', '2013-06-16 08:19:45', '', 62, 'http://blog/62-revision-25/', 0, 'revision', '', 0),
(98, 1, '2013-06-16 08:29:10', '2013-06-16 08:29:10', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n \r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n \r\n&lt;/service&gt;\r\n[/sourcecode]', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-26', '', '', '2013-06-16 08:29:10', '2013-06-16 08:29:10', '', 62, 'http://blog/62-revision-26/', 0, 'revision', '', 0),
(99, 1, '2013-06-16 08:40:29', '2013-06-16 08:40:29', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n \r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n \r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-27', '', '', '2013-06-16 08:40:29', '2013-06-16 08:40:29', '', 62, 'http://blog/62-revision-27/', 0, 'revision', '', 0),
(100, 1, '2013-06-16 08:51:23', '2013-06-16 08:51:23', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n \r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n \r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n<h2>Template Configuration</h2>\r\n\r\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\r\n<ul>\r\n	<li>AdminBundle :: standard_layout.html.twig</li>\r\n	<li>AdminBundle :: ajax_layout.html.twig</li>\r\n</ul>\r\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\r\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\r\n<ul>\r\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\r\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\r\n</ul>\r\n\r\n<h2>CRUD-Controller</h2>\r\n', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-28', '', '', '2013-06-16 08:51:23', '2013-06-16 08:51:23', '', 62, 'http://blog/62-revision-28/', 0, 'revision', '', 0),
(101, 1, '2013-06-16 08:59:29', '2013-06-16 08:59:29', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n \r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n \r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n<h2>Template Configuration</h2>\r\n\r\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\r\n<ul>\r\n	<li>AdminBundle :: standard_layout.html.twig</li>\r\n	<li>AdminBundle :: ajax_layout.html.twig</li>\r\n</ul>\r\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\r\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\r\n<ul>\r\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\r\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\r\n</ul>\r\n\r\n<h2>CRUD-Controller</h2>\r\nКонтроллер содержит основные CRUD-действия . Он связан с одним Admin-классомс помощью сопоставления имени контроллера с правильным административным инстансом.\r\n\r\nЛюбые или все действия могут быть переопределены в соответствии с требованиями проекта.\r\n\r\nКонтроллер использует Admin-класс для построения различных действий. Внутри контроллера, Admin- объект доступен с помощью конфигурационных свойств.\r\n', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-29', '', '', '2013-06-16 08:59:29', '2013-06-16 08:59:29', '', 62, 'http://blog/62-revision-29/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(102, 1, '2013-06-16 09:06:39', '2013-06-16 09:06:39', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n<h2>Template Configuration</h2>\r\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\r\n<ul>\r\n	<li>AdminBundle :: standard_layout.html.twig</li>\r\n	<li>AdminBundle :: ajax_layout.html.twig</li>\r\n</ul>\r\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\r\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\r\n<ul>\r\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\r\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\r\n</ul>\r\n\r\n<h2>CRUD-Controller</h2>\r\nКонтроллер содержит основные CRUD-действия . Он связан с одним Admin-классомс помощью сопоставления имени контроллера с правильным административным инстансом.\r\n\r\nЛюбые или все действия могут быть переопределены в соответствии с требованиями проекта.\r\n\r\nКонтроллер использует Admin-класс для построения различных действий. Внутри контроллера, Admin- объект доступен с помощью конфигурационных свойств.\r\n\r\n<h2>(Получение) Obtaining an Admin Service</h2>\r\nAdmin-определений доступны через sonata.admin.pool службу или непосредственно из DIC (контейнер внедрения зависимостей). Admin-определений "лениво" загружаются через DIC для сокращения накладных расходов.\r\n\r\n<h2>Declaring a new Admin class</h2>\r\n\r\n[sourcecode language="xml"]\r\n&lt;!-- app/config/config.xml --&gt;\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;Sonata\\NewsBundle\\Admin\\PostAdmin&quot;&gt;\r\n\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;Sonata\\NewsBundle\\Entity\\Post&lt;/argument&gt;\r\n    &lt;argument&gt;SonataAdminBundle:CRUD&lt;/argument&gt;\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\n[sourcecode language="xml"]\r\n&lt;argument&gt;SonataNewsBundle:PostAdmin&lt;/argument&gt;\r\n[/sourcecode]\r\nOr if you’re using a YML configuration file,\r\n\r\n[sourcecode language="plain"]\r\nservices:\r\n   sonata.news.admin.post:\r\n      class: Sonata\\NewsBundle\\Admin\\PostAdmin\r\n      tags:\r\n        - { name: sonata.admin, manager_type: orm, group: sonata_blog, label: post }\r\n      arguments: [null, Sonata\\NewsBundle\\Entity\\Post, SonataNewsBundle:PostAdmin]\r\n[/sourcecode]\r\nYou can extend Sonata\\AdminBundle\\Admin\\Admin class to minimize the amount of code to write. This base admin class uses the routing services to build routes. Note that you can use both the Bundle:Controller format or a service name to specify what controller to load. If you provide null instead of SonataNewsBundle:PostAdmin, you will not need to create a controller class and the system will use the default.', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-30', '', '', '2013-06-16 09:06:39', '2013-06-16 09:06:39', '', 62, 'http://blog/62-revision-30/', 0, 'revision', '', 0),
(103, 1, '2013-06-16 09:16:27', '2013-06-16 09:16:27', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n<h2>Template Configuration</h2>\r\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\r\n<ul>\r\n	<li>AdminBundle :: standard_layout.html.twig</li>\r\n	<li>AdminBundle :: ajax_layout.html.twig</li>\r\n</ul>\r\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\r\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\r\n<ul>\r\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\r\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\r\n</ul>\r\n\r\n<h2>CRUD-Controller</h2>\r\nКонтроллер содержит основные CRUD-действия . Он связан с одним Admin-классомс помощью сопоставления имени контроллера с правильным административным инстансом.\r\n\r\nЛюбые или все действия могут быть переопределены в соответствии с требованиями проекта.\r\n\r\nКонтроллер использует Admin-класс для построения различных действий. Внутри контроллера, Admin- объект доступен с помощью конфигурационных свойств.\r\n\r\n<h2>(Получение) Obtaining an Admin Service</h2>\r\nAdmin-определений доступны через sonata.admin.pool службу или непосредственно из DIC (контейнер внедрения зависимостей). Admin-определений "лениво" загружаются через DIC для сокращения накладных расходов.\r\n\r\n<h2>Declaring a new Admin class</h2>\r\nКак только вы создали администратративный класс, вам нужно оповестить об этом фреймворк. Чтобы сделать это, вам нужно добавить тег с именем sonata.admin к службе. Параметрами для этого тега являются:\r\n<ul>\r\n	<li>manager_type: Метка менеджера баз данных для использования;</li>\r\n	<li>group: Метка для группировки в dashboard;</li>\r\n	<li>label: Метка имени сущности которой оперирует этот менеджер.</li>\r\n</ul>\r\n\r\n\r\nПримеры:\r\n[sourcecode language="xml"]\r\n&lt;!-- app/config/config.xml --&gt;\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;Sonata\\NewsBundle\\Admin\\PostAdmin&quot;&gt;\r\n\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;Sonata\\NewsBundle\\Entity\\Post&lt;/argument&gt;\r\n    &lt;argument&gt;SonataAdminBundle:CRUD&lt;/argument&gt;\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\n[sourcecode language="xml"]\r\n&lt;argument&gt;SonataNewsBundle:PostAdmin&lt;/argument&gt;\r\n[/sourcecode]\r\nOr if you’re using a YML configuration file,\r\n\r\n[sourcecode language="plain"]\r\nservices:\r\n   sonata.news.admin.post:\r\n      class: Sonata\\NewsBundle\\Admin\\PostAdmin\r\n      tags:\r\n        - { name: sonata.admin, manager_type: orm, group: sonata_blog, label: post }\r\n      arguments: [null, Sonata\\NewsBundle\\Entity\\Post, SonataNewsBundle:PostAdmin]\r\n[/sourcecode]\r\nYou can extend Sonata\\AdminBundle\\Admin\\Admin class to minimize the amount of code to write. This base admin class uses the routing services to build routes. Note that you can use both the Bundle:Controller format or a service name to specify what controller to load. If you provide null instead of SonataNewsBundle:PostAdmin, you will not need to create a controller class and the system will use the default.', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-31', '', '', '2013-06-16 09:16:27', '2013-06-16 09:16:27', '', 62, 'http://blog/62-revision-31/', 0, 'revision', '', 0),
(104, 1, '2013-06-16 09:30:33', '2013-06-16 09:30:33', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n<h2>Template Configuration</h2>\r\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\r\n<ul>\r\n	<li>AdminBundle :: standard_layout.html.twig</li>\r\n	<li>AdminBundle :: ajax_layout.html.twig</li>\r\n</ul>\r\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\r\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\r\n<ul>\r\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\r\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\r\n</ul>\r\n\r\n<h2>CRUD-Controller</h2>\r\nКонтроллер содержит основные CRUD-действия . Он связан с одним Admin-классомс помощью сопоставления имени контроллера с правильным административным инстансом.\r\n\r\nЛюбые или все действия могут быть переопределены в соответствии с требованиями проекта.\r\n\r\nКонтроллер использует Admin-класс для построения различных действий. Внутри контроллера, Admin- объект доступен с помощью конфигурационных свойств.\r\n\r\n<h2>(Получение) Obtaining an Admin Service</h2>\r\nAdmin-определений доступны через sonata.admin.pool службу или непосредственно из DIC (контейнер внедрения зависимостей). Admin-определений "лениво" загружаются через DIC для сокращения накладных расходов.\r\n\r\n<h2>Declaring a new Admin class</h2>\r\nКак только вы создали администратративный класс, вам нужно оповестить об этом фреймворк. Чтобы сделать это, вам нужно добавить тег с именем sonata.admin к службе. Параметрами для этого тега являются:\r\n<ul>\r\n	<li>manager_type: Метка менеджера баз данных для использования;</li>\r\n	<li>group: Метка для группировки в dashboard;</li>\r\n	<li>label: Метка имени сущности которой оперирует этот менеджер.</li>\r\n</ul>\r\n\r\n\r\nПримеры:\r\n[sourcecode language="xml"]\r\n&lt;!-- app/config/config.xml --&gt;\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;Sonata\\NewsBundle\\Admin\\PostAdmin&quot;&gt;\r\n\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;Sonata\\NewsBundle\\Entity\\Post&lt;/argument&gt;\r\n    &lt;argument&gt;SonataAdminBundle:CRUD&lt;/argument&gt;\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЕсли вы хотите определить свой собственный контроллер для обработки CRUD операций, измените последний аргумент в определении службы на:\r\n\r\n[sourcecode language="xml"]\r\n&lt;argument&gt;SonataNewsBundle:PostAdmin&lt;/argument&gt;\r\n[/sourcecode]\r\n\r\nИли, если вы используете конфигурационный файл в формате YML,\r\n\r\n[sourcecode language="plain"]\r\nservices:\r\n   sonata.news.admin.post:\r\n      class: Sonata\\NewsBundle\\Admin\\PostAdmin\r\n      tags:\r\n        - { name: sonata.admin, manager_type: orm, group: sonata_blog, label: post }\r\n      arguments: [null, Sonata\\NewsBundle\\Entity\\Post, SonataNewsBundle:PostAdmin]\r\n[/sourcecode]\r\nМожно расширить Sonata\\AdminBundle\\Admin\\Admin класс, чтобы минимизировать количество кода для написания. Этот базовый административный-класс использует службу маршрутизации для создания маршрутов. Обратите внимание, что вы можете использовать оба формата: или Bundle:Controller- формат или имя службы чтобы указать, какой контроллер загрузить. Если вы укажите null вместо SonataNewsBundle: PostAdmin, вам не нужно будет создавать класс контроллера, система будет использовать контроллер по умолчанию.', 'Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-32', '', '', '2013-06-16 09:30:33', '2013-06-16 09:30:33', '', 62, 'http://blog/62-revision-32/', 0, 'revision', '', 0),
(105, 1, '2013-06-16 08:23:17', '2013-06-16 08:23:17', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n[/sourcecode]\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n[/sourcecode]\r\n<h4>Назначение пунктов(items) группы</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n[/sourcecode]\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n[/sourcecode]\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n[/sourcecode]\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n[/sourcecode]', 'Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-11', '', '', '2013-06-16 08:23:17', '2013-06-16 08:23:17', '', 55, 'http://blog/55-revision-11/', 0, 'revision', '', 0),
(106, 1, '2013-06-16 09:31:44', '2013-06-16 09:31:44', '<h2>Главная страница административного интерфейса. (Dashboard)</h2>\r\nГлавная страница административного интерфейса (Dashboard) это основная лэндинг страница (landing page). По-умолчанию здесь перечислены основные доступные админ-интерфейсы.  Этот список представляет собой блок определяемый сервисом  <tt>sonata.admin.block.admin_list</tt>. Вы также можете добавить больше блоков, следуя указаниям в <a href="http://sonata-project.org/bundles/block/master/doc/index.html">документации</a>.\r\n\r\nЕсли вы хотите кастомизировать dashboard, добавьте следующий код в конфигурационный файл вашего приложения:\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    blocks:\r\n        # display a dashboard block\r\n        - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n    dashboard\r\n        groups:\r\n            ... your config ...\r\n[/sourcecode]\r\n<img alt="Dashboard" src="http://sonata-project.org/bundles/admin/master/doc/_images/dashboard.png" />\r\n\r\n<h3>Примеры</h3>\r\n<h4>Назначение метки(label) группы и установка пунктов(items) по-умолчанию</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                label: Page\r\n                items: ~\r\n[/sourcecode]\r\n<h4>Назначение пунктов(items) группы</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                items:\r\n                    - sonata.page.admin.page\r\n[/sourcecode]\r\n\r\n<h4>Добавление группы со всеми пунктами по-умолчанию</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page: ~\r\n[/sourcecode]\r\n\r\n\r\n<h4>Добавление пунктов в группу</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard:\r\n        blocks:\r\n            # display a dashboard block\r\n            - { position: left, type: sonata.admin.block.admin_list }\r\n\r\n        groups:\r\n            sonata_page:\r\n                item_adds:\r\n                    - sonata.page.admin.myitem1\r\n                    - sonata.page.admin.myitem2\r\n[/sourcecode]\r\n\r\n<h4>Отображение нескольких блоков с разными группами</h4>\r\n[sourcecode language="plain"]\r\n# app/config/config.yml\r\nsonata_admin:\r\n    dashboard\r\n        blocks:\r\n            # display two dashboard blocks\r\n            - { position: left,  type: sonata.admin.block.admin_list, settings: { groups: [sonata_page1, sonata_page2] } }\r\n            - { position: right, type: sonata.admin.block.admin_list, settings: { groups: [sonata_page3] } }\r\n\r\n        groups:\r\n            sonata_page1:\r\n                items:\r\n                    - sonata.page.admin.myitem1\r\n            sonata_page2:\r\n                items:\r\n                    - sonata.page.admin.myitem2\r\n                    - sonata.page.admin.myitem3\r\n            sonata_page3:\r\n                items:\r\n                    - sonata.page.admin.myitem4\r\n[/sourcecode]', '5 Dashboard', '', 'inherit', 'open', 'open', '', '55-revision-12', '', '', '2013-06-16 09:31:44', '2013-06-16 09:31:44', '', 55, 'http://blog/55-revision-12/', 0, 'revision', '', 0),
(108, 1, '2013-06-16 10:05:57', '2013-06-16 10:05:57', 'Здесь располагается информация о том, как можно со мной связаться.', 'Контакты', '', 'publish', 'open', 'open', '', 'kontaktyi', '', '', '2013-06-16 10:05:57', '2013-06-16 10:05:57', '', 0, 'http://blog/?page_id=108', 0, 'page', '', 0),
(110, 1, '2013-06-16 10:05:48', '2013-06-16 10:05:48', 'Здесь располагается информация о том, как можно со', 'Контакты', '', 'inherit', 'open', 'open', '', '108-revision', '', '', '2013-06-16 10:05:48', '2013-06-16 10:05:48', '', 108, 'http://blog/108-revision/', 0, 'revision', '', 0),
(111, 1, '2013-06-16 10:25:16', '2013-06-16 10:25:16', ' ', '', '', 'publish', 'open', 'open', '', '111', '', '', '2013-06-16 10:25:23', '2013-06-16 10:25:23', '', 0, 'http://blog/?p=111', 1, 'nav_menu_item', '', 0),
(112, 1, '2013-06-16 10:25:16', '2013-06-16 10:25:16', 'Здесь располагаются мои наблюдения и переводы касающиеся Sonata Admin Bundle', '', '', 'publish', 'open', 'open', '', '112', '', '', '2013-06-16 10:25:23', '2013-06-16 10:25:23', '', 2, 'http://blog/?p=112', 2, 'nav_menu_item', '', 0),
(113, 1, '2013-06-16 09:31:27', '2013-06-16 09:31:27', 'Архитектура SonataAdminBundle прежде всего вдохновлена проектом Django Admin, который действительно большой проект. Более подробную информацию можно найти на <a href="http://www.djangoproject.com/">сайте проекта Django</a>.\r\n\r\n<h2>The Admin Class</h2>\r\nAdmin-класс представляет CRUD-функционал для конкретной модели. Он содержит все необходимые конфигурации для отображения богатого CRUD-интерфейса для сущности.\r\nСледующая информация может быть определена в Admin-классе:\r\n<ul>\r\n	<li><tt>list</tt>: Поля отображаемые в таблице-списке;</li>\r\n	<li><tt>filter</tt>: Поля, по которым можно фильтровать список;</li>\r\n	<li><tt>form</tt>: Поля, используемые для редактирования;</li>\r\n	<li><tt>show</tt>: Поля, используемые для отображения сущности;</li>\r\n	<li>Batch actions: Действие, которое можно проводить над группой элементов.</li>\r\n</ul>\r\nЕсли поле связано с другой сущностью (и эта сущность также имеет Admin-класс), то связанный Admin-класс будет доступен в первом классе.\r\n\r\nAdmin класс это службой, реализующая AdminInterface интерфейс, а это означает, что следующие необходимые зависимости автоматически вводится:\r\n<ul>\r\n	<li><tt>ListBuilder</tt>: строит список полей</li>\r\n	<li><tt>FormContractor</tt>: строит формы использую Symfony <tt>FormBuilder</tt></li>\r\n	<li><tt>DatagridBuilder</tt>: строит поля фильтра</li>\r\n	<li><tt>Router</tt>: генерирует разные url</li>\r\n	<li><tt>Request</tt></li>\r\n	<li><tt>ModelManager</tt>: Служба, которая обрабатывает определенный код ORM</li>\r\n	<li><tt>Translator</tt></li>\r\n</ul>\r\nТаким образом, вы можете получить доступ к любому сервису, который только пожелаете, вводя их в Админ-класс, вот так:\r\n\r\n[sourcecode language="xml"]\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;%sonata.news.admin.post.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.entity%&lt;/argument&gt;\r\n    &lt;argument&gt;%sonata.news.admin.post.controller%&lt;/argument&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=&quot;service&quot; id=&quot;fos_user.user_manager&quot; /&gt;\r\n    &lt;/call&gt;\r\n\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЗдесь, FOS_User_Manager включен в службу Post.\r\n\r\n<h2>Field Definition</h2>\r\nОпределение поля является FieldDescription объектом. Один пункт списка задает только одно определение.\r\n\r\nОпределение состоит из:\r\n<ul>\r\n	<li>name: Имя поля определения;</li>\r\n	<li>type: Тип поля;</li>\r\n	<li>template: Шаблон используемый для отображения поля;</li>\r\n	<li>targetEntity: Имя класса целевой сущности отношений;</li>\r\n	<li>options: Некоторые типы полей имеют дополнительные параметры;</li>\r\n</ul>\r\n\r\n<h2>Template Configuration</h2>\r\nТекущая реализация использует Twig как шаблонизатор. Все шаблоны хранятся в Resources/views/CRUD каталоге пакета(бандла).Базовый шаблон расширяет(наследует) два макета:\r\n<ul>\r\n	<li>AdminBundle :: standard_layout.html.twig</li>\r\n	<li>AdminBundle :: ajax_layout.html.twig</li>\r\n</ul>\r\nБазовые шаблоны могут быть сконфигурированы в контейнер служб(Service Container). Таким образом, вы можете легко настроить макет в соответствии с вашими требованиями.\r\nКаждое поле отображается тремяразличными способами и каждое имеет свой собственный шаблон Twig. Например, для поля с текстовым типом, следующие шаблоны будет использоваться:\r\n<ul>\r\n	<li>filter_text.twig: шаблон, используемый в поле фильтра</li>\r\n	<li>list_text.twig: шаблон, используемый в списке таблицы</li>\r\n</ul>\r\n\r\n<h2>CRUD-Controller</h2>\r\nКонтроллер содержит основные CRUD-действия . Он связан с одним Admin-классомс помощью сопоставления имени контроллера с правильным административным инстансом.\r\n\r\nЛюбые или все действия могут быть переопределены в соответствии с требованиями проекта.\r\n\r\nКонтроллер использует Admin-класс для построения различных действий. Внутри контроллера, Admin- объект доступен с помощью конфигурационных свойств.\r\n\r\n<h2>(Получение) Obtaining an Admin Service</h2>\r\nAdmin-определений доступны через sonata.admin.pool службу или непосредственно из DIC (контейнер внедрения зависимостей). Admin-определений "лениво" загружаются через DIC для сокращения накладных расходов.\r\n\r\n<h2>Declaring a new Admin class</h2>\r\nКак только вы создали администратративный класс, вам нужно оповестить об этом фреймворк. Чтобы сделать это, вам нужно добавить тег с именем sonata.admin к службе. Параметрами для этого тега являются:\r\n<ul>\r\n	<li>manager_type: Метка менеджера баз данных для использования;</li>\r\n	<li>group: Метка для группировки в dashboard;</li>\r\n	<li>label: Метка имени сущности которой оперирует этот менеджер.</li>\r\n</ul>\r\n\r\n\r\nПримеры:\r\n[sourcecode language="xml"]\r\n&lt;!-- app/config/config.xml --&gt;\r\n&lt;service id=&quot;sonata.news.admin.post&quot; class=&quot;Sonata\\NewsBundle\\Admin\\PostAdmin&quot;&gt;\r\n\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;sonata_blog&quot; label=&quot;post&quot;/&gt;\r\n\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;Sonata\\NewsBundle\\Entity\\Post&lt;/argument&gt;\r\n    &lt;argument&gt;SonataAdminBundle:CRUD&lt;/argument&gt;\r\n&lt;/service&gt;\r\n[/sourcecode]\r\n\r\nЕсли вы хотите определить свой собственный контроллер для обработки CRUD операций, измените последний аргумент в определении службы на:\r\n\r\n[sourcecode language="xml"]\r\n&lt;argument&gt;SonataNewsBundle:PostAdmin&lt;/argument&gt;\r\n[/sourcecode]\r\n\r\nИли, если вы используете конфигурационный файл в формате YML,\r\n\r\n[sourcecode language="plain"]\r\nservices:\r\n   sonata.news.admin.post:\r\n      class: Sonata\\NewsBundle\\Admin\\PostAdmin\r\n      tags:\r\n        - { name: sonata.admin, manager_type: orm, group: sonata_blog, label: post }\r\n      arguments: [null, Sonata\\NewsBundle\\Entity\\Post, SonataNewsBundle:PostAdmin]\r\n[/sourcecode]\r\nМожно расширить Sonata\\AdminBundle\\Admin\\Admin класс, чтобы минимизировать количество кода для написания. Этот базовый административный-класс использует службу маршрутизации для создания маршрутов. Обратите внимание, что вы можете использовать оба формата: или Bundle:Controller- формат или имя службы чтобы указать, какой контроллер загрузить. Если вы укажите null вместо SonataNewsBundle: PostAdmin, вам не нужно будет создавать класс контроллера, система будет использовать контроллер по умолчанию.', '4 Sonata Admin Bundle Architecture', '', 'inherit', 'open', 'open', '', '62-revision-33', '', '', '2013-06-16 09:31:27', '2013-06-16 09:31:27', '', 62, 'http://blog/62-revision-33/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(115, 1, '2013-06-17 17:29:37', '2013-06-17 17:29:37', 'Источник <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/routing.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/routing.html</a>\r\n\r\nСтандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса. В Admin-классе есть 2 метода для управления маршрутами:\r\n<ul>\r\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\r\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\r\n</ul>\r\n<h2>Routing Definition (Определение маршрутов)</h2>\r\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\r\n\r\n[php]\r\n&lt;?php \r\nclass PostAdmin extends Admin\r\n{\r\n    protected $baseRouteName = ''news_post_admin'';\r\n}\r\n[/php]\r\n\r\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.\r\n\r\nТоже свойственно и baseRoutePattern.\r\n\r\n<h2>Routing usage (Использование маршрутизации)</h2>\r\n\r\nВнутри CRUD-шаблона, маршрут может быть сгенерирован через Admin-класс.\r\n[php]\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'') }}&quot;&gt;List&lt;/a&gt;\r\n\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'', params|merge(''page'': 1) }}&quot;&gt;List&lt;/a&gt;\r\n[/php]\r\n\r\n<h2>Create a route (Создание маршрута)</h2>\r\n\r\nСоздание новых маршрутов не составит труда, достаточно определить их в Admin-классе. Но, только административные маршруты могут так объявляться. Конечно, в контроллере должно быть определено соответсвующее действие.\r\nТак как маршруты всегда генерируются через административный контекст, они могут быть определены только по имени(name).\r\n\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        $collection-&gt;add(''duplicate'');\r\n        $collection-&gt;add(''view'', $this-&gt;getRouterIdParameter().''/view'');\r\n    }\r\n}\r\n[/php]\r\n\r\n<h2>Removing a route (Удаление маршрута)</h2>\r\n\r\nЛюбой зарегистрированный маршрут может быть с лёгкостью удален.\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        $collection-&gt;remove(''delete'');\r\n    }\r\n}\r\n[/php]\r\nЕсли вы хотите отключить все Sonata-маршруты по умолчанию, за исключением нескольких, следует использовать clearExcept() метод. Этот метод принимает в параметры массив маршрутов, которые НЕ подлежат удалению.\r\n[php]&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        //Only `list` and `edit` route will be active\r\n        $collection-&gt;clearExcept(array(''list'', ''edit''));\r\n    }\r\n}\r\n[/php]\r\nДля удаления всех маршрутов по-умолчанию следует использовать clear() метод.\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        //All routes are removed\r\n        $collection-&gt;clear();\r\n    }\r\n}\r\n[/php]\r\n\r\n<h2>Persistent parameters ()</h2>\r\nВ некоторых случаях, может потребоваться интерфейс для пробрасывания одинаковых параметров в разные действия.  Вместо того чтобы устанавливать их в шаблоне или делать другие странные хаки, вы можете определить getPersistentParameters метод. Этот метод будет использован при генерации ссылок.\r\n[php]\r\n&lt;?php\r\nclass MediaAdmin extends Admin\r\n{\r\n    public function getPersistentParameters()\r\n    {\r\n        if (!$this-&gt;getRequest()) {\r\n            return array();\r\n        }\r\n\r\n        return array(\r\n            ''provider'' =&gt; $this-&gt;getRequest()-&gt;get(''provider''),\r\n            ''context''  =&gt; $this-&gt;getRequest()-&gt;get(''context'', ''default''),\r\n        );\r\n    }\r\n}\r\n\r\n// the result :\r\n//   $admin-&gt;generateUrl(''create'') =&gt; /admin/module/create?context=default\r\n[/php]', '6 Routing', '', 'publish', 'open', 'open', '', '6-routing', '', '', '2013-06-18 05:07:53', '2013-06-18 05:07:53', '', 0, 'http://blog/?p=115', 0, 'post', '', 0),
(116, 1, '2013-06-17 17:29:36', '2013-06-17 17:29:36', 'Стандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса.\nВ Admin-классе есть 2 метода для управления маршрутами:\n<ul>\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\n</ul>\n\n<h2>Routing Definition (Определение маршрутов)</h2>\n\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\n[php]\n&lt;?php\nclass PostAdmin extends Admin\n{\n    protected $baseRouteName = ''news_post_admin'';\n}\n[/php]\n\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.', '6 Routing', '', 'inherit', 'open', 'open', '', '115-revision', '', '', '2013-06-17 17:29:36', '2013-06-17 17:29:36', '', 115, 'http://blog/115-revision/', 0, 'revision', '', 0),
(117, 1, '2013-06-17 17:29:37', '2013-06-17 17:29:37', 'Стандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса.\r\nВ Admin-классе есть 2 метода для управления маршрутами:\r\n<ul>\r\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\r\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\r\n</ul>\r\n\r\n<h2>Routing Definition (Определение маршрутов)</h2>\r\n\r\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\r\n[php]\r\n&lt;?php\r\nclass PostAdmin extends Admin\r\n{\r\n    protected $baseRouteName = ''news_post_admin'';\r\n}\r\n[/php]\r\n\r\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.', '6 Routing', '', 'inherit', 'open', 'open', '', '115-revision-2', '', '', '2013-06-17 17:29:37', '2013-06-17 17:29:37', '', 115, 'http://blog/115-revision-2/', 0, 'revision', '', 0),
(118, 1, '2013-06-17 17:48:36', '2013-06-17 17:48:36', 'Стандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса. В Admin-классе есть 2 метода для управления маршрутами:\n<ul>\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\n</ul>\n<h2>Routing Definition (Определение маршрутов)</h2>\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\n\n[php]\n&lt;?php \nclass PostAdmin extends Admin\n{\n    protected $baseRouteName = ''news_post_admin'';\n}\n[/php]\n\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.\n\nТоже свойственно и baseRoutePattern.\n\n<h2>Routing usage (Использование маршрутизации)</h2>\n\nВнутри CRUD-шаблона, маршрут может быть сгенерирован через Admin-класс.\n[php]\n&lt;a href=&quot;{{ admin.generateUrl(''list'') }}&quot;&gt;List&lt;/a&gt;\n\n&lt;a href=&quot;{{ admin.generateUrl(''list'', params|merge(''page'': 1) }}&quot;&gt;List&lt;/a&gt;\n[/php]\n\n<h2>Create a route (Создание маршрута)</h2>\n\nСоздание новых маршрутов не составит труда, достаточно определить их в Admin-классе. Но, только административные маршруты могут так объявляться. Конечно, в контроллере должно быть определено соответсвующее действие.\nТак как маршруты всегда генерируются через административный контекст, они могут быть определены только по имени(name).\n\n[php]\n&lt;?php\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\n\nclass MediaAdmin extends Admin\n{\n    protected function configureRoutes(RouteCollection $collection)\n    {\n        $collection-&gt;add(''duplicate'');\n        $collection-&gt;add(''view'', $this-&gt;getRouterIdParameter().''/view'');\n    }\n}\n[/php]\n\n<h2>Removing a route (Удаление маршрута)</h2>\n\nЛюбой зарегистрированный маршрут может быть с лёгкостью удален.\n[php]\n&lt;?php\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\n\nclass MediaAdmin extends Admin\n{\n    protected function configureRoutes(RouteCollection $collection)\n    {\n        $collection-&gt;remove(''delete'');\n    }\n}\n[/php]\nЕсли вы хотите отключить все Sonata-маршруты по умолчанию, за исключением нескольких, следует использовать clearExcept() метод. Этот метод принимает в параметры массив маршрутов, которые НЕ подлежат удалению.\n[php]&lt;?php\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\n\nclass MediaAdmin extends Admin\n{\n    protected function configureRoutes(RouteCollection $collection)\n    {\n        //Only `list` and `edit` route will be active\n        $collection-&gt;clearExcept(array(''list'', ''edit''));\n    }\n}\n[/php]\nДля удаления всех маршрутов по-умолчанию следует использовать clear() метод.\n[php]\n&lt;?php\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\n\nclass MediaAdmin extends Admin\n{\n    protected function configureRoutes(RouteCollection $collection)\n    {\n        //All routes are removed\n        $collection-&gt;clear();\n    }\n}\n[/php]\n\n<h2>Persistent parameters ()</h2>\nВ некоторых случаях, может потребоваться интерфейс для пробрасывания одинаковых параметров в разные действия.  Вместо того чтобы устанавливать их в шаблоне или делать другие странные хаки, вы можете определить getPersistentParameters метод. Этот метод будет использован при генерации ссылок\n\nIn some cases, the interface might be required to pass the same parameters across the different Admin‘s actions. Instead of setting them in the template or doing other weird hacks, you can define a getPersistentParameters method. This method will be used when a link is being generated.\n[php]\n&lt;?php\nclass MediaAdmin extends Admin\n{\n    public function getPersistentParameters()\n    {\n        if (!$this-&gt;getRequest()) {\n            return array();\n        }\n\n        return array(\n            ''provider'' =&gt; $this-&gt;getRequest()-&gt;get(''provider''),\n            ''context''  =&gt; $this-&gt;getRequest()-&gt;get(''context'', ''default''),\n        );\n    }\n}\n\n// the result :\n//   $admin-&gt;generateUrl(''create'') =&gt; /admin/module/create?context=default\n[/php]', '6 Routing', '', 'inherit', 'open', 'open', '', '115-autosave', '', '', '2013-06-17 17:48:36', '2013-06-17 17:48:36', '', 115, 'http://blog/115-autosave/', 0, 'revision', '', 0),
(119, 1, '2013-06-17 17:30:02', '2013-06-17 17:30:02', 'Стандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса.\r\nВ Admin-классе есть 2 метода для управления маршрутами:\r\n<ul>\r\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\r\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\r\n</ul>\r\n\r\n<h2>Routing Definition (Определение маршрутов)</h2>\r\n\r\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\r\n[php]\r\n&lt;?php\r\nclass PostAdmin extends Admin\r\n{\r\n    protected $baseRouteName = ''news_post_admin'';\r\n}\r\n[/php]\r\n\r\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.\r\n\r\nТоже свойственно и baseRoutePattern.', '6 Routing', '', 'inherit', 'open', 'open', '', '115-revision-3', '', '', '2013-06-17 17:30:02', '2013-06-17 17:30:02', '', 115, 'http://blog/115-revision-3/', 0, 'revision', '', 0),
(120, 1, '2013-06-17 17:32:34', '2013-06-17 17:32:34', 'Стандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса. В Admin-классе есть 2 метода для управления маршрутами:\r\n<ul>\r\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\r\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\r\n</ul>\r\n<h2>Routing Definition (Определение маршрутов)</h2>\r\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\r\n\r\n[php]\r\n&lt;?php \r\nclass PostAdmin extends Admin\r\n{\r\n    protected $baseRouteName = ''news_post_admin'';\r\n}\r\n[/php]\r\n\r\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.\r\n\r\nТоже свойственно и baseRoutePattern.\r\n\r\n<h2>Routing usage (Использование маршрутизации)</h2>\r\n\r\nВнутри CRUD-шаблона, маршрут может быть сгенерирован через Admin-класс.\r\n[php]\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'') }}&quot;&gt;List&lt;/a&gt;\r\n\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'', params|merge(''page'': 1) }}&quot;&gt;List&lt;/a&gt;\r\n[/php]\r\n', '6 Routing', '', 'inherit', 'open', 'open', '', '115-revision-4', '', '', '2013-06-17 17:32:34', '2013-06-17 17:32:34', '', 115, 'http://blog/115-revision-4/', 0, 'revision', '', 0),
(121, 1, '2013-06-17 17:48:54', '2013-06-17 17:48:54', 'Стандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса. В Admin-классе есть 2 метода для управления маршрутами:\r\n<ul>\r\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\r\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\r\n</ul>\r\n<h2>Routing Definition (Определение маршрутов)</h2>\r\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\r\n\r\n[php]\r\n&lt;?php \r\nclass PostAdmin extends Admin\r\n{\r\n    protected $baseRouteName = ''news_post_admin'';\r\n}\r\n[/php]\r\n\r\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.\r\n\r\nТоже свойственно и baseRoutePattern.\r\n\r\n<h2>Routing usage (Использование маршрутизации)</h2>\r\n\r\nВнутри CRUD-шаблона, маршрут может быть сгенерирован через Admin-класс.\r\n[php]\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'') }}&quot;&gt;List&lt;/a&gt;\r\n\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'', params|merge(''page'': 1) }}&quot;&gt;List&lt;/a&gt;\r\n[/php]\r\n\r\n<h2>Create a route (Создание маршрута)</h2>\r\n\r\nСоздание новых маршрутов не составит труда, достаточно определить их в Admin-классе. Но, только административные маршруты могут так объявляться. Конечно, в контроллере должно быть определено соответсвующее действие.\r\nТак как маршруты всегда генерируются через административный контекст, они могут быть определены только по имени(name).\r\n\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        $collection-&gt;add(''duplicate'');\r\n        $collection-&gt;add(''view'', $this-&gt;getRouterIdParameter().''/view'');\r\n    }\r\n}\r\n[/php]\r\n\r\n<h2>Removing a route (Удаление маршрута)</h2>\r\n\r\nЛюбой зарегистрированный маршрут может быть с лёгкостью удален.\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        $collection-&gt;remove(''delete'');\r\n    }\r\n}\r\n[/php]\r\nЕсли вы хотите отключить все Sonata-маршруты по умолчанию, за исключением нескольких, следует использовать clearExcept() метод. Этот метод принимает в параметры массив маршрутов, которые НЕ подлежат удалению.\r\n[php]&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        //Only `list` and `edit` route will be active\r\n        $collection-&gt;clearExcept(array(''list'', ''edit''));\r\n    }\r\n}\r\n[/php]\r\nДля удаления всех маршрутов по-умолчанию следует использовать clear() метод.\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        //All routes are removed\r\n        $collection-&gt;clear();\r\n    }\r\n}\r\n[/php]\r\n\r\n<h2>Persistent parameters ()</h2>\r\nВ некоторых случаях, может потребоваться интерфейс для пробрасывания одинаковых параметров в разные действия.  Вместо того чтобы устанавливать их в шаблоне или делать другие странные хаки, вы можете определить getPersistentParameters метод. Этот метод будет использован при генерации ссылок.\r\n[php]\r\n&lt;?php\r\nclass MediaAdmin extends Admin\r\n{\r\n    public function getPersistentParameters()\r\n    {\r\n        if (!$this-&gt;getRequest()) {\r\n            return array();\r\n        }\r\n\r\n        return array(\r\n            ''provider'' =&gt; $this-&gt;getRequest()-&gt;get(''provider''),\r\n            ''context''  =&gt; $this-&gt;getRequest()-&gt;get(''context'', ''default''),\r\n        );\r\n    }\r\n}\r\n\r\n// the result :\r\n//   $admin-&gt;generateUrl(''create'') =&gt; /admin/module/create?context=default\r\n[/php]', '6 Routing', '', 'inherit', 'open', 'open', '', '115-revision-5', '', '', '2013-06-17 17:48:54', '2013-06-17 17:48:54', '', 115, 'http://blog/115-revision-5/', 0, 'revision', '', 0),
(122, 1, '2013-06-17 17:50:20', '2013-06-17 17:50:20', 'Стандартные маршруты используемые в CRUD-контроллере доступны из Admin-класса. В Admin-классе есть 2 метода для управления маршрутами:\r\n<ul>\r\n	<li>getRoutes(): Возвращает доступные маршруты;</li>\r\n	<li>generateUrl($name, $options): Генерирует соответствующий маршрут.</li>\r\n</ul>\r\n<h2>Routing Definition (Определение маршрутов)</h2>\r\nВнутри Admin-класса вы можно задать baseRouteName свойство, которое представляет префикс маршрута.\r\n\r\n[php]\r\n&lt;?php \r\nclass PostAdmin extends Admin\r\n{\r\n    protected $baseRouteName = ''news_post_admin'';\r\n}\r\n[/php]\r\n\r\nЕсли baseRouteName не задано, тогда Admin-бандл сам его сгенерирует по в следующем формате: ‘admin_vendor_bundlename_entityname_action’. Если сгенерировать свойство не удастся, тогда будет выброшено исключение RuntimeException.\r\n\r\nТоже свойственно и baseRoutePattern.\r\n\r\n<h2>Routing usage (Использование маршрутизации)</h2>\r\n\r\nВнутри CRUD-шаблона, маршрут может быть сгенерирован через Admin-класс.\r\n[php]\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'') }}&quot;&gt;List&lt;/a&gt;\r\n\r\n&lt;a href=&quot;{{ admin.generateUrl(''list'', params|merge(''page'': 1) }}&quot;&gt;List&lt;/a&gt;\r\n[/php]\r\n\r\n<h2>Create a route (Создание маршрута)</h2>\r\n\r\nСоздание новых маршрутов не составит труда, достаточно определить их в Admin-классе. Но, только административные маршруты могут так объявляться. Конечно, в контроллере должно быть определено соответсвующее действие.\r\nТак как маршруты всегда генерируются через административный контекст, они могут быть определены только по имени(name).\r\n\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        $collection-&gt;add(''duplicate'');\r\n        $collection-&gt;add(''view'', $this-&gt;getRouterIdParameter().''/view'');\r\n    }\r\n}\r\n[/php]\r\n\r\n<h2>Removing a route (Удаление маршрута)</h2>\r\n\r\nЛюбой зарегистрированный маршрут может быть с лёгкостью удален.\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        $collection-&gt;remove(''delete'');\r\n    }\r\n}\r\n[/php]\r\nЕсли вы хотите отключить все Sonata-маршруты по умолчанию, за исключением нескольких, следует использовать clearExcept() метод. Этот метод принимает в параметры массив маршрутов, которые НЕ подлежат удалению.\r\n[php]&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        //Only `list` and `edit` route will be active\r\n        $collection-&gt;clearExcept(array(''list'', ''edit''));\r\n    }\r\n}\r\n[/php]\r\nДля удаления всех маршрутов по-умолчанию следует использовать clear() метод.\r\n[php]\r\n&lt;?php\r\nuse Sonata\\AdminBundle\\Route\\RouteCollection;\r\n\r\nclass MediaAdmin extends Admin\r\n{\r\n    protected function configureRoutes(RouteCollection $collection)\r\n    {\r\n        //All routes are removed\r\n        $collection-&gt;clear();\r\n    }\r\n}\r\n[/php]\r\n\r\n<h2>Persistent parameters ()</h2>\r\nВ некоторых случаях, может потребоваться интерфейс для пробрасывания одинаковых параметров в разные действия.  Вместо того чтобы устанавливать их в шаблоне или делать другие странные хаки, вы можете определить getPersistentParameters метод. Этот метод будет использован при генерации ссылок.\r\n[php]\r\n&lt;?php\r\nclass MediaAdmin extends Admin\r\n{\r\n    public function getPersistentParameters()\r\n    {\r\n        if (!$this-&gt;getRequest()) {\r\n            return array();\r\n        }\r\n\r\n        return array(\r\n            ''provider'' =&gt; $this-&gt;getRequest()-&gt;get(''provider''),\r\n            ''context''  =&gt; $this-&gt;getRequest()-&gt;get(''context'', ''default''),\r\n        );\r\n    }\r\n}\r\n\r\n// the result :\r\n//   $admin-&gt;generateUrl(''create'') =&gt; /admin/module/create?context=default\r\n[/php]', '6 Routing', '', 'inherit', 'open', 'open', '', '115-revision-6', '', '', '2013-06-17 17:50:20', '2013-06-17 17:50:20', '', 115, 'http://blog/115-revision-6/', 0, 'revision', '', 0),
(123, 1, '2013-06-19 18:31:09', '2013-06-19 18:31:09', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html</a>\r\nМассовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n\r\n<h2>Defining new actions (определение новых действий)</h2>\r\n\r\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\r\n\r\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In your Admin class\r\n\r\npublic function getBatchActions()\r\n{\r\n    // retrieve the default (currently only the delete action) actions\r\n    $actions = parent::getBatchActions();\r\n\r\n    // check user permissions\r\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\r\n        $actions[''merge'']=[\r\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\r\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\r\n        ];\r\n\r\n    }\r\n\r\n    return $actions;\r\n}\r\n[/php]\r\n\r\n<h2> (Optional) Overriding the batch selection template. (Необязательно) Переопределение шаблона Выбор серии</h2>\r\n\r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один вид выбора. \r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один выбор рода. Таким образом, вы должны переопределить list__batch.html.twig шаблон для отображения как чекбокс (выбор источника) так и радиобатон (выбор цели) для каждого ряда модели. См. механизм переопределения бандлов Symfony.\r\n[code]\r\n{# in Acme/ProjectBundle/Resources/views/CRUD/list__batch.html.twig #}\r\n\r\n{# See SonataAdminBundle:CRUD:list__batch.html.twig for the current default template #}\r\n&lt;td class=&quot;sonata-ba-list-field sonata-ba-list-field-batch&quot;&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;idx[]&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n\r\n    {# the new radio #}\r\n    &lt;input type=&quot;radio&quot; name=&quot;targetId&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n&lt;/td&gt;\r\n[/code]\r\nи добавьте это\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/ProjectBundle/AcmeProjectBundle.php\r\n\r\npublic function getParent()\r\n{\r\n    return ''SonataAdminBundle'';\r\n}\r\n[/php]\r\n\r\n<h2>(Optional) Overriding the default relevancy check function. (Необязательно) Переопределение функция проверки релевантности по-умолчанию</h2>\r\n\r\nПо умолчанию массовые действия не выполняются, если ни одна модель не была выбрана, и пользователь получает уведомление об отсутствии такой выборки. Если ваше пользовательская массовая операция нуждается в более сложной логике, чтобы определить, можно ли выполнить действие или нет, просто определите batchActionMyActionIsRelevant метод в CRUDController классе. Эта проверка выполняется перед всеми подтверждения, чтобы убедиться, что на самом деле есть что подтверждать. Этот метод может возвращать три различных значения:\r\n<ul>\r\n	<li>true: Массовое действие актуально и может быть применено.</li>\r\n	<li>a string: Массовое действие не актуально с переданными параметрами в текущем запросе(например, отсутствуют данные о цели для действия слияния). Возвращаемая строка содержит информацию для юзера, почему действие не выполнено.</li>\r\n	<li>false: Тоже что и предыдущее, только со стандартным нотиыикационным сообщением - “action aborted, no model selected”.</li>\r\n</ul>\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/Controller/CRUDController.php\r\n\r\npublic function batchActionMergeIsRelevant(array $normalizedSelectedIds, $allEntitiesSelected)\r\n{\r\n    // here you have access to all POST parameters, if you use some custom ones\r\n    // POST parameters are kept even after the confirmation page.\r\n    $parameterBag = $this-&gt;get(''request'')-&gt;request;\r\n\r\n    // check that a target has been chosen\r\n    if (!$parameterBag-&gt;has(''targetId'')) {\r\n        return ''flash_batch_merge_no_target'';\r\n    }\r\n\r\n    $normalizedTargetId = $parameterBag-&gt;get(''targetId'');\r\n\r\n    // if all entities are selected, a merge can be done\r\n    if ($allEntitiesSelected) {\r\n        return true;\r\n    }\r\n\r\n    // filter out the target from the selected models\r\n    $normalizedSelectedIds = array_filter($normalizedSelectedIds,\r\n        function($normalizedSelectedId) use($normalizedTargetId){\r\n            return $normalizedSelectedId !== $normalizedTargetId;\r\n        }\r\n    );\r\n\r\n    // if at least one but not the target model is selected, a merge can be done.\r\n    return count($normalizedSelectedIds) &gt; 0;\r\n}\r\n[/php]\r\n\r\n<h2>Define the core action logic. Определение основной логики массовых операций</h2>\r\n\r\nМетод batchActionMyAction будет выполняться для обеспечения основной логики. Выбранные модели передаются методу через извлечение аргументов запроса. Если по каким-то причинам имеет смысл выполнение вашей массовой операции без метода выборки по-умолчанию (например, Вы определили иначе, на уровне шаблонов, выбор модели с более низкой детализацией), переданный запрос является пустым.\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/Controller/CRUDController.php\r\n\r\npublic function batchActionMerge(ProxyQueryInterface $selectedModelQuery)\r\n{\r\n    if ($this-&gt;admin-&gt;isGranted(''EDIT'') === false || $this-&gt;admin-&gt;isGranted(''DELETE'') === false)\r\n    {\r\n        throw new AccessDeniedException();\r\n    }\r\n\r\n    $request = $this-&gt;get(''request'');\r\n    $modelManager = $this-&gt;admin-&gt;getModelManager();\r\n\r\n    $target = $modelManager-&gt;find($this-&gt;admin-&gt;getClass(), $request-&gt;get(''targetId''));\r\n\r\n    if( $target === null){\r\n        $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_info'', ''flash_batch_merge_no_target'');\r\n\r\n        return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\r\n    }\r\n\r\n    $selectedModels = $selectedModelQuery-&gt;execute();\r\n\r\n    // do the merge work here\r\n\r\n    try {\r\n        foreach ($selectedModels as $selectedModel) {\r\n            $modelManager-&gt;delete($selectedModel);\r\n        }\r\n\r\n        $modelManager-&gt;update($selectedModel);\r\n    } catch (\\Exception $e) {\r\n        $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_error'', ''flash_batch_merge_error'');\r\n\r\n        return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\r\n    }\r\n\r\n    $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_success'', ''flash_batch_merge_success'');\r\n\r\n    return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\r\n}\r\n[/php]', '13 Batch actions (массовые операции)', '', 'publish', 'open', 'open', '', '13-batch-actions-massovyie-operatsii', '', '', '2013-06-19 19:50:40', '2013-06-19 19:50:40', '', 0, 'http://blog/?p=123', 0, 'post', '', 0),
(124, 1, '2013-06-19 18:30:33', '2013-06-19 18:30:33', 'Массовые операции это операции запускаемые на множестве выбранных моделей(все, all of them or only a specific subset).', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision', '', '', '2013-06-19 18:30:33', '2013-06-19 18:30:33', '', 123, 'http://blog/123-revision/', 0, 'revision', '', 0),
(125, 1, '2013-06-19 19:48:59', '2013-06-19 19:48:59', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html</a>\nМассовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\n\n<h2>Defining new actions (определение новых действий)</h2>\n\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\n\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\n\n[php]\n&lt;?php\n\n// In your Admin class\n\npublic function getBatchActions()\n{\n    // retrieve the default (currently only the delete action) actions\n    $actions = parent::getBatchActions();\n\n    // check user permissions\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\n        $actions[''merge'']=[\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\n        ];\n\n    }\n\n    return $actions;\n}\n[/php]\n\n<h2> (Optional) Overriding the batch selection template. (Необязательно) Переопределение шаблона Выбор серии</h2>\n\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один вид выбора. \nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один выбор рода. Таким образом, вы должны переопределить list__batch.html.twig шаблон для отображения как чекбокс (выбор источника) так и радиобатон (выбор цели) для каждого ряда модели. См. механизм переопределения бандлов Symfony.\n[code]\n{# in Acme/ProjectBundle/Resources/views/CRUD/list__batch.html.twig #}\n\n{# See SonataAdminBundle:CRUD:list__batch.html.twig for the current default template #}\n&lt;td class=&quot;sonata-ba-list-field sonata-ba-list-field-batch&quot;&gt;\n    &lt;input type=&quot;checkbox&quot; name=&quot;idx[]&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\n\n    {# the new radio #}\n    &lt;input type=&quot;radio&quot; name=&quot;targetId&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\n&lt;/td&gt;\n[/code]\nи добавьте это\n[php]\n&lt;?php\n\n// In Acme/ProjectBundle/AcmeProjectBundle.php\n\npublic function getParent()\n{\n    return ''SonataAdminBundle'';\n}\n[/php]\n\n<h2>(Optional) Overriding the default relevancy check function. (Необязательно) Переопределение функция проверки релевантности по-умолчанию</h2>\n\nПо умолчанию массовые действия не выполняются, если ни одна модель не была выбрана, и пользователь получает уведомление об отсутствии такой выборки. Если ваше пользовательская массовая операция нуждается в более сложной логике, чтобы определить, можно ли выполнить действие или нет, просто определите batchActionMyActionIsRelevant метод в CRUDController классе. Эта проверка выполняется перед всеми подтверждения, чтобы убедиться, что на самом деле есть что подтверждать. Этот метод может возвращать три различных значения:\n<ul>\n	<li>true: Массовое действие актуально и может быть применено.</li>\n	<li>a string: Массовое действие не актуально с переданными параметрами в текущем запросе(например, отсутствуют данные о цели для действия слияния). Возвращаемая строка содержит информацию для юзера, почему действие не выполнено.</li>\n	<li>false: Тоже что и предыдущее, только со стандартным нотиыикационным сообщением - “action aborted, no model selected”.</li>\n</ul>\n[php]\n&lt;?php\n\n// In Acme/Controller/CRUDController.php\n\npublic function batchActionMergeIsRelevant(array $normalizedSelectedIds, $allEntitiesSelected)\n{\n    // here you have access to all POST parameters, if you use some custom ones\n    // POST parameters are kept even after the confirmation page.\n    $parameterBag = $this-&gt;get(''request'')-&gt;request;\n\n    // check that a target has been chosen\n    if (!$parameterBag-&gt;has(''targetId'')) {\n        return ''flash_batch_merge_no_target'';\n    }\n\n    $normalizedTargetId = $parameterBag-&gt;get(''targetId'');\n\n    // if all entities are selected, a merge can be done\n    if ($allEntitiesSelected) {\n        return true;\n    }\n\n    // filter out the target from the selected models\n    $normalizedSelectedIds = array_filter($normalizedSelectedIds,\n        function($normalizedSelectedId) use($normalizedTargetId){\n            return $normalizedSelectedId !== $normalizedTargetId;\n        }\n    );\n\n    // if at least one but not the target model is selected, a merge can be done.\n    return count($normalizedSelectedIds) &gt; 0;\n}\n[/php]\n\n<h2>Define the core action logic. Определение основной логики массовых операций<\\h2>\n\nМетод batchActionMyAction будет выполняться для обеспечения основной логики. Выбранные модели передаются методу через извлечение аргументов запроса. Если по каким-то причинам имеет смысл выполнение вашей массовой операции без метода выборки по-умолчанию (например, Вы определили иначе, на уровне шаблонов, выбор модели с более низкой детализацией), п запроса является пустым.\n\n[php]\n&lt;?php\n\n// In Acme/Controller/CRUDController.php\n\npublic function batchActionMerge(ProxyQueryInterface $selectedModelQuery)\n{\n    if ($this-&gt;admin-&gt;isGranted(''EDIT'') === false || $this-&gt;admin-&gt;isGranted(''DELETE'') === false)\n    {\n        throw new AccessDeniedException();\n    }\n\n    $request = $this-&gt;get(''request'');\n    $modelManager = $this-&gt;admin-&gt;getModelManager();\n\n    $target = $modelManager-&gt;find($this-&gt;admin-&gt;getClass(), $request-&gt;get(''targetId''));\n\n    if( $target === null){\n        $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_info'', ''flash_batch_merge_no_target'');\n\n        return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\n    }\n\n    $selectedModels = $selectedModelQuery-&gt;execute();\n\n    // do the merge work here\n\n    try {\n        foreach ($selectedModels as $selectedModel) {\n            $modelManager-&gt;delete($selectedModel);\n        }\n\n        $modelManager-&gt;update($selectedModel);\n    } catch (\\Exception $e) {\n        $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_error'', ''flash_batch_merge_error'');\n\n        return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\n    }\n\n    $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_success'', ''flash_batch_merge_success'');\n\n    return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\n}\n[/php]', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-autosave', '', '', '2013-06-19 19:48:59', '2013-06-19 19:48:59', '', 123, 'http://blog/123-autosave/', 0, 'revision', '', 0),
(126, 1, '2013-06-19 18:31:09', '2013-06-19 18:31:09', 'Массовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision-2', '', '', '2013-06-19 18:31:09', '2013-06-19 18:31:09', '', 123, 'http://blog/123-revision-2/', 0, 'revision', '', 0);
INSERT INTO `wp_posts` (`ID`, `post_author`, `post_date`, `post_date_gmt`, `post_content`, `post_title`, `post_excerpt`, `post_status`, `comment_status`, `ping_status`, `post_password`, `post_name`, `to_ping`, `pinged`, `post_modified`, `post_modified_gmt`, `post_content_filtered`, `post_parent`, `guid`, `menu_order`, `post_type`, `post_mime_type`, `comment_count`) VALUES
(127, 1, '2013-06-19 18:36:33', '2013-06-19 18:36:33', 'Массовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n\r\n<h2>Defining new actions (определение новых действий)</h2>\r\n\r\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\r\n\r\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In your Admin class\r\n\r\npublic function getBatchActions()\r\n{\r\n    // retrieve the default (currently only the delete action) actions\r\n    $actions = parent::getBatchActions();\r\n\r\n    // check user permissions\r\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\r\n        $actions[''merge'']=[\r\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\r\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\r\n        ];\r\n\r\n    }\r\n\r\n    return $actions;\r\n}\r\n[/php]', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision-3', '', '', '2013-06-19 18:36:33', '2013-06-19 18:36:33', '', 123, 'http://blog/123-revision-3/', 0, 'revision', '', 0),
(128, 1, '2013-06-19 19:02:24', '2013-06-19 19:02:24', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html</a>\r\nМассовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n\r\n<h2>Defining new actions (определение новых действий)</h2>\r\n\r\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\r\n\r\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In your Admin class\r\n\r\npublic function getBatchActions()\r\n{\r\n    // retrieve the default (currently only the delete action) actions\r\n    $actions = parent::getBatchActions();\r\n\r\n    // check user permissions\r\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\r\n        $actions[''merge'']=[\r\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\r\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\r\n        ];\r\n\r\n    }\r\n\r\n    return $actions;\r\n}\r\n[/php]\r\n\r\n<h2> (Optional) Overriding the batch selection template. (Необязательно) Переопределение шаблона Выбор серии</h2>\r\n\r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один вид выбора. \r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один выбор рода. Таким образом, вы должны переопределить list__batch.html.twig шаблон для отображения как чекбокс (выбор источника) так и радиобатон (выбор цели) для каждого ряда модели. См. механизм переопределения бандлов Symfony.\r\n[php]\r\n{# in Acme/ProjectBundle/Resources/views/CRUD/list__batch.html.twig #}\r\n\r\n{# See SonataAdminBundle:CRUD:list__batch.html.twig for the current default template #}\r\n&lt;td class=&quot;sonata-ba-list-field sonata-ba-list-field-batch&quot;&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;idx[]&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n\r\n    {# the new radio #}\r\n    &lt;input type=&quot;radio&quot; name=&quot;targetId&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n&lt;/td&gt;\r\n[/php]\r\nи добавьте это\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/ProjectBundle/AcmeProjectBundle.php\r\n\r\npublic function getParent()\r\n{\r\n    return ''SonataAdminBundle'';\r\n}\r\n[/php]\r\n\r\n<h2>(Optional) Overriding the default relevancy check function. (Необязательно) Переопределение функция проверки релевантности по-умолчанию</h2>\r\n\r\n\r\n', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision-4', '', '', '2013-06-19 19:02:24', '2013-06-19 19:02:24', '', 123, 'http://blog/123-revision-4/', 0, 'revision', '', 0),
(129, 1, '2013-06-19 19:03:17', '2013-06-19 19:03:17', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html</a>\r\nМассовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n\r\n<h2>Defining new actions (определение новых действий)</h2>\r\n\r\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\r\n\r\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In your Admin class\r\n\r\npublic function getBatchActions()\r\n{\r\n    // retrieve the default (currently only the delete action) actions\r\n    $actions = parent::getBatchActions();\r\n\r\n    // check user permissions\r\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\r\n        $actions[''merge'']=[\r\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\r\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\r\n        ];\r\n\r\n    }\r\n\r\n    return $actions;\r\n}\r\n[/php]\r\n\r\n<h2> (Optional) Overriding the batch selection template. (Необязательно) Переопределение шаблона Выбор серии</h2>\r\n\r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один вид выбора. \r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один выбор рода. Таким образом, вы должны переопределить list__batch.html.twig шаблон для отображения как чекбокс (выбор источника) так и радиобатон (выбор цели) для каждого ряда модели. См. механизм переопределения бандлов Symfony.\r\n[htmlcode]\r\n{# in Acme/ProjectBundle/Resources/views/CRUD/list__batch.html.twig #}\r\n\r\n{# See SonataAdminBundle:CRUD:list__batch.html.twig for the current default template #}\r\n<td class="sonata-ba-list-field sonata-ba-list-field-batch">\r\n    <input type="checkbox" name="idx[]" value="{{ admin.id(object) }}" />\r\n\r\n    {# the new radio #}\r\n    <input type="radio" name="targetId" value="{{ admin.id(object) }}" />\r\n</td>\r\n[/htmlcode]\r\nи добавьте это\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/ProjectBundle/AcmeProjectBundle.php\r\n\r\npublic function getParent()\r\n{\r\n    return ''SonataAdminBundle'';\r\n}\r\n[/php]\r\n\r\n<h2>(Optional) Overriding the default relevancy check function. (Необязательно) Переопределение функция проверки релевантности по-умолчанию</h2>\r\n\r\n\r\n', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision-5', '', '', '2013-06-19 19:03:17', '2013-06-19 19:03:17', '', 123, 'http://blog/123-revision-5/', 0, 'revision', '', 0),
(130, 1, '2013-06-19 19:04:06', '2013-06-19 19:04:06', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html</a>\r\nМассовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n\r\n<h2>Defining new actions (определение новых действий)</h2>\r\n\r\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\r\n\r\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In your Admin class\r\n\r\npublic function getBatchActions()\r\n{\r\n    // retrieve the default (currently only the delete action) actions\r\n    $actions = parent::getBatchActions();\r\n\r\n    // check user permissions\r\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\r\n        $actions[''merge'']=[\r\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\r\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\r\n        ];\r\n\r\n    }\r\n\r\n    return $actions;\r\n}\r\n[/php]\r\n\r\n<h2> (Optional) Overriding the batch selection template. (Необязательно) Переопределение шаблона Выбор серии</h2>\r\n\r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один вид выбора. \r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один выбор рода. Таким образом, вы должны переопределить list__batch.html.twig шаблон для отображения как чекбокс (выбор источника) так и радиобатон (выбор цели) для каждого ряда модели. См. механизм переопределения бандлов Symfony.\r\n[code]\r\n{# in Acme/ProjectBundle/Resources/views/CRUD/list__batch.html.twig #}\r\n\r\n{# See SonataAdminBundle:CRUD:list__batch.html.twig for the current default template #}\r\n&lt;td class=&quot;sonata-ba-list-field sonata-ba-list-field-batch&quot;&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;idx[]&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n\r\n    {# the new radio #}\r\n    &lt;input type=&quot;radio&quot; name=&quot;targetId&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n&lt;/td&gt;\r\n[/code]\r\nи добавьте это\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/ProjectBundle/AcmeProjectBundle.php\r\n\r\npublic function getParent()\r\n{\r\n    return ''SonataAdminBundle'';\r\n}\r\n[/php]\r\n\r\n<h2>(Optional) Overriding the default relevancy check function. (Необязательно) Переопределение функция проверки релевантности по-умолчанию</h2>\r\n\r\n\r\n', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision-6', '', '', '2013-06-19 19:04:06', '2013-06-19 19:04:06', '', 123, 'http://blog/123-revision-6/', 0, 'revision', '', 0),
(131, 1, '2013-06-19 19:21:53', '2013-06-19 19:21:53', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html</a>\r\nМассовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n\r\n<h2>Defining new actions (определение новых действий)</h2>\r\n\r\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\r\n\r\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In your Admin class\r\n\r\npublic function getBatchActions()\r\n{\r\n    // retrieve the default (currently only the delete action) actions\r\n    $actions = parent::getBatchActions();\r\n\r\n    // check user permissions\r\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\r\n        $actions[''merge'']=[\r\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\r\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\r\n        ];\r\n\r\n    }\r\n\r\n    return $actions;\r\n}\r\n[/php]\r\n\r\n<h2> (Optional) Overriding the batch selection template. (Необязательно) Переопределение шаблона Выбор серии</h2>\r\n\r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один вид выбора. \r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один выбор рода. Таким образом, вы должны переопределить list__batch.html.twig шаблон для отображения как чекбокс (выбор источника) так и радиобатон (выбор цели) для каждого ряда модели. См. механизм переопределения бандлов Symfony.\r\n[code]\r\n{# in Acme/ProjectBundle/Resources/views/CRUD/list__batch.html.twig #}\r\n\r\n{# See SonataAdminBundle:CRUD:list__batch.html.twig for the current default template #}\r\n&lt;td class=&quot;sonata-ba-list-field sonata-ba-list-field-batch&quot;&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;idx[]&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n\r\n    {# the new radio #}\r\n    &lt;input type=&quot;radio&quot; name=&quot;targetId&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n&lt;/td&gt;\r\n[/code]\r\nи добавьте это\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/ProjectBundle/AcmeProjectBundle.php\r\n\r\npublic function getParent()\r\n{\r\n    return ''SonataAdminBundle'';\r\n}\r\n[/php]\r\n\r\n<h2>(Optional) Overriding the default relevancy check function. (Необязательно) Переопределение функция проверки релевантности по-умолчанию</h2>\r\n\r\nПо умолчанию массовые действия не выполняются, если ни одна модель не была выбрана, и пользователь получает уведомление об отсутствии такой выборки. Если ваше пользовательская массовая операция нуждается в более сложной логике, чтобы определить, можно ли выполнить действие или нет, просто определите batchActionMyActionIsRelevant метод в CRUDController классе. Эта проверка выполняется перед всеми подтверждения, чтобы убедиться, что на самом деле есть что подтверждать. Этот метод может возвращать три различных значения:\r\n<ul>\r\n	<li>true: Массовое действие актуально и может быть применено.</li>\r\n	<li>a string: Массовое действие не актуально с переданными параметрами в текущем запросе(например, отсутствуют данные о цели для действия слияния). Возвращаемая строка содержит информацию для юзера, почему действие не выполнено.</li>\r\n	<li>false: Тоже что и предыдущее, только со стандартным нотиыикационным сообщением - “action aborted, no model selected”.</li>\r\n</ul>\r\n\r\n', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision-7', '', '', '2013-06-19 19:21:53', '2013-06-19 19:21:53', '', 123, 'http://blog/123-revision-7/', 0, 'revision', '', 0),
(132, 1, '2013-06-19 19:49:07', '2013-06-19 19:49:07', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html">http://sonata-project.org/bundles/admin/2-1/doc/reference/batch_actions.html</a>\r\nМассовые операции это операции запускаемые на множестве выбранных моделей(все, или только определенное подмножество).\r\n\r\n<h2>Defining new actions (определение новых действий)</h2>\r\n\r\nВы можете легко добавить некоторые пользовательские массовые операции при отображении списка записей. По умолчанию действие Удалить позволяет удалить несколько записей сразу.\r\n\r\nПереопределите getBatchActions в своем админ-классе для определения пользовательских массовых операций. Например, здесь мы определяем новое действие слияния(merge).\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In your Admin class\r\n\r\npublic function getBatchActions()\r\n{\r\n    // retrieve the default (currently only the delete action) actions\r\n    $actions = parent::getBatchActions();\r\n\r\n    // check user permissions\r\n    if($this-&gt;hasRoute(''edit'') &amp;&amp; $this-&gt;isGranted(''EDIT'') &amp;&amp; $this-&gt;hasRoute(''delete'') &amp;&amp; $this-&gt;isGranted(''DELETE'')){\r\n        $actions[''merge'']=[\r\n            ''label''            =&gt; $this-&gt;trans(''action_merge'', array(), ''SonataAdminBundle''),\r\n            ''ask_confirmation'' =&gt; true // If true, a confirmation will be asked before performing the action\r\n        ];\r\n\r\n    }\r\n\r\n    return $actions;\r\n}\r\n[/php]\r\n\r\n<h2> (Optional) Overriding the batch selection template. (Необязательно) Переопределение шаблона Выбор серии</h2>\r\n\r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один вид выбора. \r\nОчевидно, что действия слияния требуется два вида отбора: набор исходной модели сливаются в одну целевую модель. По умолчанию, этот пакет только позволяют пользователю выбрать некоторые модели, но есть только один выбор рода. Таким образом, вы должны переопределить list__batch.html.twig шаблон для отображения как чекбокс (выбор источника) так и радиобатон (выбор цели) для каждого ряда модели. См. механизм переопределения бандлов Symfony.\r\n[code]\r\n{# in Acme/ProjectBundle/Resources/views/CRUD/list__batch.html.twig #}\r\n\r\n{# See SonataAdminBundle:CRUD:list__batch.html.twig for the current default template #}\r\n&lt;td class=&quot;sonata-ba-list-field sonata-ba-list-field-batch&quot;&gt;\r\n    &lt;input type=&quot;checkbox&quot; name=&quot;idx[]&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n\r\n    {# the new radio #}\r\n    &lt;input type=&quot;radio&quot; name=&quot;targetId&quot; value=&quot;{{ admin.id(object) }}&quot; /&gt;\r\n&lt;/td&gt;\r\n[/code]\r\nи добавьте это\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/ProjectBundle/AcmeProjectBundle.php\r\n\r\npublic function getParent()\r\n{\r\n    return ''SonataAdminBundle'';\r\n}\r\n[/php]\r\n\r\n<h2>(Optional) Overriding the default relevancy check function. (Необязательно) Переопределение функция проверки релевантности по-умолчанию</h2>\r\n\r\nПо умолчанию массовые действия не выполняются, если ни одна модель не была выбрана, и пользователь получает уведомление об отсутствии такой выборки. Если ваше пользовательская массовая операция нуждается в более сложной логике, чтобы определить, можно ли выполнить действие или нет, просто определите batchActionMyActionIsRelevant метод в CRUDController классе. Эта проверка выполняется перед всеми подтверждения, чтобы убедиться, что на самом деле есть что подтверждать. Этот метод может возвращать три различных значения:\r\n<ul>\r\n	<li>true: Массовое действие актуально и может быть применено.</li>\r\n	<li>a string: Массовое действие не актуально с переданными параметрами в текущем запросе(например, отсутствуют данные о цели для действия слияния). Возвращаемая строка содержит информацию для юзера, почему действие не выполнено.</li>\r\n	<li>false: Тоже что и предыдущее, только со стандартным нотиыикационным сообщением - “action aborted, no model selected”.</li>\r\n</ul>\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/Controller/CRUDController.php\r\n\r\npublic function batchActionMergeIsRelevant(array $normalizedSelectedIds, $allEntitiesSelected)\r\n{\r\n    // here you have access to all POST parameters, if you use some custom ones\r\n    // POST parameters are kept even after the confirmation page.\r\n    $parameterBag = $this-&gt;get(''request'')-&gt;request;\r\n\r\n    // check that a target has been chosen\r\n    if (!$parameterBag-&gt;has(''targetId'')) {\r\n        return ''flash_batch_merge_no_target'';\r\n    }\r\n\r\n    $normalizedTargetId = $parameterBag-&gt;get(''targetId'');\r\n\r\n    // if all entities are selected, a merge can be done\r\n    if ($allEntitiesSelected) {\r\n        return true;\r\n    }\r\n\r\n    // filter out the target from the selected models\r\n    $normalizedSelectedIds = array_filter($normalizedSelectedIds,\r\n        function($normalizedSelectedId) use($normalizedTargetId){\r\n            return $normalizedSelectedId !== $normalizedTargetId;\r\n        }\r\n    );\r\n\r\n    // if at least one but not the target model is selected, a merge can be done.\r\n    return count($normalizedSelectedIds) &gt; 0;\r\n}\r\n[/php]\r\n\r\n<h2>Define the core action logic. Определение основной логики массовых операций<\\h2>\r\n\r\nМетод batchActionMyAction будет выполняться для обеспечения основной логики. Выбранные модели передаются методу через извлечение аргументов запроса. Если по каким-то причинам имеет смысл выполнение вашей массовой операции без метода выборки по-умолчанию (например, Вы определили иначе, на уровне шаблонов, выбор модели с более низкой детализацией), переданный запрос является пустым.\r\n\r\n[php]\r\n&lt;?php\r\n\r\n// In Acme/Controller/CRUDController.php\r\n\r\npublic function batchActionMerge(ProxyQueryInterface $selectedModelQuery)\r\n{\r\n    if ($this-&gt;admin-&gt;isGranted(''EDIT'') === false || $this-&gt;admin-&gt;isGranted(''DELETE'') === false)\r\n    {\r\n        throw new AccessDeniedException();\r\n    }\r\n\r\n    $request = $this-&gt;get(''request'');\r\n    $modelManager = $this-&gt;admin-&gt;getModelManager();\r\n\r\n    $target = $modelManager-&gt;find($this-&gt;admin-&gt;getClass(), $request-&gt;get(''targetId''));\r\n\r\n    if( $target === null){\r\n        $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_info'', ''flash_batch_merge_no_target'');\r\n\r\n        return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\r\n    }\r\n\r\n    $selectedModels = $selectedModelQuery-&gt;execute();\r\n\r\n    // do the merge work here\r\n\r\n    try {\r\n        foreach ($selectedModels as $selectedModel) {\r\n            $modelManager-&gt;delete($selectedModel);\r\n        }\r\n\r\n        $modelManager-&gt;update($selectedModel);\r\n    } catch (\\Exception $e) {\r\n        $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_error'', ''flash_batch_merge_error'');\r\n\r\n        return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\r\n    }\r\n\r\n    $this-&gt;get(''session'')-&gt;setFlash(''sonata_flash_success'', ''flash_batch_merge_success'');\r\n\r\n    return new RedirectResponse($this-&gt;admin-&gt;generateUrl(''list'',$this-&gt;admin-&gt;getFilterParameters()));\r\n}\r\n[/php]', '13 Batch actions (массовые операции)', '', 'inherit', 'open', 'open', '', '123-revision-8', '', '', '2013-06-19 19:49:07', '2013-06-19 19:49:07', '', 123, 'http://blog/123-revision-8/', 0, 'revision', '', 0),
(133, 1, '2013-06-23 18:06:16', '2013-06-23 18:06:16', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/saving_hooks.html"></a>.\r\n\r\nПри сохранении в модели указанного объекта всегда вызывается 2 админ-метода. Их можно расширять для добавления пользовательской бизнес логики.\r\n<ul>\r\n	<li>новый объект : prePersist($object) / postPersist($object)</li>\r\n	<li>отредактированный объект : preUpdate($object) / postUpdate($object)</li>\r\n	<li>удаленный объект : preRemove($object) / postRemove($object)</li>\r\n</ul>\r\n\r\n<h2>Example used with the FOS/UserBundle( Пример используемый в FOS/UserBundle)</h2>\r\n\r\nFOSUserBundle обеспечивает аутентификацию для вашего Symfony2 проекта, и совместим с Doctrine ORM & ODM. См. https://github.com/FriendsOfSymfony/UserBundle получить дополнительные сведения.\r\n\r\nСистема управления пользователями требует выполнения конкретных вызовов, при обновлении пароля или логина пользователя. Вот как данную задачу решает Admin-бандл при помощи PrePersist хука.\r\n[php]\r\n&lt;?php\r\nnamespace FOS\\UserBundle\\Admin\\Entity;\r\n\r\nuse Sonata\\AdminBundle\\Admin\\Admin;\r\nuse FOS\\UserBundle\\Model\\UserManagerInterface;\r\n\r\nclass UserAdmin extends Admin\r\n{\r\n    protected function configureFormFields(FormMapper $formMapper)\r\n    {\r\n        $formMapper\r\n            -&gt;with(''General'')\r\n                -&gt;add(''username'')\r\n                -&gt;add(''email'')\r\n                -&gt;add(''plainPassword'', ''text'')\r\n            -&gt;end()\r\n            -&gt;with(''Groups'')\r\n                -&gt;add(''groups'', ''sonata_type_model'', array(''required'' =&gt; false))\r\n            -&gt;end()\r\n            -&gt;with(''Management'')\r\n                -&gt;add(''roles'', ''sonata_security_roles'', array( ''multiple'' =&gt; true))\r\n                -&gt;add(''locked'', null, array(''required'' =&gt; false))\r\n                -&gt;add(''expired'', null, array(''required'' =&gt; false))\r\n                -&gt;add(''enabled'', null, array(''required'' =&gt; false))\r\n                -&gt;add(''credentialsExpired'', null, array(''required'' =&gt; false))\r\n            -&gt;end()\r\n        ;\r\n    }\r\n\r\n    public function preUpdate($user)\r\n    {\r\n        $this-&gt;getUserManager()-&gt;updateCanonicalFields($user);\r\n        $this-&gt;getUserManager()-&gt;updatePassword($user);\r\n    }\r\n\r\n    public function setUserManager(UserManagerInterface $userManager)\r\n    {\r\n        $this-&gt;userManager = $userManager;\r\n    }\r\n\r\n    /**\r\n     * @return UserManagerInterface\r\n     */\r\n    public function getUserManager()\r\n    {\r\n        return $this-&gt;userManager;\r\n    }\r\n}\r\n[/php]\r\n\r\nДекларация сервиса, в которой UserManager вводится в Admin-класс.\r\n\r\n[php]\r\n&lt;service id=&quot;fos.user.admin.user&quot; class=&quot;%fos.user.admin.user.class%&quot;&gt;\r\n    &lt;tag name=&quot;sonata.admin&quot; manager_type=&quot;orm&quot; group=&quot;fos_user&quot; /&gt;\r\n    &lt;argument /&gt;\r\n    &lt;argument&gt;%fos.user.admin.user.entity%&lt;/argument&gt;\r\n    &lt;argument /&gt;\r\n\r\n    &lt;call method=&quot;setUserManager&quot;&gt;\r\n        &lt;argument type=''service'' id=''fos_user.user_manager'' /&gt;\r\n    &lt;/call&gt;\r\n&lt;/service&gt;\r\n[/php]\r\n\r\n[php][/php]\r\n\r\n', '7 Saving hooks (Хуки сохранения)', '', 'publish', 'open', 'open', '', '7-saving-hooks-huki-sohraneniya', '', '', '2013-06-24 17:31:19', '2013-06-24 17:31:19', '', 0, 'http://blog/?p=133', 0, 'post', '', 0),
(134, 1, '2013-06-23 18:03:56', '2013-06-23 18:03:56', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/saving_hooks.html"></a>.\n\n', '7 Saving hooks (Хуки сохранения)', '', 'inherit', 'open', 'open', '', '133-revision', '', '', '2013-06-23 18:03:56', '2013-06-23 18:03:56', '', 133, 'http://blog/133-revision/', 0, 'revision', '', 0),
(135, 1, '2013-06-24 17:10:55', '2013-06-24 17:10:55', '', '8 Form Types', '', 'trash', 'open', 'open', '', '8-form-types', '', '', '2013-06-24 17:31:50', '2013-06-24 17:31:50', '', 0, 'http://blog/?p=135', 0, 'post', '', 0),
(136, 1, '2013-06-24 17:32:43', '2013-06-24 17:32:43', '<h2>sonata_type_model</h2>\r\n\r\nТип Модель позволяет выбрать существующую модель или создать новые. Этот тип не позволяет напрямую редактировать выбранную модель.\r\n\r\n<h2>sonata_type_admin</h2>\r\n\r\nАдмин тип, будет делегировать создание формы для этой модели связанному Админ-классу. Этот тип будет полезен при каскадном изменении или создании связанных моделей.\r\n\r\n<h2>sonata_type_collection</h2>\r\n\r\nТип коллекций предназначен для ручного создания или редактирования коллекций моделей. Строки могут быть добавлены и удалены, а ваш слой абстракции модели должен позволяет редактировать inline.\r\n\r\nСОВЕТ: JQuery событие происходит после того как была добавлена ​​(sonata-collection-item-added ) или удалена (sonata-collection-item-deleted_) строка. Можно прицепить к ним кастомный JavaScript импортированный в шаблоны (например, добавить виджет Календарь к только что добавленному полю даты).\r\n', '8 Типы форм. Form Types ', '', 'publish', 'open', 'open', '', '8-form-types-2', '', '', '2013-06-24 17:48:21', '2013-06-24 17:48:21', '', 0, 'http://blog/?p=136', 0, 'post', '', 0),
(137, 1, '2013-06-24 17:30:43', '2013-06-24 17:30:43', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/saving_hooks.html"></a>.\n\nПри сохранении в модели указанного объекта всегда вызывается 2 админ-метода. Их можно расширять для добавления пользовательской бизнес логики.\n<ul>\n	<li>новый объект : prePersist($object) / postPersist($object)</li>\n	<li>отредактированный объект : preUpdate($object) / postUpdate($object)</li>\n	<li>удаленный объект : preRemove($object) / postRemove($object)</li>\n</ul>\n\n<h2>Example used with the FOS/UserBundle( Пример используемый в FOS/UserBundle)</h2>\n\nFOSUserBundle обеспечивает аутентификацию для вашего Symfony2 проекта, и совместим с Doctrine ORM & ODM. См. https://github.com/FriendsOfSymfony/UserBundle получить дополнительные сведения.\n\nСистема управления пользователями требует выполнения конкретных вызовов, при обновлении пароля или логина пользователя. Вот как данную задачу решает Admin-бандл при помощи PrePersist хука.\n[php]\n&lt;?php\nnamespace FOS\\UserBundle\\Admin\\Entity;\n\nuse Sonata\\AdminBundle\\Admin\\Admin;\nuse FOS\\UserBundle\\Model\\UserManagerInterface;\n\nclass UserAdmin extends Admin\n{\n    protected function configureFormFields(FormMapper $formMapper)\n    {\n        $formMapper\n            -&gt;with(''General'')\n                -&gt;add(''username'')\n                -&gt;add(''email'')\n                -&gt;add(''plainPassword'', ''text'')\n            -&gt;end()\n            -&gt;with(''Groups'')\n                -&gt;add(''groups'', ''sonata_type_model'', array(''required'' =&gt; false))\n            -&gt;end()\n            -&gt;with(''Management'')\n                -&gt;add(''roles'', ''sonata_security_roles'', array( ''multiple'' =&gt; true))\n                -&gt;add(''locked'', null, array(''required'' =&gt; false))\n                -&gt;add(''expired'', null, array(''required'' =&gt; false))\n                -&gt;add(''enabled'', null, array(''required'' =&gt; false))\n                -&gt;add(''credentialsExpired'', null, array(''required'' =&gt; false))\n            -&gt;end()\n        ;\n    }\n\n    public function preUpdate($user)\n    {\n        $this-&gt;getUserManager()-&gt;updateCanonicalFields($user);\n        $this-&gt;getUserManager()-&gt;updatePassword($user);\n    }\n\n    public function setUserManager(UserManagerInterface $userManager)\n    {\n        $this-&gt;userManager = $userManager;\n    }\n\n    /**\n     * @return UserManagerInterface\n     */\n    public function getUserManager()\n    {\n        return $this-&gt;userManager;\n    }\n}\n[/php]\nДекларация сервиса, в которой UserManager вводится в Администратор класса.\n\n[php][/php]\n\n[php][/php]\n\n', '7 Saving hooks (Хуки сохранения)', '', 'inherit', 'open', 'open', '', '133-autosave', '', '', '2013-06-24 17:30:43', '2013-06-24 17:30:43', '', 133, 'http://blog/133-autosave/', 0, 'revision', '', 0),
(138, 1, '2013-06-23 18:06:16', '2013-06-23 18:06:16', 'Источник: <a href="http://sonata-project.org/bundles/admin/2-1/doc/reference/saving_hooks.html"></a>.\r\n\r\n', '7 Saving hooks (Хуки сохранения)', '', 'inherit', 'open', 'open', '', '133-revision-2', '', '', '2013-06-23 18:06:16', '2013-06-23 18:06:16', '', 133, 'http://blog/133-revision-2/', 0, 'revision', '', 0),
(139, 1, '2013-06-24 17:10:55', '2013-06-24 17:10:55', '', '8 Form Types', '', 'inherit', 'open', 'open', '', '135-revision', '', '', '2013-06-24 17:10:55', '2013-06-24 17:10:55', '', 135, 'http://blog/135-revision/', 0, 'revision', '', 0),
(140, 1, '2013-06-24 17:18:36', '2013-06-24 17:18:36', '', '8 Form Types', '', 'inherit', 'open', 'open', '', '136-revision', '', '', '2013-06-24 17:18:36', '2013-06-24 17:18:36', '', 136, 'http://blog/136-revision/', 0, 'revision', '', 0),
(141, 1, '2013-06-24 17:47:45', '2013-06-24 17:47:45', '<h2>sonata_type_model</h2>\n\nТип Модель позволяет выбрать существующую модель или создать новые. Этот тип не позволяет напрямую редактировать выбранную модель.\n\n<h2>sonata_type_admin</h2>\n\nАдмин тип, будет делегировать создание формы для этой модели связанному Админ-классу. Этот тип будет полезен при каскадном изменении или создании связанных моделей.\n\n<h2>sonata_type_collection</h2>\n\nТип коллекций предназначен для ручного создания или редактирования коллекций моделей. Строки могут быть добавлены и удалены, а ваш слой абстракции модели должен позволяет редактировать inline.\n\nСОВЕТ: JQuery событие происходит после того как была добавлена ​​(sonata-collection-item-added ) или удалена (sonata-collection-item-deleted_) строка. Можно прицепить к ним кастомный JavaScript импортированный в шаблоны (например, добавить виджет Календарь просто добавили поле даты)\n\n<h2></h2>\n<h2></h2>\n<h2></h2>\n<h2></h2>\n<h2></h2>\n<h2></h2>\n<h2></h2>\n<h2></h2>\n<h2></h2>\n<h2></h2>', '8 Типы форм. Form Types ', '', 'inherit', 'open', 'open', '', '136-autosave', '', '', '2013-06-24 17:47:45', '2013-06-24 17:47:45', '', 136, 'http://blog/136-autosave/', 0, 'revision', '', 0),
(142, 1, '2013-06-24 17:32:43', '2013-06-24 17:32:43', '', '8 Типы форм. Form Types ', '', 'inherit', 'open', 'open', '', '136-revision-2', '', '', '2013-06-24 17:32:43', '2013-06-24 17:32:43', '', 136, 'http://blog/136-revision-2/', 0, 'revision', '', 0),
(143, 1, '2013-06-04 03:55:07', '2013-06-04 03:55:07', 'Генерировать css+js\r\n<code>php app/console assets:install</code>\r\n\r\nГенерировать getters and setters\r\n<code>php app/console doctrine:generate:entities Acme/StoreBundle/Entity/Product</code>\r\n\r\nПример создания класса сущности\r\n<code>php app/console doctrine:generate:entity --entity="AcmeStoreBundle:Product" --fields="name:string(255) price:float description:text"</code>\r\n\r\nСоздание таблиц/схемы для базы данных\r\n<code>php app/console doctrine:schema:update --force</code>\r\n\r\n<a title="Источник" href="http://symfony-gu.ru/documentation/ru/html/book/doctrine.html" target="_blank">http://symfony-gu.ru/documentation/ru/html/book/doctrine.html</a>', 'Памятка полезностей', '', 'inherit', 'open', 'open', '', '47-revision-5', '', '', '2013-06-04 03:55:07', '2013-06-04 03:55:07', '', 47, 'http://blog/47-revision-5/', 0, 'revision', '', 0),
(144, 1, '2013-06-30 17:38:37', '0000-00-00 00:00:00', '', 'Авто-черновик', '', 'auto-draft', 'open', 'open', '', '', '', '', '2013-06-30 17:38:37', '0000-00-00 00:00:00', '', 0, 'http://blog/?p=144', 0, 'post', '', 0),
(145, 1, '2013-06-30 17:40:54', '0000-00-00 00:00:00', 'Почему мне кажется что я смогу простить тебя ', '', '', 'draft', 'open', 'open', '', '', '', '', '2013-06-30 17:40:54', '2013-06-30 17:40:54', '', 0, 'http://blog/?p=145', 0, 'post', '', 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_terms`
--

CREATE TABLE IF NOT EXISTS `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) NOT NULL DEFAULT '',
  `slug` varchar(200) NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  UNIQUE KEY `slug` (`slug`),
  KEY `name` (`name`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

--
-- Dumping data for table `wp_terms`
--

INSERT INTO `wp_terms` (`term_id`, `name`, `slug`, `term_group`) VALUES
(1, 'Новости', '%d0%bd%d0%be%d0%b2%d0%be%d1%81%d1%82%d0%b8', 0),
(2, 'Статьи', 'articles', 0),
(3, 'Sonata Admin Bundle', 'sonata-admin-bundle', 0),
(4, 'Top Menu', 'top-menu', 0),
(5, 'private', 'private', 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_term_relationships`
--

CREATE TABLE IF NOT EXISTS `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `wp_term_relationships`
--

INSERT INTO `wp_term_relationships` (`object_id`, `term_taxonomy_id`, `term_order`) VALUES
(1, 2, 0),
(47, 1, 0),
(55, 3, 0),
(62, 3, 0),
(111, 4, 0),
(112, 4, 0),
(115, 3, 0),
(123, 3, 0),
(133, 3, 0),
(135, 1, 0),
(136, 3, 0),
(145, 5, 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_term_taxonomy`
--

CREATE TABLE IF NOT EXISTS `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) NOT NULL DEFAULT '',
  `description` longtext NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=6 ;

--
-- Dumping data for table `wp_term_taxonomy`
--

INSERT INTO `wp_term_taxonomy` (`term_taxonomy_id`, `term_id`, `taxonomy`, `description`, `parent`, `count`) VALUES
(1, 1, 'category', '', 0, 1),
(2, 2, 'category', 'В этой рубрике располагаются полезные статьи.', 0, 1),
(3, 3, 'category', 'Здесь располагаются мои наблюдения и переводы касающиеся Sonata Admin Bundle', 2, 6),
(4, 4, 'nav_menu', '', 0, 2),
(5, 5, 'category', '', 0, 0);

-- --------------------------------------------------------

--
-- Table structure for table `wp_usermeta`
--

CREATE TABLE IF NOT EXISTS `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) DEFAULT NULL,
  `meta_value` longtext,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=19 ;

--
-- Dumping data for table `wp_usermeta`
--

INSERT INTO `wp_usermeta` (`umeta_id`, `user_id`, `meta_key`, `meta_value`) VALUES
(1, 1, 'first_name', ''),
(2, 1, 'last_name', ''),
(3, 1, 'nickname', 'mice'),
(4, 1, 'description', ''),
(5, 1, 'rich_editing', 'true'),
(6, 1, 'comment_shortcuts', 'false'),
(7, 1, 'admin_color', 'fresh'),
(8, 1, 'use_ssl', '0'),
(9, 1, 'show_admin_bar_front', 'true'),
(10, 1, 'wp_capabilities', 'a:1:{s:13:"administrator";b:1;}'),
(11, 1, 'wp_user_level', '10'),
(12, 1, 'dismissed_wp_pointers', 'wp330_toolbar,wp330_saving_widgets,wp340_choose_image_from_library,wp340_customize_current_theme_link,wp350_media,xyz2,xyz3,xyz1'),
(13, 1, 'show_welcome_panel', '1'),
(14, 1, 'wp_dashboard_quick_press_last_post_id', '144'),
(15, 1, 'wp_user-settings', 'editor=html&hidetb=1&imgsize=thumbnail&align=left&ed_size=370'),
(16, 1, 'wp_user-settings-time', '1371373595'),
(17, 1, 'managenav-menuscolumnshidden', 'a:4:{i:0;s:11:"link-target";i:1;s:11:"css-classes";i:2;s:3:"xfn";i:3;s:11:"description";}'),
(18, 1, 'metaboxhidden_nav-menus', 'a:5:{i:0;s:8:"add-post";i:1;s:13:"add-portfolio";i:2;s:12:"add-post_tag";i:3;s:15:"add-post_format";i:4;s:22:"add-portfolio_category";}');

-- --------------------------------------------------------

--
-- Table structure for table `wp_users`
--

CREATE TABLE IF NOT EXISTS `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) NOT NULL DEFAULT '',
  `user_pass` varchar(64) NOT NULL DEFAULT '',
  `user_nicename` varchar(50) NOT NULL DEFAULT '',
  `user_email` varchar(100) NOT NULL DEFAULT '',
  `user_url` varchar(100) NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(60) NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;

--
-- Dumping data for table `wp_users`
--

INSERT INTO `wp_users` (`ID`, `user_login`, `user_pass`, `user_nicename`, `user_email`, `user_url`, `user_registered`, `user_activation_key`, `user_status`, `display_name`) VALUES
(1, 'mice', '$P$Bt0CUd3/WTZfkQLLJp/7V9Jw9WrqzQ.', 'mice', 'imychkova@gmail.com', '', '2013-05-31 18:08:55', '', 0, 'mice');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
